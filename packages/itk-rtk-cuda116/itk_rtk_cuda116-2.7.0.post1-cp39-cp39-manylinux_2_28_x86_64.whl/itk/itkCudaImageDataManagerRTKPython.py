# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCudaImageDataManagerRTKPython
else:
    import _itkCudaImageDataManagerRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkCudaDataManagerPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCudaImageRTKPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRTKPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkImageBaseRTKPython
import itk.itkImageRegionRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkPointRTKPython

def itkCudaImageDataManagerCICVF52_New():
    return itkCudaImageDataManagerCICVF52.New()

class itkCudaImageDataManagerCICVF52(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF52_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF52_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF52 *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF52"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerRTKPython.delete_itkCudaImageDataManagerCICVF52

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF52

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF52

        Create a new object of the class itkCudaImageDataManagerCICVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF52 in _itkCudaImageDataManagerRTKPython:
_itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF52_swigregister(itkCudaImageDataManagerCICVF52)

def itkCudaImageDataManagerCICVF53_New():
    return itkCudaImageDataManagerCICVF53.New()

class itkCudaImageDataManagerCICVF53(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF53_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF53_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF53 *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF53"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerRTKPython.delete_itkCudaImageDataManagerCICVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF53

        Create a new object of the class itkCudaImageDataManagerCICVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF53 in _itkCudaImageDataManagerRTKPython:
_itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF53_swigregister(itkCudaImageDataManagerCICVF53)

def itkCudaImageDataManagerCICVF54_New():
    return itkCudaImageDataManagerCICVF54.New()

class itkCudaImageDataManagerCICVF54(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCICVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCICVF54_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCICVF54_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageCVF54 *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageCVF54"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerRTKPython.delete_itkCudaImageDataManagerCICVF54

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCICVF54

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCICVF54

        Create a new object of the class itkCudaImageDataManagerCICVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCICVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCICVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCICVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCICVF54 in _itkCudaImageDataManagerRTKPython:
_itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCICVF54_swigregister(itkCudaImageDataManagerCICVF54)

def itkCudaImageDataManagerCIVF52_New():
    return itkCudaImageDataManagerCIVF52.New()

class itkCudaImageDataManagerCIVF52(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF52_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF52_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF52 *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF52"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerRTKPython.delete_itkCudaImageDataManagerCIVF52

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF52

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF52

        Create a new object of the class itkCudaImageDataManagerCIVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF52 in _itkCudaImageDataManagerRTKPython:
_itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF52_swigregister(itkCudaImageDataManagerCIVF52)

def itkCudaImageDataManagerCIVF53_New():
    return itkCudaImageDataManagerCIVF53.New()

class itkCudaImageDataManagerCIVF53(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF53_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF53_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF53 *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF53"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerRTKPython.delete_itkCudaImageDataManagerCIVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF53

        Create a new object of the class itkCudaImageDataManagerCIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF53 in _itkCudaImageDataManagerRTKPython:
_itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF53_swigregister(itkCudaImageDataManagerCIVF53)

def itkCudaImageDataManagerCIVF54_New():
    return itkCudaImageDataManagerCIVF54.New()

class itkCudaImageDataManagerCIVF54(itk.itkCudaDataManagerPython.itkCudaDataManager):
    r"""Proxy of C++ itkCudaImageDataManagerCIVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageDataManagerCIVF54_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageDataManagerCIVF54_Pointer"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_Clone(self)

    def GetModifiableGPUBufferedRegionIndex(self):
        r"""GetModifiableGPUBufferedRegionIndex(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_GetModifiableGPUBufferedRegionIndex(self)

    def GetGPUBufferedRegionIndex(self, *args):
        r"""
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        GetGPUBufferedRegionIndex(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_GetGPUBufferedRegionIndex(self, *args)

    def GetModifiableGPUBufferedRegionSize(self):
        r"""GetModifiableGPUBufferedRegionSize(self) -> itkCudaDataManager"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_GetModifiableGPUBufferedRegionSize(self)

    def GetGPUBufferedRegionSize(self, *args):
        r"""
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        GetGPUBufferedRegionSize(self) -> itkCudaDataManager
        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_GetGPUBufferedRegionSize(self, *args)

    def SetImagePointer(self, img):
        r"""
        SetImagePointer(self, img)

        Parameters
        ----------
        img: itkCudaImageVF54 *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_SetImagePointer(self, img)

    def GetImagePointer(self):
        r"""GetImagePointer(self) -> itkCudaImageVF54"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_GetImagePointer(self)

    def MakeCPUBufferUpToDate(self):
        r"""MakeCPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_MakeCPUBufferUpToDate(self)

    def MakeGPUBufferUpToDate(self):
        r"""MakeGPUBufferUpToDate(self)"""
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_MakeGPUBufferUpToDate(self)
    __swig_destroy__ = _itkCudaImageDataManagerRTKPython.delete_itkCudaImageDataManagerCIVF54

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageDataManagerCIVF54

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageDataManagerCIVF54

        Create a new object of the class itkCudaImageDataManagerCIVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageDataManagerCIVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageDataManagerCIVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageDataManagerCIVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageDataManagerCIVF54 in _itkCudaImageDataManagerRTKPython:
_itkCudaImageDataManagerRTKPython.itkCudaImageDataManagerCIVF54_swigregister(itkCudaImageDataManagerCIVF54)

