# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class APIIntegrationHubModelTopicDescriptionDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'status': 'str',
        'path': 'str',
        'support_ordering': 'bool',
        'enable_partitioning': 'bool'
    }

    attribute_map = {
        'status': 'status',
        'path': 'path',
        'support_ordering': 'supportOrdering',
        'enable_partitioning': 'enablePartitioning'
    }

    def __init__(self, status=None, path=None, support_ordering=None, enable_partitioning=None):  # noqa: E501
        """APIIntegrationHubModelTopicDescriptionDto - a model defined in Swagger"""  # noqa: E501
        self._status = None
        self._path = None
        self._support_ordering = None
        self._enable_partitioning = None
        self.discriminator = None
        if status is not None:
            self.status = status
        if path is not None:
            self.path = path
        if support_ordering is not None:
            self.support_ordering = support_ordering
        if enable_partitioning is not None:
            self.enable_partitioning = enable_partitioning

    @property
    def status(self):
        """Gets the status of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501


        :return: The status of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this APIIntegrationHubModelTopicDescriptionDto.


        :param status: The status of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def path(self):
        """Gets the path of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501


        :return: The path of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this APIIntegrationHubModelTopicDescriptionDto.


        :param path: The path of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501
        :type: str
        """

        self._path = path

    @property
    def support_ordering(self):
        """Gets the support_ordering of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501


        :return: The support_ordering of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501
        :rtype: bool
        """
        return self._support_ordering

    @support_ordering.setter
    def support_ordering(self, support_ordering):
        """Sets the support_ordering of this APIIntegrationHubModelTopicDescriptionDto.


        :param support_ordering: The support_ordering of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501
        :type: bool
        """

        self._support_ordering = support_ordering

    @property
    def enable_partitioning(self):
        """Gets the enable_partitioning of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501


        :return: The enable_partitioning of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501
        :rtype: bool
        """
        return self._enable_partitioning

    @enable_partitioning.setter
    def enable_partitioning(self, enable_partitioning):
        """Sets the enable_partitioning of this APIIntegrationHubModelTopicDescriptionDto.


        :param enable_partitioning: The enable_partitioning of this APIIntegrationHubModelTopicDescriptionDto.  # noqa: E501
        :type: bool
        """

        self._enable_partitioning = enable_partitioning

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(APIIntegrationHubModelTopicDescriptionDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, APIIntegrationHubModelTopicDescriptionDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
