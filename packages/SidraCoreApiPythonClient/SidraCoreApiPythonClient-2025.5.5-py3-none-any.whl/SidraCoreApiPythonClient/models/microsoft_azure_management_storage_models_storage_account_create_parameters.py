# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'sku': 'MicrosoftAzureManagementStorageModelsSku',
        'kind': 'str',
        'location': 'str',
        'extended_location': 'MicrosoftAzureManagementStorageModelsExtendedLocation',
        'tags': 'dict(str, str)',
        'identity': 'MicrosoftAzureManagementStorageModelsIdentity',
        'properties_allowed_copy_scope': 'str',
        'properties_public_network_access': 'str',
        'properties_sas_policy': 'MicrosoftAzureManagementStorageModelsSasPolicy',
        'properties_key_policy': 'MicrosoftAzureManagementStorageModelsKeyPolicy',
        'properties_custom_domain': 'MicrosoftAzureManagementStorageModelsCustomDomain',
        'properties_encryption': 'MicrosoftAzureManagementStorageModelsEncryption',
        'properties_network_acls': 'MicrosoftAzureManagementStorageModelsNetworkRuleSet',
        'properties_access_tier': 'MicrosoftAzureManagementStorageModelsAccessTier',
        'properties_azure_files_identity_based_authentication': 'MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication',
        'properties_supports_https_traffic_only': 'bool',
        'properties_is_sftp_enabled': 'bool',
        'properties_is_local_user_enabled': 'bool',
        'properties_is_hns_enabled': 'bool',
        'properties_large_file_shares_state': 'str',
        'properties_routing_preference': 'MicrosoftAzureManagementStorageModelsRoutingPreference',
        'properties_allow_blob_public_access': 'bool',
        'properties_minimum_tls_version': 'str',
        'properties_allow_shared_key_access': 'bool',
        'properties_is_nfs_v3_enabled': 'bool',
        'properties_allow_cross_tenant_replication': 'bool',
        'properties_default_to_o_auth_authentication': 'bool',
        'properties_immutable_storage_with_versioning': 'MicrosoftAzureManagementStorageModelsImmutableStorageAccount'
    }

    attribute_map = {
        'sku': 'sku',
        'kind': 'kind',
        'location': 'location',
        'extended_location': 'extendedLocation',
        'tags': 'tags',
        'identity': 'identity',
        'properties_allowed_copy_scope': 'properties.allowedCopyScope',
        'properties_public_network_access': 'properties.publicNetworkAccess',
        'properties_sas_policy': 'properties.sasPolicy',
        'properties_key_policy': 'properties.keyPolicy',
        'properties_custom_domain': 'properties.customDomain',
        'properties_encryption': 'properties.encryption',
        'properties_network_acls': 'properties.networkAcls',
        'properties_access_tier': 'properties.accessTier',
        'properties_azure_files_identity_based_authentication': 'properties.azureFilesIdentityBasedAuthentication',
        'properties_supports_https_traffic_only': 'properties.supportsHttpsTrafficOnly',
        'properties_is_sftp_enabled': 'properties.isSftpEnabled',
        'properties_is_local_user_enabled': 'properties.isLocalUserEnabled',
        'properties_is_hns_enabled': 'properties.isHnsEnabled',
        'properties_large_file_shares_state': 'properties.largeFileSharesState',
        'properties_routing_preference': 'properties.routingPreference',
        'properties_allow_blob_public_access': 'properties.allowBlobPublicAccess',
        'properties_minimum_tls_version': 'properties.minimumTlsVersion',
        'properties_allow_shared_key_access': 'properties.allowSharedKeyAccess',
        'properties_is_nfs_v3_enabled': 'properties.isNfsV3Enabled',
        'properties_allow_cross_tenant_replication': 'properties.allowCrossTenantReplication',
        'properties_default_to_o_auth_authentication': 'properties.defaultToOAuthAuthentication',
        'properties_immutable_storage_with_versioning': 'properties.immutableStorageWithVersioning'
    }

    def __init__(self, sku=None, kind=None, location=None, extended_location=None, tags=None, identity=None, properties_allowed_copy_scope=None, properties_public_network_access=None, properties_sas_policy=None, properties_key_policy=None, properties_custom_domain=None, properties_encryption=None, properties_network_acls=None, properties_access_tier=None, properties_azure_files_identity_based_authentication=None, properties_supports_https_traffic_only=None, properties_is_sftp_enabled=None, properties_is_local_user_enabled=None, properties_is_hns_enabled=None, properties_large_file_shares_state=None, properties_routing_preference=None, properties_allow_blob_public_access=None, properties_minimum_tls_version=None, properties_allow_shared_key_access=None, properties_is_nfs_v3_enabled=None, properties_allow_cross_tenant_replication=None, properties_default_to_o_auth_authentication=None, properties_immutable_storage_with_versioning=None):  # noqa: E501
        """MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters - a model defined in Swagger"""  # noqa: E501
        self._sku = None
        self._kind = None
        self._location = None
        self._extended_location = None
        self._tags = None
        self._identity = None
        self._properties_allowed_copy_scope = None
        self._properties_public_network_access = None
        self._properties_sas_policy = None
        self._properties_key_policy = None
        self._properties_custom_domain = None
        self._properties_encryption = None
        self._properties_network_acls = None
        self._properties_access_tier = None
        self._properties_azure_files_identity_based_authentication = None
        self._properties_supports_https_traffic_only = None
        self._properties_is_sftp_enabled = None
        self._properties_is_local_user_enabled = None
        self._properties_is_hns_enabled = None
        self._properties_large_file_shares_state = None
        self._properties_routing_preference = None
        self._properties_allow_blob_public_access = None
        self._properties_minimum_tls_version = None
        self._properties_allow_shared_key_access = None
        self._properties_is_nfs_v3_enabled = None
        self._properties_allow_cross_tenant_replication = None
        self._properties_default_to_o_auth_authentication = None
        self._properties_immutable_storage_with_versioning = None
        self.discriminator = None
        if sku is not None:
            self.sku = sku
        if kind is not None:
            self.kind = kind
        if location is not None:
            self.location = location
        if extended_location is not None:
            self.extended_location = extended_location
        if tags is not None:
            self.tags = tags
        if identity is not None:
            self.identity = identity
        if properties_allowed_copy_scope is not None:
            self.properties_allowed_copy_scope = properties_allowed_copy_scope
        if properties_public_network_access is not None:
            self.properties_public_network_access = properties_public_network_access
        if properties_sas_policy is not None:
            self.properties_sas_policy = properties_sas_policy
        if properties_key_policy is not None:
            self.properties_key_policy = properties_key_policy
        if properties_custom_domain is not None:
            self.properties_custom_domain = properties_custom_domain
        if properties_encryption is not None:
            self.properties_encryption = properties_encryption
        if properties_network_acls is not None:
            self.properties_network_acls = properties_network_acls
        if properties_access_tier is not None:
            self.properties_access_tier = properties_access_tier
        if properties_azure_files_identity_based_authentication is not None:
            self.properties_azure_files_identity_based_authentication = properties_azure_files_identity_based_authentication
        if properties_supports_https_traffic_only is not None:
            self.properties_supports_https_traffic_only = properties_supports_https_traffic_only
        if properties_is_sftp_enabled is not None:
            self.properties_is_sftp_enabled = properties_is_sftp_enabled
        if properties_is_local_user_enabled is not None:
            self.properties_is_local_user_enabled = properties_is_local_user_enabled
        if properties_is_hns_enabled is not None:
            self.properties_is_hns_enabled = properties_is_hns_enabled
        if properties_large_file_shares_state is not None:
            self.properties_large_file_shares_state = properties_large_file_shares_state
        if properties_routing_preference is not None:
            self.properties_routing_preference = properties_routing_preference
        if properties_allow_blob_public_access is not None:
            self.properties_allow_blob_public_access = properties_allow_blob_public_access
        if properties_minimum_tls_version is not None:
            self.properties_minimum_tls_version = properties_minimum_tls_version
        if properties_allow_shared_key_access is not None:
            self.properties_allow_shared_key_access = properties_allow_shared_key_access
        if properties_is_nfs_v3_enabled is not None:
            self.properties_is_nfs_v3_enabled = properties_is_nfs_v3_enabled
        if properties_allow_cross_tenant_replication is not None:
            self.properties_allow_cross_tenant_replication = properties_allow_cross_tenant_replication
        if properties_default_to_o_auth_authentication is not None:
            self.properties_default_to_o_auth_authentication = properties_default_to_o_auth_authentication
        if properties_immutable_storage_with_versioning is not None:
            self.properties_immutable_storage_with_versioning = properties_immutable_storage_with_versioning

    @property
    def sku(self):
        """Gets the sku of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The sku of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsSku
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param sku: The sku of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsSku
        """

        self._sku = sku

    @property
    def kind(self):
        """Gets the kind of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The kind of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param kind: The kind of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: str
        """

        self._kind = kind

    @property
    def location(self):
        """Gets the location of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The location of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param location: The location of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: str
        """

        self._location = location

    @property
    def extended_location(self):
        """Gets the extended_location of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The extended_location of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsExtendedLocation
        """
        return self._extended_location

    @extended_location.setter
    def extended_location(self, extended_location):
        """Sets the extended_location of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param extended_location: The extended_location of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsExtendedLocation
        """

        self._extended_location = extended_location

    @property
    def tags(self):
        """Gets the tags of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The tags of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param tags: The tags of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: dict(str, str)
        """

        self._tags = tags

    @property
    def identity(self):
        """Gets the identity of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The identity of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsIdentity
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param identity: The identity of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsIdentity
        """

        self._identity = identity

    @property
    def properties_allowed_copy_scope(self):
        """Gets the properties_allowed_copy_scope of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_allowed_copy_scope of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: str
        """
        return self._properties_allowed_copy_scope

    @properties_allowed_copy_scope.setter
    def properties_allowed_copy_scope(self, properties_allowed_copy_scope):
        """Sets the properties_allowed_copy_scope of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_allowed_copy_scope: The properties_allowed_copy_scope of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: str
        """

        self._properties_allowed_copy_scope = properties_allowed_copy_scope

    @property
    def properties_public_network_access(self):
        """Gets the properties_public_network_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_public_network_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: str
        """
        return self._properties_public_network_access

    @properties_public_network_access.setter
    def properties_public_network_access(self, properties_public_network_access):
        """Sets the properties_public_network_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_public_network_access: The properties_public_network_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: str
        """

        self._properties_public_network_access = properties_public_network_access

    @property
    def properties_sas_policy(self):
        """Gets the properties_sas_policy of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_sas_policy of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsSasPolicy
        """
        return self._properties_sas_policy

    @properties_sas_policy.setter
    def properties_sas_policy(self, properties_sas_policy):
        """Sets the properties_sas_policy of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_sas_policy: The properties_sas_policy of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsSasPolicy
        """

        self._properties_sas_policy = properties_sas_policy

    @property
    def properties_key_policy(self):
        """Gets the properties_key_policy of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_key_policy of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsKeyPolicy
        """
        return self._properties_key_policy

    @properties_key_policy.setter
    def properties_key_policy(self, properties_key_policy):
        """Sets the properties_key_policy of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_key_policy: The properties_key_policy of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsKeyPolicy
        """

        self._properties_key_policy = properties_key_policy

    @property
    def properties_custom_domain(self):
        """Gets the properties_custom_domain of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_custom_domain of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsCustomDomain
        """
        return self._properties_custom_domain

    @properties_custom_domain.setter
    def properties_custom_domain(self, properties_custom_domain):
        """Sets the properties_custom_domain of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_custom_domain: The properties_custom_domain of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsCustomDomain
        """

        self._properties_custom_domain = properties_custom_domain

    @property
    def properties_encryption(self):
        """Gets the properties_encryption of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_encryption of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsEncryption
        """
        return self._properties_encryption

    @properties_encryption.setter
    def properties_encryption(self, properties_encryption):
        """Sets the properties_encryption of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_encryption: The properties_encryption of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsEncryption
        """

        self._properties_encryption = properties_encryption

    @property
    def properties_network_acls(self):
        """Gets the properties_network_acls of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_network_acls of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsNetworkRuleSet
        """
        return self._properties_network_acls

    @properties_network_acls.setter
    def properties_network_acls(self, properties_network_acls):
        """Sets the properties_network_acls of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_network_acls: The properties_network_acls of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsNetworkRuleSet
        """

        self._properties_network_acls = properties_network_acls

    @property
    def properties_access_tier(self):
        """Gets the properties_access_tier of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_access_tier of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsAccessTier
        """
        return self._properties_access_tier

    @properties_access_tier.setter
    def properties_access_tier(self, properties_access_tier):
        """Sets the properties_access_tier of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_access_tier: The properties_access_tier of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsAccessTier
        """

        self._properties_access_tier = properties_access_tier

    @property
    def properties_azure_files_identity_based_authentication(self):
        """Gets the properties_azure_files_identity_based_authentication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_azure_files_identity_based_authentication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication
        """
        return self._properties_azure_files_identity_based_authentication

    @properties_azure_files_identity_based_authentication.setter
    def properties_azure_files_identity_based_authentication(self, properties_azure_files_identity_based_authentication):
        """Sets the properties_azure_files_identity_based_authentication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_azure_files_identity_based_authentication: The properties_azure_files_identity_based_authentication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication
        """

        self._properties_azure_files_identity_based_authentication = properties_azure_files_identity_based_authentication

    @property
    def properties_supports_https_traffic_only(self):
        """Gets the properties_supports_https_traffic_only of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_supports_https_traffic_only of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: bool
        """
        return self._properties_supports_https_traffic_only

    @properties_supports_https_traffic_only.setter
    def properties_supports_https_traffic_only(self, properties_supports_https_traffic_only):
        """Sets the properties_supports_https_traffic_only of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_supports_https_traffic_only: The properties_supports_https_traffic_only of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: bool
        """

        self._properties_supports_https_traffic_only = properties_supports_https_traffic_only

    @property
    def properties_is_sftp_enabled(self):
        """Gets the properties_is_sftp_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_is_sftp_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: bool
        """
        return self._properties_is_sftp_enabled

    @properties_is_sftp_enabled.setter
    def properties_is_sftp_enabled(self, properties_is_sftp_enabled):
        """Sets the properties_is_sftp_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_is_sftp_enabled: The properties_is_sftp_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: bool
        """

        self._properties_is_sftp_enabled = properties_is_sftp_enabled

    @property
    def properties_is_local_user_enabled(self):
        """Gets the properties_is_local_user_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_is_local_user_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: bool
        """
        return self._properties_is_local_user_enabled

    @properties_is_local_user_enabled.setter
    def properties_is_local_user_enabled(self, properties_is_local_user_enabled):
        """Sets the properties_is_local_user_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_is_local_user_enabled: The properties_is_local_user_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: bool
        """

        self._properties_is_local_user_enabled = properties_is_local_user_enabled

    @property
    def properties_is_hns_enabled(self):
        """Gets the properties_is_hns_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_is_hns_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: bool
        """
        return self._properties_is_hns_enabled

    @properties_is_hns_enabled.setter
    def properties_is_hns_enabled(self, properties_is_hns_enabled):
        """Sets the properties_is_hns_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_is_hns_enabled: The properties_is_hns_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: bool
        """

        self._properties_is_hns_enabled = properties_is_hns_enabled

    @property
    def properties_large_file_shares_state(self):
        """Gets the properties_large_file_shares_state of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_large_file_shares_state of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: str
        """
        return self._properties_large_file_shares_state

    @properties_large_file_shares_state.setter
    def properties_large_file_shares_state(self, properties_large_file_shares_state):
        """Sets the properties_large_file_shares_state of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_large_file_shares_state: The properties_large_file_shares_state of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: str
        """

        self._properties_large_file_shares_state = properties_large_file_shares_state

    @property
    def properties_routing_preference(self):
        """Gets the properties_routing_preference of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_routing_preference of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsRoutingPreference
        """
        return self._properties_routing_preference

    @properties_routing_preference.setter
    def properties_routing_preference(self, properties_routing_preference):
        """Sets the properties_routing_preference of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_routing_preference: The properties_routing_preference of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsRoutingPreference
        """

        self._properties_routing_preference = properties_routing_preference

    @property
    def properties_allow_blob_public_access(self):
        """Gets the properties_allow_blob_public_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_allow_blob_public_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: bool
        """
        return self._properties_allow_blob_public_access

    @properties_allow_blob_public_access.setter
    def properties_allow_blob_public_access(self, properties_allow_blob_public_access):
        """Sets the properties_allow_blob_public_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_allow_blob_public_access: The properties_allow_blob_public_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: bool
        """

        self._properties_allow_blob_public_access = properties_allow_blob_public_access

    @property
    def properties_minimum_tls_version(self):
        """Gets the properties_minimum_tls_version of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_minimum_tls_version of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: str
        """
        return self._properties_minimum_tls_version

    @properties_minimum_tls_version.setter
    def properties_minimum_tls_version(self, properties_minimum_tls_version):
        """Sets the properties_minimum_tls_version of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_minimum_tls_version: The properties_minimum_tls_version of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: str
        """

        self._properties_minimum_tls_version = properties_minimum_tls_version

    @property
    def properties_allow_shared_key_access(self):
        """Gets the properties_allow_shared_key_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_allow_shared_key_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: bool
        """
        return self._properties_allow_shared_key_access

    @properties_allow_shared_key_access.setter
    def properties_allow_shared_key_access(self, properties_allow_shared_key_access):
        """Sets the properties_allow_shared_key_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_allow_shared_key_access: The properties_allow_shared_key_access of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: bool
        """

        self._properties_allow_shared_key_access = properties_allow_shared_key_access

    @property
    def properties_is_nfs_v3_enabled(self):
        """Gets the properties_is_nfs_v3_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_is_nfs_v3_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: bool
        """
        return self._properties_is_nfs_v3_enabled

    @properties_is_nfs_v3_enabled.setter
    def properties_is_nfs_v3_enabled(self, properties_is_nfs_v3_enabled):
        """Sets the properties_is_nfs_v3_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_is_nfs_v3_enabled: The properties_is_nfs_v3_enabled of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: bool
        """

        self._properties_is_nfs_v3_enabled = properties_is_nfs_v3_enabled

    @property
    def properties_allow_cross_tenant_replication(self):
        """Gets the properties_allow_cross_tenant_replication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_allow_cross_tenant_replication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: bool
        """
        return self._properties_allow_cross_tenant_replication

    @properties_allow_cross_tenant_replication.setter
    def properties_allow_cross_tenant_replication(self, properties_allow_cross_tenant_replication):
        """Sets the properties_allow_cross_tenant_replication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_allow_cross_tenant_replication: The properties_allow_cross_tenant_replication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: bool
        """

        self._properties_allow_cross_tenant_replication = properties_allow_cross_tenant_replication

    @property
    def properties_default_to_o_auth_authentication(self):
        """Gets the properties_default_to_o_auth_authentication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_default_to_o_auth_authentication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: bool
        """
        return self._properties_default_to_o_auth_authentication

    @properties_default_to_o_auth_authentication.setter
    def properties_default_to_o_auth_authentication(self, properties_default_to_o_auth_authentication):
        """Sets the properties_default_to_o_auth_authentication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_default_to_o_auth_authentication: The properties_default_to_o_auth_authentication of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: bool
        """

        self._properties_default_to_o_auth_authentication = properties_default_to_o_auth_authentication

    @property
    def properties_immutable_storage_with_versioning(self):
        """Gets the properties_immutable_storage_with_versioning of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501


        :return: The properties_immutable_storage_with_versioning of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsImmutableStorageAccount
        """
        return self._properties_immutable_storage_with_versioning

    @properties_immutable_storage_with_versioning.setter
    def properties_immutable_storage_with_versioning(self, properties_immutable_storage_with_versioning):
        """Sets the properties_immutable_storage_with_versioning of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.


        :param properties_immutable_storage_with_versioning: The properties_immutable_storage_with_versioning of this MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsImmutableStorageAccount
        """

        self._properties_immutable_storage_with_versioning = properties_immutable_storage_with_versioning

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftAzureManagementStorageModelsStorageAccountCreateParameters):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
