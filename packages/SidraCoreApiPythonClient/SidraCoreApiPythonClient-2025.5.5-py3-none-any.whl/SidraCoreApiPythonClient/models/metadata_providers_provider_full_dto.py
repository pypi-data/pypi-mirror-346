# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MetadataProvidersProviderFullDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'item_id': 'str',
        'tags': 'list[MetadataTagsTagDTO]',
        'provider_size': 'int',
        'data_storage_unit_id': 'int',
        'creation_date': 'datetime',
        'owner': 'OwnerOwnerDto',
        'provider_name': 'str',
        'database_name': 'str',
        'description': 'str',
        'id_data_storage_unit': 'int',
        'detail': 'str'
    }

    attribute_map = {
        'id': 'id',
        'item_id': 'itemId',
        'tags': 'tags',
        'provider_size': 'providerSize',
        'data_storage_unit_id': 'dataStorageUnitId',
        'creation_date': 'creationDate',
        'owner': 'owner',
        'provider_name': 'providerName',
        'database_name': 'databaseName',
        'description': 'description',
        'id_data_storage_unit': 'idDataStorageUnit',
        'detail': 'detail'
    }

    def __init__(self, id=None, item_id=None, tags=None, provider_size=None, data_storage_unit_id=None, creation_date=None, owner=None, provider_name=None, database_name=None, description=None, id_data_storage_unit=None, detail=None):  # noqa: E501
        """MetadataProvidersProviderFullDTO - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._item_id = None
        self._tags = None
        self._provider_size = None
        self._data_storage_unit_id = None
        self._creation_date = None
        self._owner = None
        self._provider_name = None
        self._database_name = None
        self._description = None
        self._id_data_storage_unit = None
        self._detail = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if item_id is not None:
            self.item_id = item_id
        if tags is not None:
            self.tags = tags
        if provider_size is not None:
            self.provider_size = provider_size
        if data_storage_unit_id is not None:
            self.data_storage_unit_id = data_storage_unit_id
        if creation_date is not None:
            self.creation_date = creation_date
        if owner is not None:
            self.owner = owner
        if provider_name is not None:
            self.provider_name = provider_name
        if database_name is not None:
            self.database_name = database_name
        if description is not None:
            self.description = description
        if id_data_storage_unit is not None:
            self.id_data_storage_unit = id_data_storage_unit
        if detail is not None:
            self.detail = detail

    @property
    def id(self):
        """Gets the id of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The id of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MetadataProvidersProviderFullDTO.


        :param id: The id of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def item_id(self):
        """Gets the item_id of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The item_id of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this MetadataProvidersProviderFullDTO.


        :param item_id: The item_id of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: str
        """

        self._item_id = item_id

    @property
    def tags(self):
        """Gets the tags of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The tags of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: list[MetadataTagsTagDTO]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this MetadataProvidersProviderFullDTO.


        :param tags: The tags of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: list[MetadataTagsTagDTO]
        """

        self._tags = tags

    @property
    def provider_size(self):
        """Gets the provider_size of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The provider_size of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: int
        """
        return self._provider_size

    @provider_size.setter
    def provider_size(self, provider_size):
        """Sets the provider_size of this MetadataProvidersProviderFullDTO.


        :param provider_size: The provider_size of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: int
        """

        self._provider_size = provider_size

    @property
    def data_storage_unit_id(self):
        """Gets the data_storage_unit_id of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The data_storage_unit_id of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: int
        """
        return self._data_storage_unit_id

    @data_storage_unit_id.setter
    def data_storage_unit_id(self, data_storage_unit_id):
        """Sets the data_storage_unit_id of this MetadataProvidersProviderFullDTO.


        :param data_storage_unit_id: The data_storage_unit_id of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: int
        """

        self._data_storage_unit_id = data_storage_unit_id

    @property
    def creation_date(self):
        """Gets the creation_date of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The creation_date of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this MetadataProvidersProviderFullDTO.


        :param creation_date: The creation_date of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: datetime
        """

        self._creation_date = creation_date

    @property
    def owner(self):
        """Gets the owner of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The owner of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: OwnerOwnerDto
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this MetadataProvidersProviderFullDTO.


        :param owner: The owner of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: OwnerOwnerDto
        """

        self._owner = owner

    @property
    def provider_name(self):
        """Gets the provider_name of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The provider_name of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: str
        """
        return self._provider_name

    @provider_name.setter
    def provider_name(self, provider_name):
        """Sets the provider_name of this MetadataProvidersProviderFullDTO.


        :param provider_name: The provider_name of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: str
        """

        self._provider_name = provider_name

    @property
    def database_name(self):
        """Gets the database_name of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The database_name of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: str
        """
        return self._database_name

    @database_name.setter
    def database_name(self, database_name):
        """Sets the database_name of this MetadataProvidersProviderFullDTO.


        :param database_name: The database_name of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: str
        """

        self._database_name = database_name

    @property
    def description(self):
        """Gets the description of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The description of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this MetadataProvidersProviderFullDTO.


        :param description: The description of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def id_data_storage_unit(self):
        """Gets the id_data_storage_unit of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The id_data_storage_unit of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: int
        """
        return self._id_data_storage_unit

    @id_data_storage_unit.setter
    def id_data_storage_unit(self, id_data_storage_unit):
        """Sets the id_data_storage_unit of this MetadataProvidersProviderFullDTO.


        :param id_data_storage_unit: The id_data_storage_unit of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: int
        """

        self._id_data_storage_unit = id_data_storage_unit

    @property
    def detail(self):
        """Gets the detail of this MetadataProvidersProviderFullDTO.  # noqa: E501


        :return: The detail of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this MetadataProvidersProviderFullDTO.


        :param detail: The detail of this MetadataProvidersProviderFullDTO.  # noqa: E501
        :type: str
        """

        self._detail = detail

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MetadataProvidersProviderFullDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MetadataProvidersProviderFullDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
