# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class APIExternalLlagarLlagarServiceResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'name': 'str',
        'is_installed': 'bool',
        'is_new': 'bool',
        'description': 'str',
        'long_description': 'str',
        'stage': 'APIExternalLlagarVersionStageEnum'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'is_installed': 'isInstalled',
        'is_new': 'isNew',
        'description': 'description',
        'long_description': 'longDescription',
        'stage': 'stage'
    }

    def __init__(self, id=None, name=None, is_installed=None, is_new=None, description=None, long_description=None, stage=None):  # noqa: E501
        """APIExternalLlagarLlagarServiceResponse - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._name = None
        self._is_installed = None
        self._is_new = None
        self._description = None
        self._long_description = None
        self._stage = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if is_installed is not None:
            self.is_installed = is_installed
        if is_new is not None:
            self.is_new = is_new
        if description is not None:
            self.description = description
        if long_description is not None:
            self.long_description = long_description
        if stage is not None:
            self.stage = stage

    @property
    def id(self):
        """Gets the id of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501


        :return: The id of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this APIExternalLlagarLlagarServiceResponse.


        :param id: The id of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501


        :return: The name of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this APIExternalLlagarLlagarServiceResponse.


        :param name: The name of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def is_installed(self):
        """Gets the is_installed of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501


        :return: The is_installed of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_installed

    @is_installed.setter
    def is_installed(self, is_installed):
        """Sets the is_installed of this APIExternalLlagarLlagarServiceResponse.


        :param is_installed: The is_installed of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :type: bool
        """

        self._is_installed = is_installed

    @property
    def is_new(self):
        """Gets the is_new of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501


        :return: The is_new of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_new

    @is_new.setter
    def is_new(self, is_new):
        """Sets the is_new of this APIExternalLlagarLlagarServiceResponse.


        :param is_new: The is_new of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :type: bool
        """

        self._is_new = is_new

    @property
    def description(self):
        """Gets the description of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501


        :return: The description of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this APIExternalLlagarLlagarServiceResponse.


        :param description: The description of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def long_description(self):
        """Gets the long_description of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501


        :return: The long_description of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :rtype: str
        """
        return self._long_description

    @long_description.setter
    def long_description(self, long_description):
        """Sets the long_description of this APIExternalLlagarLlagarServiceResponse.


        :param long_description: The long_description of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :type: str
        """

        self._long_description = long_description

    @property
    def stage(self):
        """Gets the stage of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501


        :return: The stage of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :rtype: APIExternalLlagarVersionStageEnum
        """
        return self._stage

    @stage.setter
    def stage(self, stage):
        """Sets the stage of this APIExternalLlagarLlagarServiceResponse.


        :param stage: The stage of this APIExternalLlagarLlagarServiceResponse.  # noqa: E501
        :type: APIExternalLlagarVersionStageEnum
        """

        self._stage = stage

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(APIExternalLlagarLlagarServiceResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, APIExternalLlagarLlagarServiceResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
