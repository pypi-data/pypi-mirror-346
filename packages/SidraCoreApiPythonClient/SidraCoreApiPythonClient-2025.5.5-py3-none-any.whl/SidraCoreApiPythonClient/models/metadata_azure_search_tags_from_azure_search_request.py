# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MetadataAzureSearchTagsFromAzureSearchRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'metadata_types': 'list[MetadataAzureSearchMetadataTypeEnum]',
        'tag_starts_with': 'str',
        'take': 'int',
        'skip': 'int'
    }

    attribute_map = {
        'metadata_types': 'metadataTypes',
        'tag_starts_with': 'tagStartsWith',
        'take': 'take',
        'skip': 'skip'
    }

    def __init__(self, metadata_types=None, tag_starts_with=None, take=None, skip=None):  # noqa: E501
        """MetadataAzureSearchTagsFromAzureSearchRequest - a model defined in Swagger"""  # noqa: E501
        self._metadata_types = None
        self._tag_starts_with = None
        self._take = None
        self._skip = None
        self.discriminator = None
        if metadata_types is not None:
            self.metadata_types = metadata_types
        if tag_starts_with is not None:
            self.tag_starts_with = tag_starts_with
        if take is not None:
            self.take = take
        if skip is not None:
            self.skip = skip

    @property
    def metadata_types(self):
        """Gets the metadata_types of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501


        :return: The metadata_types of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501
        :rtype: list[MetadataAzureSearchMetadataTypeEnum]
        """
        return self._metadata_types

    @metadata_types.setter
    def metadata_types(self, metadata_types):
        """Sets the metadata_types of this MetadataAzureSearchTagsFromAzureSearchRequest.


        :param metadata_types: The metadata_types of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501
        :type: list[MetadataAzureSearchMetadataTypeEnum]
        """

        self._metadata_types = metadata_types

    @property
    def tag_starts_with(self):
        """Gets the tag_starts_with of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501


        :return: The tag_starts_with of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501
        :rtype: str
        """
        return self._tag_starts_with

    @tag_starts_with.setter
    def tag_starts_with(self, tag_starts_with):
        """Sets the tag_starts_with of this MetadataAzureSearchTagsFromAzureSearchRequest.


        :param tag_starts_with: The tag_starts_with of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501
        :type: str
        """

        self._tag_starts_with = tag_starts_with

    @property
    def take(self):
        """Gets the take of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501


        :return: The take of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501
        :rtype: int
        """
        return self._take

    @take.setter
    def take(self, take):
        """Sets the take of this MetadataAzureSearchTagsFromAzureSearchRequest.


        :param take: The take of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501
        :type: int
        """

        self._take = take

    @property
    def skip(self):
        """Gets the skip of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501


        :return: The skip of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501
        :rtype: int
        """
        return self._skip

    @skip.setter
    def skip(self, skip):
        """Sets the skip of this MetadataAzureSearchTagsFromAzureSearchRequest.


        :param skip: The skip of this MetadataAzureSearchTagsFromAzureSearchRequest.  # noqa: E501
        :type: int
        """

        self._skip = skip

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MetadataAzureSearchTagsFromAzureSearchRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MetadataAzureSearchTagsFromAzureSearchRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
