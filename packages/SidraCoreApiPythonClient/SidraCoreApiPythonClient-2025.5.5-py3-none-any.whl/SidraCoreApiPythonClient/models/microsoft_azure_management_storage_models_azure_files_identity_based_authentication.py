# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'directory_service_options': 'str',
        'active_directory_properties': 'MicrosoftAzureManagementStorageModelsActiveDirectoryProperties',
        'default_share_permission': 'str'
    }

    attribute_map = {
        'directory_service_options': 'directoryServiceOptions',
        'active_directory_properties': 'activeDirectoryProperties',
        'default_share_permission': 'defaultSharePermission'
    }

    def __init__(self, directory_service_options=None, active_directory_properties=None, default_share_permission=None):  # noqa: E501
        """MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication - a model defined in Swagger"""  # noqa: E501
        self._directory_service_options = None
        self._active_directory_properties = None
        self._default_share_permission = None
        self.discriminator = None
        if directory_service_options is not None:
            self.directory_service_options = directory_service_options
        if active_directory_properties is not None:
            self.active_directory_properties = active_directory_properties
        if default_share_permission is not None:
            self.default_share_permission = default_share_permission

    @property
    def directory_service_options(self):
        """Gets the directory_service_options of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.  # noqa: E501


        :return: The directory_service_options of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.  # noqa: E501
        :rtype: str
        """
        return self._directory_service_options

    @directory_service_options.setter
    def directory_service_options(self, directory_service_options):
        """Sets the directory_service_options of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.


        :param directory_service_options: The directory_service_options of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.  # noqa: E501
        :type: str
        """

        self._directory_service_options = directory_service_options

    @property
    def active_directory_properties(self):
        """Gets the active_directory_properties of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.  # noqa: E501


        :return: The active_directory_properties of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsActiveDirectoryProperties
        """
        return self._active_directory_properties

    @active_directory_properties.setter
    def active_directory_properties(self, active_directory_properties):
        """Sets the active_directory_properties of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.


        :param active_directory_properties: The active_directory_properties of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsActiveDirectoryProperties
        """

        self._active_directory_properties = active_directory_properties

    @property
    def default_share_permission(self):
        """Gets the default_share_permission of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.  # noqa: E501


        :return: The default_share_permission of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.  # noqa: E501
        :rtype: str
        """
        return self._default_share_permission

    @default_share_permission.setter
    def default_share_permission(self, default_share_permission):
        """Sets the default_share_permission of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.


        :param default_share_permission: The default_share_permission of this MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication.  # noqa: E501
        :type: str
        """

        self._default_share_permission = default_share_permission

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftAzureManagementStorageModelsAzureFilesIdentityBasedAuthentication):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
