# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MetadataEntitiesDeltaLoadsEntityDeltaLoadDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'id_entity': 'int',
        'id_delta_attribute': 'int',
        'delta_is_date': 'bool',
        'last_delta_value': 'str',
        'id_auxiliary_delta_attribute': 'int',
        'last_auxiliary_delta_value': 'str',
        'custom_get_max_value_expression': 'str',
        'custom_extract_data_expression': 'str',
        'need_reload': 'bool',
        'enable_reload': 'bool',
        'batch_size': 'int'
    }

    attribute_map = {
        'id': 'id',
        'id_entity': 'idEntity',
        'id_delta_attribute': 'idDeltaAttribute',
        'delta_is_date': 'deltaIsDate',
        'last_delta_value': 'lastDeltaValue',
        'id_auxiliary_delta_attribute': 'idAuxiliaryDeltaAttribute',
        'last_auxiliary_delta_value': 'lastAuxiliaryDeltaValue',
        'custom_get_max_value_expression': 'customGetMaxValueExpression',
        'custom_extract_data_expression': 'customExtractDataExpression',
        'need_reload': 'needReload',
        'enable_reload': 'enableReload',
        'batch_size': 'batchSize'
    }

    def __init__(self, id=None, id_entity=None, id_delta_attribute=None, delta_is_date=None, last_delta_value=None, id_auxiliary_delta_attribute=None, last_auxiliary_delta_value=None, custom_get_max_value_expression=None, custom_extract_data_expression=None, need_reload=None, enable_reload=None, batch_size=None):  # noqa: E501
        """MetadataEntitiesDeltaLoadsEntityDeltaLoadDto - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._id_entity = None
        self._id_delta_attribute = None
        self._delta_is_date = None
        self._last_delta_value = None
        self._id_auxiliary_delta_attribute = None
        self._last_auxiliary_delta_value = None
        self._custom_get_max_value_expression = None
        self._custom_extract_data_expression = None
        self._need_reload = None
        self._enable_reload = None
        self._batch_size = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if id_entity is not None:
            self.id_entity = id_entity
        if id_delta_attribute is not None:
            self.id_delta_attribute = id_delta_attribute
        if delta_is_date is not None:
            self.delta_is_date = delta_is_date
        if last_delta_value is not None:
            self.last_delta_value = last_delta_value
        if id_auxiliary_delta_attribute is not None:
            self.id_auxiliary_delta_attribute = id_auxiliary_delta_attribute
        if last_auxiliary_delta_value is not None:
            self.last_auxiliary_delta_value = last_auxiliary_delta_value
        if custom_get_max_value_expression is not None:
            self.custom_get_max_value_expression = custom_get_max_value_expression
        if custom_extract_data_expression is not None:
            self.custom_extract_data_expression = custom_extract_data_expression
        if need_reload is not None:
            self.need_reload = need_reload
        if enable_reload is not None:
            self.enable_reload = enable_reload
        if batch_size is not None:
            self.batch_size = batch_size

    @property
    def id(self):
        """Gets the id of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The id of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param id: The id of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def id_entity(self):
        """Gets the id_entity of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The id_entity of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: int
        """
        return self._id_entity

    @id_entity.setter
    def id_entity(self, id_entity):
        """Sets the id_entity of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param id_entity: The id_entity of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: int
        """

        self._id_entity = id_entity

    @property
    def id_delta_attribute(self):
        """Gets the id_delta_attribute of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The id_delta_attribute of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: int
        """
        return self._id_delta_attribute

    @id_delta_attribute.setter
    def id_delta_attribute(self, id_delta_attribute):
        """Sets the id_delta_attribute of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param id_delta_attribute: The id_delta_attribute of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: int
        """

        self._id_delta_attribute = id_delta_attribute

    @property
    def delta_is_date(self):
        """Gets the delta_is_date of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The delta_is_date of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: bool
        """
        return self._delta_is_date

    @delta_is_date.setter
    def delta_is_date(self, delta_is_date):
        """Sets the delta_is_date of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param delta_is_date: The delta_is_date of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: bool
        """

        self._delta_is_date = delta_is_date

    @property
    def last_delta_value(self):
        """Gets the last_delta_value of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The last_delta_value of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: str
        """
        return self._last_delta_value

    @last_delta_value.setter
    def last_delta_value(self, last_delta_value):
        """Sets the last_delta_value of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param last_delta_value: The last_delta_value of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: str
        """

        self._last_delta_value = last_delta_value

    @property
    def id_auxiliary_delta_attribute(self):
        """Gets the id_auxiliary_delta_attribute of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The id_auxiliary_delta_attribute of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: int
        """
        return self._id_auxiliary_delta_attribute

    @id_auxiliary_delta_attribute.setter
    def id_auxiliary_delta_attribute(self, id_auxiliary_delta_attribute):
        """Sets the id_auxiliary_delta_attribute of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param id_auxiliary_delta_attribute: The id_auxiliary_delta_attribute of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: int
        """

        self._id_auxiliary_delta_attribute = id_auxiliary_delta_attribute

    @property
    def last_auxiliary_delta_value(self):
        """Gets the last_auxiliary_delta_value of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The last_auxiliary_delta_value of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: str
        """
        return self._last_auxiliary_delta_value

    @last_auxiliary_delta_value.setter
    def last_auxiliary_delta_value(self, last_auxiliary_delta_value):
        """Sets the last_auxiliary_delta_value of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param last_auxiliary_delta_value: The last_auxiliary_delta_value of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: str
        """

        self._last_auxiliary_delta_value = last_auxiliary_delta_value

    @property
    def custom_get_max_value_expression(self):
        """Gets the custom_get_max_value_expression of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The custom_get_max_value_expression of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: str
        """
        return self._custom_get_max_value_expression

    @custom_get_max_value_expression.setter
    def custom_get_max_value_expression(self, custom_get_max_value_expression):
        """Sets the custom_get_max_value_expression of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param custom_get_max_value_expression: The custom_get_max_value_expression of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: str
        """

        self._custom_get_max_value_expression = custom_get_max_value_expression

    @property
    def custom_extract_data_expression(self):
        """Gets the custom_extract_data_expression of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The custom_extract_data_expression of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: str
        """
        return self._custom_extract_data_expression

    @custom_extract_data_expression.setter
    def custom_extract_data_expression(self, custom_extract_data_expression):
        """Sets the custom_extract_data_expression of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param custom_extract_data_expression: The custom_extract_data_expression of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: str
        """

        self._custom_extract_data_expression = custom_extract_data_expression

    @property
    def need_reload(self):
        """Gets the need_reload of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The need_reload of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: bool
        """
        return self._need_reload

    @need_reload.setter
    def need_reload(self, need_reload):
        """Sets the need_reload of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param need_reload: The need_reload of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: bool
        """

        self._need_reload = need_reload

    @property
    def enable_reload(self):
        """Gets the enable_reload of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The enable_reload of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: bool
        """
        return self._enable_reload

    @enable_reload.setter
    def enable_reload(self, enable_reload):
        """Sets the enable_reload of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param enable_reload: The enable_reload of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: bool
        """

        self._enable_reload = enable_reload

    @property
    def batch_size(self):
        """Gets the batch_size of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501


        :return: The batch_size of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :rtype: int
        """
        return self._batch_size

    @batch_size.setter
    def batch_size(self, batch_size):
        """Sets the batch_size of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.


        :param batch_size: The batch_size of this MetadataEntitiesDeltaLoadsEntityDeltaLoadDto.  # noqa: E501
        :type: int
        """

        self._batch_size = batch_size

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MetadataEntitiesDeltaLoadsEntityDeltaLoadDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MetadataEntitiesDeltaLoadsEntityDeltaLoadDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
