# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class APIExternalIndexerStatusDto(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'pipeline_name': 'str',
        'indexer_name': 'str',
        'indexer_execution_info': 'MicrosoftAzureSearchModelsIndexerExecutionInfo',
        'knowledge_store': 'APIExternalKnowledgeStoreDto'
    }

    attribute_map = {
        'pipeline_name': 'pipelineName',
        'indexer_name': 'indexerName',
        'indexer_execution_info': 'indexerExecutionInfo',
        'knowledge_store': 'knowledgeStore'
    }

    def __init__(self, pipeline_name=None, indexer_name=None, indexer_execution_info=None, knowledge_store=None):  # noqa: E501
        """APIExternalIndexerStatusDto - a model defined in Swagger"""  # noqa: E501
        self._pipeline_name = None
        self._indexer_name = None
        self._indexer_execution_info = None
        self._knowledge_store = None
        self.discriminator = None
        if pipeline_name is not None:
            self.pipeline_name = pipeline_name
        if indexer_name is not None:
            self.indexer_name = indexer_name
        if indexer_execution_info is not None:
            self.indexer_execution_info = indexer_execution_info
        if knowledge_store is not None:
            self.knowledge_store = knowledge_store

    @property
    def pipeline_name(self):
        """Gets the pipeline_name of this APIExternalIndexerStatusDto.  # noqa: E501


        :return: The pipeline_name of this APIExternalIndexerStatusDto.  # noqa: E501
        :rtype: str
        """
        return self._pipeline_name

    @pipeline_name.setter
    def pipeline_name(self, pipeline_name):
        """Sets the pipeline_name of this APIExternalIndexerStatusDto.


        :param pipeline_name: The pipeline_name of this APIExternalIndexerStatusDto.  # noqa: E501
        :type: str
        """

        self._pipeline_name = pipeline_name

    @property
    def indexer_name(self):
        """Gets the indexer_name of this APIExternalIndexerStatusDto.  # noqa: E501


        :return: The indexer_name of this APIExternalIndexerStatusDto.  # noqa: E501
        :rtype: str
        """
        return self._indexer_name

    @indexer_name.setter
    def indexer_name(self, indexer_name):
        """Sets the indexer_name of this APIExternalIndexerStatusDto.


        :param indexer_name: The indexer_name of this APIExternalIndexerStatusDto.  # noqa: E501
        :type: str
        """

        self._indexer_name = indexer_name

    @property
    def indexer_execution_info(self):
        """Gets the indexer_execution_info of this APIExternalIndexerStatusDto.  # noqa: E501


        :return: The indexer_execution_info of this APIExternalIndexerStatusDto.  # noqa: E501
        :rtype: MicrosoftAzureSearchModelsIndexerExecutionInfo
        """
        return self._indexer_execution_info

    @indexer_execution_info.setter
    def indexer_execution_info(self, indexer_execution_info):
        """Sets the indexer_execution_info of this APIExternalIndexerStatusDto.


        :param indexer_execution_info: The indexer_execution_info of this APIExternalIndexerStatusDto.  # noqa: E501
        :type: MicrosoftAzureSearchModelsIndexerExecutionInfo
        """

        self._indexer_execution_info = indexer_execution_info

    @property
    def knowledge_store(self):
        """Gets the knowledge_store of this APIExternalIndexerStatusDto.  # noqa: E501


        :return: The knowledge_store of this APIExternalIndexerStatusDto.  # noqa: E501
        :rtype: APIExternalKnowledgeStoreDto
        """
        return self._knowledge_store

    @knowledge_store.setter
    def knowledge_store(self, knowledge_store):
        """Sets the knowledge_store of this APIExternalIndexerStatusDto.


        :param knowledge_store: The knowledge_store of this APIExternalIndexerStatusDto.  # noqa: E501
        :type: APIExternalKnowledgeStoreDto
        """

        self._knowledge_store = knowledge_store

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(APIExternalIndexerStatusDto, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, APIExternalIndexerStatusDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
