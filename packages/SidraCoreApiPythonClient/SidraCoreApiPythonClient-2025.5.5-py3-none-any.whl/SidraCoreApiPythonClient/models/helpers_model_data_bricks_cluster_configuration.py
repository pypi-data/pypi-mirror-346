# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class HelpersModelDataBricksClusterConfiguration(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cluster_id': 'str',
        'init_scripts': 'list[HelpersModelDataBricksClusterInitScript]',
        'cluster_name': 'str',
        'runtime_version': 'str',
        'spark_configuration': 'dict(str, str)',
        'node_type_id': 'str',
        'driver_node_type_id': 'str',
        'ssh_public_keys': 'list[str]',
        'custom_tags': 'dict(str, str)',
        'cluster_log_configuration': 'MicrosoftAzureDatabricksClientModelsClusterLogConf',
        'spark_environment_variables': 'dict(str, str)',
        'auto_termination_minutes': 'int',
        'enable_elastic_disk': 'bool',
        'instance_pool_id': 'str',
        'driver_instance_pool_id': 'str',
        'docker_image': 'MicrosoftAzureDatabricksClientModelsDockerImage',
        'local_disk_encryption': 'bool',
        'policy_id': 'str',
        'apply_policy_default_values': 'bool',
        'azure_attributes': 'MicrosoftAzureDatabricksClientModelsAzureAttributes',
        'runtime_engine': 'MicrosoftAzureDatabricksClientModelsRuntimeEngine',
        'single_user_name': 'str',
        'number_of_workers': 'int',
        'auto_scale': 'MicrosoftAzureDatabricksClientModelsAutoScale'
    }

    attribute_map = {
        'cluster_id': 'clusterId',
        'init_scripts': 'initScripts',
        'cluster_name': 'clusterName',
        'runtime_version': 'runtimeVersion',
        'spark_configuration': 'sparkConfiguration',
        'node_type_id': 'nodeTypeId',
        'driver_node_type_id': 'driverNodeTypeId',
        'ssh_public_keys': 'sshPublicKeys',
        'custom_tags': 'customTags',
        'cluster_log_configuration': 'clusterLogConfiguration',
        'spark_environment_variables': 'sparkEnvironmentVariables',
        'auto_termination_minutes': 'autoTerminationMinutes',
        'enable_elastic_disk': 'enableElasticDisk',
        'instance_pool_id': 'instancePoolId',
        'driver_instance_pool_id': 'driverInstancePoolId',
        'docker_image': 'dockerImage',
        'local_disk_encryption': 'localDiskEncryption',
        'policy_id': 'policyId',
        'apply_policy_default_values': 'applyPolicyDefaultValues',
        'azure_attributes': 'azureAttributes',
        'runtime_engine': 'runtimeEngine',
        'single_user_name': 'singleUserName',
        'number_of_workers': 'numberOfWorkers',
        'auto_scale': 'autoScale'
    }

    def __init__(self, cluster_id=None, init_scripts=None, cluster_name=None, runtime_version=None, spark_configuration=None, node_type_id=None, driver_node_type_id=None, ssh_public_keys=None, custom_tags=None, cluster_log_configuration=None, spark_environment_variables=None, auto_termination_minutes=None, enable_elastic_disk=None, instance_pool_id=None, driver_instance_pool_id=None, docker_image=None, local_disk_encryption=None, policy_id=None, apply_policy_default_values=None, azure_attributes=None, runtime_engine=None, single_user_name=None, number_of_workers=None, auto_scale=None):  # noqa: E501
        """HelpersModelDataBricksClusterConfiguration - a model defined in Swagger"""  # noqa: E501
        self._cluster_id = None
        self._init_scripts = None
        self._cluster_name = None
        self._runtime_version = None
        self._spark_configuration = None
        self._node_type_id = None
        self._driver_node_type_id = None
        self._ssh_public_keys = None
        self._custom_tags = None
        self._cluster_log_configuration = None
        self._spark_environment_variables = None
        self._auto_termination_minutes = None
        self._enable_elastic_disk = None
        self._instance_pool_id = None
        self._driver_instance_pool_id = None
        self._docker_image = None
        self._local_disk_encryption = None
        self._policy_id = None
        self._apply_policy_default_values = None
        self._azure_attributes = None
        self._runtime_engine = None
        self._single_user_name = None
        self._number_of_workers = None
        self._auto_scale = None
        self.discriminator = None
        if cluster_id is not None:
            self.cluster_id = cluster_id
        if init_scripts is not None:
            self.init_scripts = init_scripts
        if cluster_name is not None:
            self.cluster_name = cluster_name
        if runtime_version is not None:
            self.runtime_version = runtime_version
        if spark_configuration is not None:
            self.spark_configuration = spark_configuration
        if node_type_id is not None:
            self.node_type_id = node_type_id
        if driver_node_type_id is not None:
            self.driver_node_type_id = driver_node_type_id
        if ssh_public_keys is not None:
            self.ssh_public_keys = ssh_public_keys
        if custom_tags is not None:
            self.custom_tags = custom_tags
        if cluster_log_configuration is not None:
            self.cluster_log_configuration = cluster_log_configuration
        if spark_environment_variables is not None:
            self.spark_environment_variables = spark_environment_variables
        if auto_termination_minutes is not None:
            self.auto_termination_minutes = auto_termination_minutes
        if enable_elastic_disk is not None:
            self.enable_elastic_disk = enable_elastic_disk
        if instance_pool_id is not None:
            self.instance_pool_id = instance_pool_id
        if driver_instance_pool_id is not None:
            self.driver_instance_pool_id = driver_instance_pool_id
        if docker_image is not None:
            self.docker_image = docker_image
        if local_disk_encryption is not None:
            self.local_disk_encryption = local_disk_encryption
        if policy_id is not None:
            self.policy_id = policy_id
        if apply_policy_default_values is not None:
            self.apply_policy_default_values = apply_policy_default_values
        if azure_attributes is not None:
            self.azure_attributes = azure_attributes
        if runtime_engine is not None:
            self.runtime_engine = runtime_engine
        if single_user_name is not None:
            self.single_user_name = single_user_name
        if number_of_workers is not None:
            self.number_of_workers = number_of_workers
        if auto_scale is not None:
            self.auto_scale = auto_scale

    @property
    def cluster_id(self):
        """Gets the cluster_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The cluster_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """Sets the cluster_id of this HelpersModelDataBricksClusterConfiguration.


        :param cluster_id: The cluster_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: str
        """

        self._cluster_id = cluster_id

    @property
    def init_scripts(self):
        """Gets the init_scripts of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The init_scripts of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: list[HelpersModelDataBricksClusterInitScript]
        """
        return self._init_scripts

    @init_scripts.setter
    def init_scripts(self, init_scripts):
        """Sets the init_scripts of this HelpersModelDataBricksClusterConfiguration.


        :param init_scripts: The init_scripts of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: list[HelpersModelDataBricksClusterInitScript]
        """

        self._init_scripts = init_scripts

    @property
    def cluster_name(self):
        """Gets the cluster_name of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The cluster_name of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this HelpersModelDataBricksClusterConfiguration.


        :param cluster_name: The cluster_name of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: str
        """

        self._cluster_name = cluster_name

    @property
    def runtime_version(self):
        """Gets the runtime_version of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The runtime_version of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._runtime_version

    @runtime_version.setter
    def runtime_version(self, runtime_version):
        """Sets the runtime_version of this HelpersModelDataBricksClusterConfiguration.


        :param runtime_version: The runtime_version of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: str
        """

        self._runtime_version = runtime_version

    @property
    def spark_configuration(self):
        """Gets the spark_configuration of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The spark_configuration of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._spark_configuration

    @spark_configuration.setter
    def spark_configuration(self, spark_configuration):
        """Sets the spark_configuration of this HelpersModelDataBricksClusterConfiguration.


        :param spark_configuration: The spark_configuration of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: dict(str, str)
        """

        self._spark_configuration = spark_configuration

    @property
    def node_type_id(self):
        """Gets the node_type_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The node_type_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._node_type_id

    @node_type_id.setter
    def node_type_id(self, node_type_id):
        """Sets the node_type_id of this HelpersModelDataBricksClusterConfiguration.


        :param node_type_id: The node_type_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: str
        """

        self._node_type_id = node_type_id

    @property
    def driver_node_type_id(self):
        """Gets the driver_node_type_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The driver_node_type_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._driver_node_type_id

    @driver_node_type_id.setter
    def driver_node_type_id(self, driver_node_type_id):
        """Sets the driver_node_type_id of this HelpersModelDataBricksClusterConfiguration.


        :param driver_node_type_id: The driver_node_type_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: str
        """

        self._driver_node_type_id = driver_node_type_id

    @property
    def ssh_public_keys(self):
        """Gets the ssh_public_keys of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The ssh_public_keys of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: list[str]
        """
        return self._ssh_public_keys

    @ssh_public_keys.setter
    def ssh_public_keys(self, ssh_public_keys):
        """Sets the ssh_public_keys of this HelpersModelDataBricksClusterConfiguration.


        :param ssh_public_keys: The ssh_public_keys of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: list[str]
        """

        self._ssh_public_keys = ssh_public_keys

    @property
    def custom_tags(self):
        """Gets the custom_tags of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The custom_tags of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._custom_tags

    @custom_tags.setter
    def custom_tags(self, custom_tags):
        """Sets the custom_tags of this HelpersModelDataBricksClusterConfiguration.


        :param custom_tags: The custom_tags of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: dict(str, str)
        """

        self._custom_tags = custom_tags

    @property
    def cluster_log_configuration(self):
        """Gets the cluster_log_configuration of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The cluster_log_configuration of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: MicrosoftAzureDatabricksClientModelsClusterLogConf
        """
        return self._cluster_log_configuration

    @cluster_log_configuration.setter
    def cluster_log_configuration(self, cluster_log_configuration):
        """Sets the cluster_log_configuration of this HelpersModelDataBricksClusterConfiguration.


        :param cluster_log_configuration: The cluster_log_configuration of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: MicrosoftAzureDatabricksClientModelsClusterLogConf
        """

        self._cluster_log_configuration = cluster_log_configuration

    @property
    def spark_environment_variables(self):
        """Gets the spark_environment_variables of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The spark_environment_variables of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._spark_environment_variables

    @spark_environment_variables.setter
    def spark_environment_variables(self, spark_environment_variables):
        """Sets the spark_environment_variables of this HelpersModelDataBricksClusterConfiguration.


        :param spark_environment_variables: The spark_environment_variables of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: dict(str, str)
        """

        self._spark_environment_variables = spark_environment_variables

    @property
    def auto_termination_minutes(self):
        """Gets the auto_termination_minutes of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The auto_termination_minutes of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: int
        """
        return self._auto_termination_minutes

    @auto_termination_minutes.setter
    def auto_termination_minutes(self, auto_termination_minutes):
        """Sets the auto_termination_minutes of this HelpersModelDataBricksClusterConfiguration.


        :param auto_termination_minutes: The auto_termination_minutes of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: int
        """

        self._auto_termination_minutes = auto_termination_minutes

    @property
    def enable_elastic_disk(self):
        """Gets the enable_elastic_disk of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The enable_elastic_disk of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._enable_elastic_disk

    @enable_elastic_disk.setter
    def enable_elastic_disk(self, enable_elastic_disk):
        """Sets the enable_elastic_disk of this HelpersModelDataBricksClusterConfiguration.


        :param enable_elastic_disk: The enable_elastic_disk of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: bool
        """

        self._enable_elastic_disk = enable_elastic_disk

    @property
    def instance_pool_id(self):
        """Gets the instance_pool_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The instance_pool_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._instance_pool_id

    @instance_pool_id.setter
    def instance_pool_id(self, instance_pool_id):
        """Sets the instance_pool_id of this HelpersModelDataBricksClusterConfiguration.


        :param instance_pool_id: The instance_pool_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: str
        """

        self._instance_pool_id = instance_pool_id

    @property
    def driver_instance_pool_id(self):
        """Gets the driver_instance_pool_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The driver_instance_pool_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._driver_instance_pool_id

    @driver_instance_pool_id.setter
    def driver_instance_pool_id(self, driver_instance_pool_id):
        """Sets the driver_instance_pool_id of this HelpersModelDataBricksClusterConfiguration.


        :param driver_instance_pool_id: The driver_instance_pool_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: str
        """

        self._driver_instance_pool_id = driver_instance_pool_id

    @property
    def docker_image(self):
        """Gets the docker_image of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The docker_image of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: MicrosoftAzureDatabricksClientModelsDockerImage
        """
        return self._docker_image

    @docker_image.setter
    def docker_image(self, docker_image):
        """Sets the docker_image of this HelpersModelDataBricksClusterConfiguration.


        :param docker_image: The docker_image of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: MicrosoftAzureDatabricksClientModelsDockerImage
        """

        self._docker_image = docker_image

    @property
    def local_disk_encryption(self):
        """Gets the local_disk_encryption of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The local_disk_encryption of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._local_disk_encryption

    @local_disk_encryption.setter
    def local_disk_encryption(self, local_disk_encryption):
        """Sets the local_disk_encryption of this HelpersModelDataBricksClusterConfiguration.


        :param local_disk_encryption: The local_disk_encryption of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: bool
        """

        self._local_disk_encryption = local_disk_encryption

    @property
    def policy_id(self):
        """Gets the policy_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The policy_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this HelpersModelDataBricksClusterConfiguration.


        :param policy_id: The policy_id of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: str
        """

        self._policy_id = policy_id

    @property
    def apply_policy_default_values(self):
        """Gets the apply_policy_default_values of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The apply_policy_default_values of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: bool
        """
        return self._apply_policy_default_values

    @apply_policy_default_values.setter
    def apply_policy_default_values(self, apply_policy_default_values):
        """Sets the apply_policy_default_values of this HelpersModelDataBricksClusterConfiguration.


        :param apply_policy_default_values: The apply_policy_default_values of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: bool
        """

        self._apply_policy_default_values = apply_policy_default_values

    @property
    def azure_attributes(self):
        """Gets the azure_attributes of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The azure_attributes of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: MicrosoftAzureDatabricksClientModelsAzureAttributes
        """
        return self._azure_attributes

    @azure_attributes.setter
    def azure_attributes(self, azure_attributes):
        """Sets the azure_attributes of this HelpersModelDataBricksClusterConfiguration.


        :param azure_attributes: The azure_attributes of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: MicrosoftAzureDatabricksClientModelsAzureAttributes
        """

        self._azure_attributes = azure_attributes

    @property
    def runtime_engine(self):
        """Gets the runtime_engine of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The runtime_engine of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: MicrosoftAzureDatabricksClientModelsRuntimeEngine
        """
        return self._runtime_engine

    @runtime_engine.setter
    def runtime_engine(self, runtime_engine):
        """Sets the runtime_engine of this HelpersModelDataBricksClusterConfiguration.


        :param runtime_engine: The runtime_engine of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: MicrosoftAzureDatabricksClientModelsRuntimeEngine
        """

        self._runtime_engine = runtime_engine

    @property
    def single_user_name(self):
        """Gets the single_user_name of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The single_user_name of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: str
        """
        return self._single_user_name

    @single_user_name.setter
    def single_user_name(self, single_user_name):
        """Sets the single_user_name of this HelpersModelDataBricksClusterConfiguration.


        :param single_user_name: The single_user_name of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: str
        """

        self._single_user_name = single_user_name

    @property
    def number_of_workers(self):
        """Gets the number_of_workers of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The number_of_workers of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: int
        """
        return self._number_of_workers

    @number_of_workers.setter
    def number_of_workers(self, number_of_workers):
        """Sets the number_of_workers of this HelpersModelDataBricksClusterConfiguration.


        :param number_of_workers: The number_of_workers of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: int
        """

        self._number_of_workers = number_of_workers

    @property
    def auto_scale(self):
        """Gets the auto_scale of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501


        :return: The auto_scale of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :rtype: MicrosoftAzureDatabricksClientModelsAutoScale
        """
        return self._auto_scale

    @auto_scale.setter
    def auto_scale(self, auto_scale):
        """Sets the auto_scale of this HelpersModelDataBricksClusterConfiguration.


        :param auto_scale: The auto_scale of this HelpersModelDataBricksClusterConfiguration.  # noqa: E501
        :type: MicrosoftAzureDatabricksClientModelsAutoScale
        """

        self._auto_scale = auto_scale

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(HelpersModelDataBricksClusterConfiguration, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HelpersModelDataBricksClusterConfiguration):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
