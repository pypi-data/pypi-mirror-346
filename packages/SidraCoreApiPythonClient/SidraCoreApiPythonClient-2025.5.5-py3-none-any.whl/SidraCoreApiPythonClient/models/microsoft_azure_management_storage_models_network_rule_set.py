# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MicrosoftAzureManagementStorageModelsNetworkRuleSet(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bypass': 'str',
        'resource_access_rules': 'list[MicrosoftAzureManagementStorageModelsResourceAccessRule]',
        'virtual_network_rules': 'list[MicrosoftAzureManagementStorageModelsVirtualNetworkRule]',
        'ip_rules': 'list[MicrosoftAzureManagementStorageModelsIPRule]',
        'default_action': 'MicrosoftAzureManagementStorageModelsDefaultAction'
    }

    attribute_map = {
        'bypass': 'bypass',
        'resource_access_rules': 'resourceAccessRules',
        'virtual_network_rules': 'virtualNetworkRules',
        'ip_rules': 'ipRules',
        'default_action': 'defaultAction'
    }

    def __init__(self, bypass=None, resource_access_rules=None, virtual_network_rules=None, ip_rules=None, default_action=None):  # noqa: E501
        """MicrosoftAzureManagementStorageModelsNetworkRuleSet - a model defined in Swagger"""  # noqa: E501
        self._bypass = None
        self._resource_access_rules = None
        self._virtual_network_rules = None
        self._ip_rules = None
        self._default_action = None
        self.discriminator = None
        if bypass is not None:
            self.bypass = bypass
        if resource_access_rules is not None:
            self.resource_access_rules = resource_access_rules
        if virtual_network_rules is not None:
            self.virtual_network_rules = virtual_network_rules
        if ip_rules is not None:
            self.ip_rules = ip_rules
        if default_action is not None:
            self.default_action = default_action

    @property
    def bypass(self):
        """Gets the bypass of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501


        :return: The bypass of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :rtype: str
        """
        return self._bypass

    @bypass.setter
    def bypass(self, bypass):
        """Sets the bypass of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.


        :param bypass: The bypass of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :type: str
        """

        self._bypass = bypass

    @property
    def resource_access_rules(self):
        """Gets the resource_access_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501


        :return: The resource_access_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :rtype: list[MicrosoftAzureManagementStorageModelsResourceAccessRule]
        """
        return self._resource_access_rules

    @resource_access_rules.setter
    def resource_access_rules(self, resource_access_rules):
        """Sets the resource_access_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.


        :param resource_access_rules: The resource_access_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :type: list[MicrosoftAzureManagementStorageModelsResourceAccessRule]
        """

        self._resource_access_rules = resource_access_rules

    @property
    def virtual_network_rules(self):
        """Gets the virtual_network_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501


        :return: The virtual_network_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :rtype: list[MicrosoftAzureManagementStorageModelsVirtualNetworkRule]
        """
        return self._virtual_network_rules

    @virtual_network_rules.setter
    def virtual_network_rules(self, virtual_network_rules):
        """Sets the virtual_network_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.


        :param virtual_network_rules: The virtual_network_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :type: list[MicrosoftAzureManagementStorageModelsVirtualNetworkRule]
        """

        self._virtual_network_rules = virtual_network_rules

    @property
    def ip_rules(self):
        """Gets the ip_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501


        :return: The ip_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :rtype: list[MicrosoftAzureManagementStorageModelsIPRule]
        """
        return self._ip_rules

    @ip_rules.setter
    def ip_rules(self, ip_rules):
        """Sets the ip_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.


        :param ip_rules: The ip_rules of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :type: list[MicrosoftAzureManagementStorageModelsIPRule]
        """

        self._ip_rules = ip_rules

    @property
    def default_action(self):
        """Gets the default_action of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501


        :return: The default_action of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :rtype: MicrosoftAzureManagementStorageModelsDefaultAction
        """
        return self._default_action

    @default_action.setter
    def default_action(self, default_action):
        """Sets the default_action of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.


        :param default_action: The default_action of this MicrosoftAzureManagementStorageModelsNetworkRuleSet.  # noqa: E501
        :type: MicrosoftAzureManagementStorageModelsDefaultAction
        """

        self._default_action = default_action

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftAzureManagementStorageModelsNetworkRuleSet, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftAzureManagementStorageModelsNetworkRuleSet):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
