# coding: utf-8

"""
    Sidra API

    Sidra API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MicrosoftAzureSearchModelsIndexerExecutionResult(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'status': 'MicrosoftAzureSearchModelsIndexerExecutionStatus',
        'error_message': 'str',
        'start_time': 'datetime',
        'end_time': 'datetime',
        'errors': 'list[MicrosoftAzureSearchModelsItemError]',
        'warnings': 'list[MicrosoftAzureSearchModelsItemWarning]',
        'items_processed': 'int',
        'items_failed': 'int',
        'initial_tracking_state': 'str',
        'final_tracking_state': 'str'
    }

    attribute_map = {
        'status': 'status',
        'error_message': 'errorMessage',
        'start_time': 'startTime',
        'end_time': 'endTime',
        'errors': 'errors',
        'warnings': 'warnings',
        'items_processed': 'itemsProcessed',
        'items_failed': 'itemsFailed',
        'initial_tracking_state': 'initialTrackingState',
        'final_tracking_state': 'finalTrackingState'
    }

    def __init__(self, status=None, error_message=None, start_time=None, end_time=None, errors=None, warnings=None, items_processed=None, items_failed=None, initial_tracking_state=None, final_tracking_state=None):  # noqa: E501
        """MicrosoftAzureSearchModelsIndexerExecutionResult - a model defined in Swagger"""  # noqa: E501
        self._status = None
        self._error_message = None
        self._start_time = None
        self._end_time = None
        self._errors = None
        self._warnings = None
        self._items_processed = None
        self._items_failed = None
        self._initial_tracking_state = None
        self._final_tracking_state = None
        self.discriminator = None
        if status is not None:
            self.status = status
        if error_message is not None:
            self.error_message = error_message
        if start_time is not None:
            self.start_time = start_time
        if end_time is not None:
            self.end_time = end_time
        if errors is not None:
            self.errors = errors
        if warnings is not None:
            self.warnings = warnings
        if items_processed is not None:
            self.items_processed = items_processed
        if items_failed is not None:
            self.items_failed = items_failed
        if initial_tracking_state is not None:
            self.initial_tracking_state = initial_tracking_state
        if final_tracking_state is not None:
            self.final_tracking_state = final_tracking_state

    @property
    def status(self):
        """Gets the status of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The status of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: MicrosoftAzureSearchModelsIndexerExecutionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param status: The status of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: MicrosoftAzureSearchModelsIndexerExecutionStatus
        """

        self._status = status

    @property
    def error_message(self):
        """Gets the error_message of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The error_message of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param error_message: The error_message of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: str
        """

        self._error_message = error_message

    @property
    def start_time(self):
        """Gets the start_time of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The start_time of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param start_time: The start_time of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The end_time of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param end_time: The end_time of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: datetime
        """

        self._end_time = end_time

    @property
    def errors(self):
        """Gets the errors of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The errors of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: list[MicrosoftAzureSearchModelsItemError]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param errors: The errors of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: list[MicrosoftAzureSearchModelsItemError]
        """

        self._errors = errors

    @property
    def warnings(self):
        """Gets the warnings of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The warnings of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: list[MicrosoftAzureSearchModelsItemWarning]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param warnings: The warnings of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: list[MicrosoftAzureSearchModelsItemWarning]
        """

        self._warnings = warnings

    @property
    def items_processed(self):
        """Gets the items_processed of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The items_processed of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: int
        """
        return self._items_processed

    @items_processed.setter
    def items_processed(self, items_processed):
        """Sets the items_processed of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param items_processed: The items_processed of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: int
        """

        self._items_processed = items_processed

    @property
    def items_failed(self):
        """Gets the items_failed of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The items_failed of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: int
        """
        return self._items_failed

    @items_failed.setter
    def items_failed(self, items_failed):
        """Sets the items_failed of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param items_failed: The items_failed of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: int
        """

        self._items_failed = items_failed

    @property
    def initial_tracking_state(self):
        """Gets the initial_tracking_state of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The initial_tracking_state of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: str
        """
        return self._initial_tracking_state

    @initial_tracking_state.setter
    def initial_tracking_state(self, initial_tracking_state):
        """Sets the initial_tracking_state of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param initial_tracking_state: The initial_tracking_state of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: str
        """

        self._initial_tracking_state = initial_tracking_state

    @property
    def final_tracking_state(self):
        """Gets the final_tracking_state of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501


        :return: The final_tracking_state of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :rtype: str
        """
        return self._final_tracking_state

    @final_tracking_state.setter
    def final_tracking_state(self, final_tracking_state):
        """Sets the final_tracking_state of this MicrosoftAzureSearchModelsIndexerExecutionResult.


        :param final_tracking_state: The final_tracking_state of this MicrosoftAzureSearchModelsIndexerExecutionResult.  # noqa: E501
        :type: str
        """

        self._final_tracking_state = final_tracking_state

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MicrosoftAzureSearchModelsIndexerExecutionResult, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MicrosoftAzureSearchModelsIndexerExecutionResult):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
