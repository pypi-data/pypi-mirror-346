# generated by datamodel-codegen:
#   filename:  project/layers/vectorTileLayer.json
#   timestamp: 2025-05-08T01:23:34+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, Optional

from pydantic import BaseModel, ConfigDict, Field, confloat


class Type(Enum):
    circle = 'circle'
    fill = 'fill'
    line = 'line'


class IVectorTileLayer(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    source: str = Field(..., description='The id of the source')
    type: Type = Field(..., description='The type of vector layer')
    color: Optional[Dict[str, Any]] = Field(
        None, description='The color of the the object'
    )
    opacity: Optional[confloat(ge=0.0, le=1.0, multiple_of=0.1)] = Field(
        1, description='The opacity of the the object'
    )
