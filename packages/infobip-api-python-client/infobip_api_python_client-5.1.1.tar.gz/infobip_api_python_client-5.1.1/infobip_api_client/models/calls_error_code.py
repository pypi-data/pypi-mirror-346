# coding: utf-8

"""
    Infobip Client API Libraries OpenAPI Specification

    OpenAPI specification containing public endpoints supported in client API libraries.

    The version of the OpenAPI document: 1.0.0
    Contact: support@infobip.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class CallsErrorCode(str, Enum):
    """
    Error code to hang up with. There are rules for using error codes.  `NORMAL_HANGUP` - Call needs to be established.  `MACHINE_DETECTED` - Call needs to be established and must be `OUTBOUND`.  `NO_ANSWER` - Call cannot be established.  `BUSY` - Call cannot be established.  `CANCELLED` - Call cannot be established.  `REJECTED` - Call cannot be established.  `FORBIDDEN` - Call cannot be established.  `DESTINATION_NOT_FOUND` - Call cannot be established.  `DESTINATION_UNAVAILABLE` - Call cannot be established.  `INVALID_DESTINATION` - Call cannot be established.  `SERVICE_UNAVAILABLE` - Call cannot be established.
    """

    """
    allowed enum values
    """
    NORMAL_HANGUP = "NORMAL_HANGUP"
    MACHINE_DETECTED = "MACHINE_DETECTED"
    NO_ANSWER = "NO_ANSWER"
    BUSY = "BUSY"
    CANCELLED = "CANCELLED"
    REJECTED = "REJECTED"
    FORBIDDEN = "FORBIDDEN"
    DESTINATION_NOT_FOUND = "DESTINATION_NOT_FOUND"
    DESTINATION_UNAVAILABLE = "DESTINATION_UNAVAILABLE"
    INVALID_DESTINATION = "INVALID_DESTINATION"
    INVALID_REQUEST = "INVALID_REQUEST"
    REQUEST_TIMEOUT = "REQUEST_TIMEOUT"
    SERVICE_UNAVAILABLE = "SERVICE_UNAVAILABLE"

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of CallsErrorCode from a JSON string"""
        return cls(json.loads(json_str))
