"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from glean.types import BaseModel
import pydantic
from typing import Dict, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class RunAgentRequestTypedDict(TypedDict):
    agent_id: NotRequired[str]
    r"""The ID of the agent to be run."""
    fields: NotRequired[Dict[str, str]]
    r"""Key-value mapping of string -> string where the key is the name of the field in the prompt."""
    stream: NotRequired[bool]
    r"""Whether to stream responses as they become available. If false, the entire response will be returned at once."""


class RunAgentRequest(BaseModel):
    agent_id: Annotated[Optional[str], pydantic.Field(alias="agentId")] = None
    r"""The ID of the agent to be run."""

    fields: Optional[Dict[str, str]] = None
    r"""Key-value mapping of string -> string where the key is the name of the field in the prompt."""

    stream: Optional[bool] = None
    r"""Whether to stream responses as they become available. If false, the entire response will be returned at once."""
