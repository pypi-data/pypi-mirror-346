name: Publish

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Optional, use if you use setuptools_scm
          submodules: false  # Optional, use if you have submodules

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Build SDist
        run: uv build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
          
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BEFORE_BUILD: >-
        rm -rf {package}/build
      CIBW_BEFORE_ALL_MACOS: >-
        git clone https://github.com/llvm/llvm-project.git &&
        cd llvm-project/openmp &&
        mkdir build &&
        cd build &&
        cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ .. &&
        make &&
        sudo make install
      CIBW_SKIP: "*-musllinux_aarch64 *-musllinux_i686 *-musllinux_x86_64"
      CIBW_ENVIRONMENT_MACOS: >
        LIBOMP_GITHUB="1"
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-14, macos-latest]
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  upload_pypi:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    environment: 
      name: pypi
      url: https://pypi.org/p/crosci
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
