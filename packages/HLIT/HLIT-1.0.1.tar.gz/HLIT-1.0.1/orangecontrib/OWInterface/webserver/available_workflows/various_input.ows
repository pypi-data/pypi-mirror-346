<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="Local Interface - Multifile" qualified_name="Orange.widgets.orangecontrib.AAIT.widgets.OWLocalInterfaceMultifile.OWLocalInterfaceMultifile" project_name="Orange3" version="" title="Local Interface - Multifile" position="(156.0, 295.0)" />
		<node id="1" name="Local Interface - File" qualified_name="Orange.widgets.orangecontrib.AAIT.widgets.OWLocalInterface.OWLocalInterface" project_name="Orange3" version="" title="Local Interface - File" position="(242.0, 532.0)" />
		<node id="2" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (1)" position="(465.0, 441.0)" />
		<node id="3" name="Display on Local Interface" qualified_name="Orange.widgets.orangecontrib.AAIT.widgets.OWDisplayOnInterface.OWDisplayOnInterface" project_name="Orange3" version="" title="Display on local interface" position="(688.0, 269.0)" />
		<node id="4" name="Display on Local Interface" qualified_name="Orange.widgets.orangecontrib.AAIT.widgets.OWDisplayOnInterface.OWDisplayOnInterface" project_name="Orange3" version="" title="Display on local interface (1)" position="(744.0, 540.0)" />
		<node id="5" name="Local Interface - Text" qualified_name="Orange.widgets.orangecontrib.AAIT.widgets.OWLocalInterfaceText.OWLocalInterfaceText" project_name="Orange3" version="" title="Local Interface - Text" position="(154.0, 181.0)" />
		<node id="6" name="Local Interface - Text" qualified_name="Orange.widgets.orangecontrib.AAIT.widgets.OWLocalInterfaceText.OWLocalInterfaceText" project_name="Orange3" version="" title="Local Interface - Text (1)" position="(237.0, 650.0)" />
		<node id="7" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1)" position="(477.0, 240.0)" />
		<node id="8" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table" position="(597.0, 117.0)" />
		<node id="9" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (2)" position="(473.0, 646.0)" />
		<node id="10" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (2)" position="(642.0, 707.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="1" sink_node_id="2" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="1" source_node_id="5" sink_node_id="7" source_channel="data" sink_channel="Object" enabled="true" source_channel_id="data" sink_channel_id="object" />
		<link id="2" source_node_id="7" sink_node_id="3" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="3" source_node_id="0" sink_node_id="7" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="4" source_node_id="7" sink_node_id="8" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="5" source_node_id="6" sink_node_id="9" source_channel="data" sink_channel="Object" enabled="true" source_channel_id="data" sink_channel_id="object" />
		<link id="6" source_node_id="1" sink_node_id="9" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="7" source_node_id="9" sink_node_id="4" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="8" source_node_id="9" sink_node_id="10" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'controlAreaVisible': True, 'input_id': 'input1', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x002\x00\x00\x00\x92\x00\x00\x03@\x00\x00\x02\xa3\x00\x00\x003\x00\x00\x00\xaf\x00\x00\x03?\x00\x00\x02\xa2\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x003\x00\x00\x00\xaf\x00\x00\x03?\x00\x00\x02\xa2', 'workflow_id': 'various_input.ows', '__version__': 1}</properties>
		<properties node_id="1" format="literal">{'controlAreaVisible': True, 'input_id': 'input2', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01J\x00\x00\x00\xb0\x00\x00\x04V\x00\x00\x02\xa3\x00\x00\x01J\x00\x00\x00\xb0\x00\x00\x04V\x00\x00\x02\xa3\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x01J\x00\x00\x00\xb0\x00\x00\x04V\x00\x00\x02\xa3', 'workflow_id': 'various_input.ows', '__version__': 1}</properties>
		<properties node_id="2" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x010\x00\x00\x00\xd8\x00\x00\x05|\x00\x00\x02\xf4\x00\x00\x010\x00\x00\x00\xd8\x00\x00\x05|\x00\x00\x02\xf4\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x010\x00\x00\x00\xd8\x00\x00\x05|\x00\x00\x02\xf4', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': True, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="3" format="literal">{'CSVDelimiter': '\t', 'controlAreaVisible': True, 'output_fileId': 'multifile.csv', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\x83\x00\x00\x01E\x00\x00\x03\x1d\x00\x00\x02\\\x00\x00\x02\x84\x00\x00\x01b\x00\x00\x03\x1c\x00\x00\x02[\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x02\x84\x00\x00\x01b\x00\x00\x03\x1c\x00\x00\x02[', 'workflow_id': 'various_input.ows', '__version__': 1}</properties>
		<properties node_id="4" format="literal">{'CSVDelimiter': '\t', 'controlAreaVisible': True, 'output_fileId': 'file.csv', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\x83\x00\x00\x01E\x00\x00\x03\x1d\x00\x00\x02\\\x00\x00\x02\x84\x00\x00\x01b\x00\x00\x03\x1c\x00\x00\x02[\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x02\x84\x00\x00\x01b\x00\x00\x03\x1c\x00\x00\x02[', 'workflow_id': 'various_input.ows', '__version__': 1}</properties>
		<properties node_id="5" format="literal">{'controlAreaVisible': True, 'input_id': 'text_input2', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01J\x00\x00\x00\xb0\x00\x00\x04V\x00\x00\x02\xa3\x00\x00\x01J\x00\x00\x00\xb0\x00\x00\x04V\x00\x00\x02\xa3\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x01J\x00\x00\x00\xb0\x00\x00\x04V\x00\x00\x02\xa3', 'workflow_id': 'various_input.ows', '__version__': 1}</properties>
		<properties node_id="6" format="literal">{'controlAreaVisible': True, 'input_id': 'text_input1', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01I\x00\x00\x00\x93\x00\x00\x04W\x00\x00\x02\xa4\x00\x00\x01J\x00\x00\x00\xb0\x00\x00\x04V\x00\x00\x02\xa3\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x01J\x00\x00\x00\xb0\x00\x00\x04V\x00\x00\x02\xa3', 'workflow_id': 'various_input.ows', '__version__': 1}</properties>
		<properties node_id="7" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 1, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01I\x00\x00\x00\xba\x00\x00\x04X\x00\x00\x02\xb7\x00\x00\x01J\x00\x00\x00\xd7\x00\x00\x04W\x00\x00\x02\xb6\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x01J\x00\x00\x00\xd7\x00\x00\x04W\x00\x00\x02\xb6', 'scriptLibrary': [], 'scriptText': 'import Orange\nimport numpy as np\n\n# Ensure in_data is of type Orange.data.Table\nif not isinstance(in_data, Orange.data.Table):\n    raise ValueError("in_data should be an instance of Orange.data.Table")\n\n# Ensure in_object is a string\nif not isinstance(in_object, str):\n    raise ValueError("in_object should be a string")\n\n# Get the existing domain of the table\ncurrent_domain = in_data.domain\n\n# Add a new variable to the domain\nnew_variable = Orange.data.StringVariable("new column")\n\n# Create a new domain with the added new variable\nnew_domain = Orange.data.Domain(current_domain.attributes,\n                                current_domain.class_vars,\n                                metas=current_domain.metas + (new_variable,))\n\n# Prepare new metas array including the new column\nnum_rows = len(in_data)\nexisting_metas = in_data.metas\nnew_metas_column = np.array([[in_object]] * num_rows, dtype=object)\nnew_metas = np.hstack((existing_metas, new_metas_column))\n\n# Create a new table with the new domain and the new metas\nout_data = Orange.data.Table(new_domain, in_data.X, in_data.Y, new_metas)', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc6\x00\x00\x00\xc9\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="8" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01/\x00\x00\x00\xbb\x00\x00\x05}\x00\x00\x02\xf5\x00\x00\x010\x00\x00\x00\xd8\x00\x00\x05|\x00\x00\x02\xf4\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x010\x00\x00\x00\xd8\x00\x00\x05|\x00\x00\x02\xf4', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': True, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="9" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 1, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01I\x00\x00\x00\xba\x00\x00\x04X\x00\x00\x02\xb7\x00\x00\x01J\x00\x00\x00\xd7\x00\x00\x04W\x00\x00\x02\xb6\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x01J\x00\x00\x00\xd7\x00\x00\x04W\x00\x00\x02\xb6', 'scriptLibrary': [], 'scriptText': 'import Orange\nimport numpy as np\n\n# Ensure in_data is of type Orange.data.Table\nif not isinstance(in_data, Orange.data.Table):\n    raise ValueError("in_data should be an instance of Orange.data.Table")\n\n# Ensure in_object is a string\nif not isinstance(in_object, str):\n    raise ValueError("in_object should be a string")\n\n# Get the existing domain of the table\ncurrent_domain = in_data.domain\n\n# Add a new variable to the domain\nnew_variable = Orange.data.StringVariable("new column")\n\n# Create a new domain with the added new variable\nnew_domain = Orange.data.Domain(current_domain.attributes,\n                                current_domain.class_vars,\n                                metas=current_domain.metas + (new_variable,))\n\n# Prepare new metas array including the new column\nnum_rows = len(in_data)\nexisting_metas = in_data.metas\nnew_metas_column = np.array([[in_object]] * num_rows, dtype=object)\nnew_metas = np.hstack((existing_metas, new_metas_column))\n\n# Create a new table with the new domain and the new metas\nout_data = Orange.data.Table(new_domain, in_data.X, in_data.Y, new_metas)', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc6\x00\x00\x00\xc9\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="10" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01/\x00\x00\x00\xbb\x00\x00\x05}\x00\x00\x02\xf5\x00\x00\x010\x00\x00\x00\xd8\x00\x00\x05|\x00\x00\x02\xf4\x00\x00\x00\x00\x00\x00\x00\x00\x05\xa0\x00\x00\x010\x00\x00\x00\xd8\x00\x00\x05|\x00\x00\x02\xf4', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': True, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
