name: Release

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Allow creating releases and pushing tags/commits
      issues: write # Allow commenting on issues
      pull-requests: write # Allow commenting on PRs
    steps:
      - uses: actions/checkout@v4 # Use latest version
        with:
          fetch-depth: 0
          # Use a PAT for write access if GITHUB_TOKEN causes issues
          # token: ${{ secrets.GH_TOKEN }} 
      
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        with:
          # Use the same PAT here if you switched in checkout
          # github_token: ${{ secrets.GH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }} # Default token
      
  publish-pypi:
    runs-on: ubuntu-latest
    needs: release
    steps:
        - uses: actions/checkout@v3

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
                
        - name: Install UV
          run: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
            echo "$HOME/.cargo/bin" >> $GITHUB_PATH
                
        - name: Install dependencies
          run: |
            uv venv
            . .venv/bin/activate
            uv pip install -e ".[dev,test]"
                
                
        - name: Build package
          run: |
            . .venv/bin/activate
            uv pip install build
            python -m build
                
        - name: Upload package artifact
          if: ${{ github.actor != 'nektos/act' }}
          uses: actions/upload-artifact@v4
          with:
            name: dist-python-${{ matrix.python-version }}
            path: dist/

        - name: Publish to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            user: __token__
            password: ${{ secrets.PYPI_API_TOKEN }}