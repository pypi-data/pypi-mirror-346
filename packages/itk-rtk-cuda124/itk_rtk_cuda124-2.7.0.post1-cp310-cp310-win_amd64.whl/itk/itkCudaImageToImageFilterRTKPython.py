# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCudaImageToImageFilterRTKPython
else:
    import _itkCudaImageToImageFilterRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterRTKPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkImageRegionRTKPython
import itk.itkImageSourceRTKPython
import itk.itkImageSourceCommonPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkPointRTKPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkCudaImageRTKPython
import itk.itkCudaDataManagerPython
import itk.itkCudaImageDataManagerRTKPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCudaCommonPython
import itk.itkImageSourceCudaCommonPython
import itk.itkCudaImagePython
import itk.itkCudaImageDataManagerPython
import itk.rtkFFTRampImageFilterPython
import itk.rtkFFTProjectionsConvolutionImageFilterPython
import itk.itkVectorRTKPython
import itk.itkFixedArrayRTKPython
import itk.itkImageToImageFilterAPython
import itk.rtkScatterGlareCorrectionImageFilterPython

def itkCudaImageToImageFilterCIF2CIF2_New():
    return itkCudaImageToImageFilterCIF2CIF2.New()

class itkCudaImageToImageFilterCIF2CIF2(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIF2CIF2):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF2CIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIF2CIF2_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIF2CIF2_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageF2 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageF2 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIF2CIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIF2CIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF2CIF2

        Create a new object of the class itkCudaImageToImageFilterCIF2CIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF2CIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF2CIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF2CIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF2CIF2 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2_swigregister(itkCudaImageToImageFilterCIF2CIF2)

def itkCudaImageToImageFilterCIF3CIF3_New():
    return itkCudaImageToImageFilterCIF3CIF3.New()

class itkCudaImageToImageFilterCIF3CIF3(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIF3CIF3):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF3CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIF3CIF3_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIF3CIF3_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageF3 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageF3 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIF3CIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIF3CIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF3CIF3

        Create a new object of the class itkCudaImageToImageFilterCIF3CIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF3CIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF3CIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF3CIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF3CIF3 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3_swigregister(itkCudaImageToImageFilterCIF3CIF3)

def itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_New():
    return itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F.New()

class itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F(itk.rtkFFTRampImageFilterPython.rtkFFTRampImageFilterCIF3CIF3F):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageF3 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageF3 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F

        Create a new object of the class itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F_swigregister(itkCudaImageToImageFilterCIF3CIF3RFCIF3CIF3F)

def itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_New():
    return itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F.New()

class itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F(itk.rtkScatterGlareCorrectionImageFilterPython.rtkScatterGlareCorrectionImageFilterCIF3CIF3F):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageF3 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageF3 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F

        Create a new object of the class itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F_swigregister(itkCudaImageToImageFilterCIF3CIF3SGCIF3CIF3F)

def itkCudaImageToImageFilterCIF4CIF4_New():
    return itkCudaImageToImageFilterCIF4CIF4.New()

class itkCudaImageToImageFilterCIF4CIF4(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIF4CIF4):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF4CIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIF4CIF4_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIF4CIF4_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageF4 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageF4 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIF4CIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIF4CIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF4CIF4

        Create a new object of the class itkCudaImageToImageFilterCIF4CIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF4CIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF4CIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF4CIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF4CIF4 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4_swigregister(itkCudaImageToImageFilterCIF4CIF4)

def itkCudaImageToImageFilterCIVF22CIVF22_New():
    return itkCudaImageToImageFilterCIVF22CIVF22.New()

class itkCudaImageToImageFilterCIVF22CIVF22(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIVF22CIVF22):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF22CIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF22CIVF22_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF22CIVF22_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF22 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF22 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF22CIVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF22CIVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF22CIVF22

        Create a new object of the class itkCudaImageToImageFilterCIVF22CIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF22CIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF22CIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF22CIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF22CIVF22 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22_swigregister(itkCudaImageToImageFilterCIVF22CIVF22)

def itkCudaImageToImageFilterCIVF23CIVF23_New():
    return itkCudaImageToImageFilterCIVF23CIVF23.New()

class itkCudaImageToImageFilterCIVF23CIVF23(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIVF23CIVF23):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF23CIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF23CIVF23_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF23CIVF23_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF23 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF23 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF23CIVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF23CIVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF23CIVF23

        Create a new object of the class itkCudaImageToImageFilterCIVF23CIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF23CIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF23CIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF23CIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF23CIVF23 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23_swigregister(itkCudaImageToImageFilterCIVF23CIVF23)

def itkCudaImageToImageFilterCIVF24CIVF24_New():
    return itkCudaImageToImageFilterCIVF24CIVF24.New()

class itkCudaImageToImageFilterCIVF24CIVF24(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIVF24CIVF24):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF24CIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF24CIVF24_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF24CIVF24_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF24 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF24 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF24CIVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF24CIVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF24CIVF24

        Create a new object of the class itkCudaImageToImageFilterCIVF24CIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF24CIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF24CIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF24CIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF24CIVF24 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24_swigregister(itkCudaImageToImageFilterCIVF24CIVF24)

def itkCudaImageToImageFilterCIVF32CIVF32_New():
    return itkCudaImageToImageFilterCIVF32CIVF32.New()

class itkCudaImageToImageFilterCIVF32CIVF32(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIVF32CIVF32):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF32CIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF32CIVF32_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF32CIVF32_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF32 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF32 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF32CIVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF32CIVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF32CIVF32

        Create a new object of the class itkCudaImageToImageFilterCIVF32CIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF32CIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF32CIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF32CIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF32CIVF32 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32_swigregister(itkCudaImageToImageFilterCIVF32CIVF32)

def itkCudaImageToImageFilterCIVF33CIVF33_New():
    return itkCudaImageToImageFilterCIVF33CIVF33.New()

class itkCudaImageToImageFilterCIVF33CIVF33(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIVF33CIVF33):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF33CIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF33CIVF33_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF33CIVF33_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF33 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF33 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF33CIVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF33CIVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF33CIVF33

        Create a new object of the class itkCudaImageToImageFilterCIVF33CIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF33CIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF33CIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF33CIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF33CIVF33 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33_swigregister(itkCudaImageToImageFilterCIVF33CIVF33)

def itkCudaImageToImageFilterCIVF34CIVF34_New():
    return itkCudaImageToImageFilterCIVF34CIVF34.New()

class itkCudaImageToImageFilterCIVF34CIVF34(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIVF34CIVF34):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF34CIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF34CIVF34_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF34CIVF34_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF34 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF34 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF34CIVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF34CIVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF34CIVF34

        Create a new object of the class itkCudaImageToImageFilterCIVF34CIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF34CIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF34CIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF34CIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF34CIVF34 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34_swigregister(itkCudaImageToImageFilterCIVF34CIVF34)

def itkCudaImageToImageFilterCIVF42CIVF42_New():
    return itkCudaImageToImageFilterCIVF42CIVF42.New()

class itkCudaImageToImageFilterCIVF42CIVF42(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIVF42CIVF42):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF42CIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF42CIVF42_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF42CIVF42_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF42 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF42 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF42CIVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF42CIVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF42CIVF42

        Create a new object of the class itkCudaImageToImageFilterCIVF42CIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF42CIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF42CIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF42CIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF42CIVF42 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42_swigregister(itkCudaImageToImageFilterCIVF42CIVF42)

def itkCudaImageToImageFilterCIVF43CIVF43_New():
    return itkCudaImageToImageFilterCIVF43CIVF43.New()

class itkCudaImageToImageFilterCIVF43CIVF43(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIVF43CIVF43):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF43CIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF43CIVF43_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF43CIVF43_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF43 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF43 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF43CIVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF43CIVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF43CIVF43

        Create a new object of the class itkCudaImageToImageFilterCIVF43CIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF43CIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF43CIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF43CIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF43CIVF43 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43_swigregister(itkCudaImageToImageFilterCIVF43CIVF43)

def itkCudaImageToImageFilterCIVF44CIVF44_New():
    return itkCudaImageToImageFilterCIVF44CIVF44.New()

class itkCudaImageToImageFilterCIVF44CIVF44(itk.itkImageToImageFilterCudaCommonPython.itkImageToImageFilterCIVF44CIVF44):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF44CIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF44CIVF44_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF44CIVF44_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF44 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF44 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF44CIVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF44CIVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF44CIVF44

        Create a new object of the class itkCudaImageToImageFilterCIVF44CIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF44CIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF44CIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF44CIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF44CIVF44 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44_swigregister(itkCudaImageToImageFilterCIVF44CIVF44)

def itkCudaImageToImageFilterCIVF52CIVF52_New():
    return itkCudaImageToImageFilterCIVF52CIVF52.New()

class itkCudaImageToImageFilterCIVF52CIVF52(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF52CIVF52):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF52CIVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF52CIVF52_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF52CIVF52_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF52 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF52 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF52CIVF52

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF52CIVF52

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF52CIVF52

        Create a new object of the class itkCudaImageToImageFilterCIVF52CIVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF52CIVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF52CIVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF52CIVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF52CIVF52 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52_swigregister(itkCudaImageToImageFilterCIVF52CIVF52)

def itkCudaImageToImageFilterCIVF53CIVF53_New():
    return itkCudaImageToImageFilterCIVF53CIVF53.New()

class itkCudaImageToImageFilterCIVF53CIVF53(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF53CIVF53):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF53CIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF53CIVF53_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF53CIVF53_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF53 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF53 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF53CIVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF53CIVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF53CIVF53

        Create a new object of the class itkCudaImageToImageFilterCIVF53CIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF53CIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF53CIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF53CIVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF53CIVF53 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53_swigregister(itkCudaImageToImageFilterCIVF53CIVF53)

def itkCudaImageToImageFilterCIVF54CIVF54_New():
    return itkCudaImageToImageFilterCIVF54CIVF54.New()

class itkCudaImageToImageFilterCIVF54CIVF54(itk.itkImageToImageFilterRTKPython.itkImageToImageFilterCIVF54CIVF54):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF54CIVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF54CIVF54_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF54CIVF54_Pointer"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF54 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF54 *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaImageToImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF54CIVF54

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF54CIVF54

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF54CIVF54

        Create a new object of the class itkCudaImageToImageFilterCIVF54CIVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF54CIVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF54CIVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF54CIVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF54CIVF54 in _itkCudaImageToImageFilterRTKPython:
_itkCudaImageToImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54_swigregister(itkCudaImageToImageFilterCIVF54CIVF54)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def cuda_image_to_image_filter(*args: itkt.ImageLike,  gpu_enabled: bool=..., coefficients: Sequence[float]=..., greatest_prime_factor: int=..., truncation_correction: float=..., zero_pad_factors: Sequence[int]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for CudaImageToImageFilter"""
    import itk

    kwarg_typehints = { 'gpu_enabled':gpu_enabled,'coefficients':coefficients,'greatest_prime_factor':greatest_prime_factor,'truncation_correction':truncation_correction,'zero_pad_factors':zero_pad_factors }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.CudaImageToImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def cuda_image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.CudaImageToImageFilter
    cuda_image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    cuda_image_to_image_filter.__doc__ = filter_object.__doc__



