# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCudaImageRTKPython
else:
    import _itkCudaImageRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkCudaDataManagerPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkCudaImageDataManagerRTKPython
import itk.itkImageRTKPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageBaseRTKPython
import itk.itkImageRegionRTKPython
import itk.itkPointRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython

def itkCudaImageCVF52_New():
    return itkCudaImageCVF52.New()

class itkCudaImageCVF52(itk.itkImageRTKPython.itkImageCVF52):
    r"""Proxy of C++ itkCudaImageCVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageCVF52_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageCVF52_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkCovariantVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex2 const &
        value: itkCovariantVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkCovariantVectorF5

        Parameters
        ----------
        index: itkIndex2 const &

        GetPixel(self, index) -> itkCovariantVectorF5

        Parameters
        ----------
        index: itkIndex2 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_GetPixel(self, *args)

    def UpdateBuffers(self):
        r"""UpdateBuffers(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_UpdateBuffers(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkCovariantVectorF5
        GetBufferPointer(self) -> itkCovariantVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 > > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 > > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_GetNeighborhoodAccessor(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > > *

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_SetPixelContainer(self, container)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_GetPixelContainer(self, *args)

    def GetModifiableDataManager(self):
        r"""GetModifiableDataManager(self) -> itkCudaImageDataManagerCICVF52"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_GetModifiableDataManager(self)

    def GetDataManager(self, *args):
        r"""
        GetDataManager(self) -> itkCudaImageDataManagerCICVF52
        GetDataManager(self) -> itkCudaImageDataManagerCICVF52
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_GetDataManager(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_GetCudaDataManager(self)

    def Graft(self, data):
        r"""
        Graft(self, data)

        Parameters
        ----------
        data: itkCudaImageCVF52 const *

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_Graft(self, data)
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageCVF52

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageCVF52

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF52

        Create a new object of the class itkCudaImageCVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF52 in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageCVF52_swigregister(itkCudaImageCVF52)
class itkCudaImageCVF52_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF52_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF52_ConstPointer
        __init__(self, p) -> itkCudaImageCVF52_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF52_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF52_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF52 const *

        """
        _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_swiginit(self, _itkCudaImageRTKPython.new_itkCudaImageCVF52_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageCVF52_ConstPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCudaImageCVF52"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer___deref__(self)

    def __ref__(self):
        r"""__ref__(self) -> itkCudaImageCVF52"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer___ref__(self)

    def IsNotNull(self):
        r"""IsNotNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_IsNotNull(self)

    def IsNull(self):
        r"""IsNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_IsNull(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCudaImageCVF52"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetPointer(self)

    def get(self):
        r"""get(self) -> itkCudaImageCVF52"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_get(self)

    def Print(self, os):
        r"""
        Print(self, os) -> itkCudaImageCVF52

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_Print(self, os)

    def Swap(self, other):
        r"""
        Swap(self, other)

        Parameters
        ----------
        other: itkCudaImageCVF52_ConstPointer &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_Swap(self, other)

    def Clone(self):
        r"""Clone(self) -> itkCudaImageCVF52_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_Clone(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkCovariantVectorF5
        GetBufferPointer(self) -> itkCovariantVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 > > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 > > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetNeighborhoodAccessor(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetPixelContainer(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetCudaDataManager(self)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD22"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetDirection(self)

    def GetInverseDirection(self):
        r"""GetInverseDirection(self) -> itkMatrixD22"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetInverseDirection(self)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD2"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetSpacing(self)

    def GetOrigin(self):
        r"""GetOrigin(self) -> itkPointD2"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetOrigin(self)

    def __GetLargestPossibleRegion_orig__(self):
        r"""__GetLargestPossibleRegion_orig__(self) -> itkImageRegion2"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer___GetLargestPossibleRegion_orig__(self)

    def __GetBufferedRegion_orig__(self):
        r"""__GetBufferedRegion_orig__(self) -> itkImageRegion2"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer___GetBufferedRegion_orig__(self)

    def __GetRequestedRegion_orig__(self):
        r"""__GetRequestedRegion_orig__(self) -> itkImageRegion2"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer___GetRequestedRegion_orig__(self)

    def GetOffsetTable(self):
        r"""GetOffsetTable(self) -> long const *"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetOffsetTable(self)

    def ComputeOffset(self, ind):
        r"""
        ComputeOffset(self, ind) -> long

        Parameters
        ----------
        ind: itkIndex2 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_ComputeOffset(self, ind)

    def ComputeIndex(self, offset):
        r"""
        ComputeIndex(self, offset) -> itkIndex2

        Parameters
        ----------
        offset: long

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_ComputeIndex(self, offset)

    def IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance):
        r"""
        IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase2 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance)

    def IsSameImageGeometryAs(self, *args):
        r"""
        IsSameImageGeometryAs(self, otherImage, coordinateTolerance=itk::DefaultImageCoordinateTolerance, directionTolerance=itk::DefaultImageDirectionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase2 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_IsSameImageGeometryAs(self, *args)

    def GetNumberOfComponentsPerPixel(self):
        r"""GetNumberOfComponentsPerPixel(self) -> unsigned int"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetNumberOfComponentsPerPixel(self)

    def GetSource(self):
        r"""GetSource(self) -> itkProcessObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetSource(self)

    def GetSourceOutputName(self):
        r"""GetSourceOutputName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetSourceOutputName(self)

    def GetSourceOutputIndex(self):
        r"""GetSourceOutputIndex(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetSourceOutputIndex(self)

    def UpdateSource(self):
        r"""UpdateSource(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_UpdateSource(self)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetReleaseDataFlag(self)

    def ShouldIReleaseData(self):
        r"""ShouldIReleaseData(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_ShouldIReleaseData(self)

    def GetDataReleased(self):
        r"""GetDataReleased(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetDataReleased(self)

    def GetPipelineMTime(self):
        r"""GetPipelineMTime(self) -> unsigned long const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetPipelineMTime(self)

    def GetUpdateMTime(self):
        r"""GetUpdateMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetUpdateMTime(self)

    def GetRealTimeStamp(self):
        r"""GetRealTimeStamp(self) -> itkRealTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetRealTimeStamp(self)

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_Modified(self)

    def AddObserver(self, *args):
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_AddObserver(self, *args)


    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_InvokeEvent(self, *args)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetMetaDataDictionary(self, *args)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetObjectName(self)

    def CreateAnother(self):
        r"""CreateAnother(self) -> itkLightObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_CreateAnother(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetNameOfClass(self)

    def GetReferenceCount(self):
        r"""GetReferenceCount(self) -> int"""
        return _itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_GetReferenceCount(self)

# Register itkCudaImageCVF52_ConstPointer in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageCVF52_ConstPointer_swigregister(itkCudaImageCVF52_ConstPointer)

def itkCudaImageCVF53_New():
    return itkCudaImageCVF53.New()

class itkCudaImageCVF53(itk.itkImageRTKPython.itkImageCVF53):
    r"""Proxy of C++ itkCudaImageCVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageCVF53_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageCVF53_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkCovariantVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: itkCovariantVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkCovariantVectorF5

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> itkCovariantVectorF5

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_GetPixel(self, *args)

    def UpdateBuffers(self):
        r"""UpdateBuffers(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_UpdateBuffers(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkCovariantVectorF5
        GetBufferPointer(self) -> itkCovariantVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 >,3 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 >,3 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_GetNeighborhoodAccessor(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > > *

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_SetPixelContainer(self, container)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_GetPixelContainer(self, *args)

    def GetModifiableDataManager(self):
        r"""GetModifiableDataManager(self) -> itkCudaImageDataManagerCICVF53"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_GetModifiableDataManager(self)

    def GetDataManager(self, *args):
        r"""
        GetDataManager(self) -> itkCudaImageDataManagerCICVF53
        GetDataManager(self) -> itkCudaImageDataManagerCICVF53
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_GetDataManager(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_GetCudaDataManager(self)

    def Graft(self, data):
        r"""
        Graft(self, data)

        Parameters
        ----------
        data: itkCudaImageCVF53 const *

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_Graft(self, data)
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageCVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageCVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF53

        Create a new object of the class itkCudaImageCVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF53 in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageCVF53_swigregister(itkCudaImageCVF53)
class itkCudaImageCVF53_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF53_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF53_ConstPointer
        __init__(self, p) -> itkCudaImageCVF53_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF53_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF53_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF53 const *

        """
        _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_swiginit(self, _itkCudaImageRTKPython.new_itkCudaImageCVF53_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageCVF53_ConstPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCudaImageCVF53"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer___deref__(self)

    def __ref__(self):
        r"""__ref__(self) -> itkCudaImageCVF53"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer___ref__(self)

    def IsNotNull(self):
        r"""IsNotNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_IsNotNull(self)

    def IsNull(self):
        r"""IsNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_IsNull(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCudaImageCVF53"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetPointer(self)

    def get(self):
        r"""get(self) -> itkCudaImageCVF53"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_get(self)

    def Print(self, os):
        r"""
        Print(self, os) -> itkCudaImageCVF53

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_Print(self, os)

    def Swap(self, other):
        r"""
        Swap(self, other)

        Parameters
        ----------
        other: itkCudaImageCVF53_ConstPointer &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_Swap(self, other)

    def Clone(self):
        r"""Clone(self) -> itkCudaImageCVF53_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_Clone(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkCovariantVectorF5
        GetBufferPointer(self) -> itkCovariantVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 >,3 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 >,3 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetNeighborhoodAccessor(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetPixelContainer(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetCudaDataManager(self)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD33"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetDirection(self)

    def GetInverseDirection(self):
        r"""GetInverseDirection(self) -> itkMatrixD33"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetInverseDirection(self)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD3"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetSpacing(self)

    def GetOrigin(self):
        r"""GetOrigin(self) -> itkPointD3"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetOrigin(self)

    def __GetLargestPossibleRegion_orig__(self):
        r"""__GetLargestPossibleRegion_orig__(self) -> itkImageRegion3"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer___GetLargestPossibleRegion_orig__(self)

    def __GetBufferedRegion_orig__(self):
        r"""__GetBufferedRegion_orig__(self) -> itkImageRegion3"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer___GetBufferedRegion_orig__(self)

    def __GetRequestedRegion_orig__(self):
        r"""__GetRequestedRegion_orig__(self) -> itkImageRegion3"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer___GetRequestedRegion_orig__(self)

    def GetOffsetTable(self):
        r"""GetOffsetTable(self) -> long const *"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetOffsetTable(self)

    def ComputeOffset(self, ind):
        r"""
        ComputeOffset(self, ind) -> long

        Parameters
        ----------
        ind: itkIndex3 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_ComputeOffset(self, ind)

    def ComputeIndex(self, offset):
        r"""
        ComputeIndex(self, offset) -> itkIndex3

        Parameters
        ----------
        offset: long

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_ComputeIndex(self, offset)

    def IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance):
        r"""
        IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase3 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance)

    def IsSameImageGeometryAs(self, *args):
        r"""
        IsSameImageGeometryAs(self, otherImage, coordinateTolerance=itk::DefaultImageCoordinateTolerance, directionTolerance=itk::DefaultImageDirectionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase3 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_IsSameImageGeometryAs(self, *args)

    def GetNumberOfComponentsPerPixel(self):
        r"""GetNumberOfComponentsPerPixel(self) -> unsigned int"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetNumberOfComponentsPerPixel(self)

    def GetSource(self):
        r"""GetSource(self) -> itkProcessObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetSource(self)

    def GetSourceOutputName(self):
        r"""GetSourceOutputName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetSourceOutputName(self)

    def GetSourceOutputIndex(self):
        r"""GetSourceOutputIndex(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetSourceOutputIndex(self)

    def UpdateSource(self):
        r"""UpdateSource(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_UpdateSource(self)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetReleaseDataFlag(self)

    def ShouldIReleaseData(self):
        r"""ShouldIReleaseData(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_ShouldIReleaseData(self)

    def GetDataReleased(self):
        r"""GetDataReleased(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetDataReleased(self)

    def GetPipelineMTime(self):
        r"""GetPipelineMTime(self) -> unsigned long const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetPipelineMTime(self)

    def GetUpdateMTime(self):
        r"""GetUpdateMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetUpdateMTime(self)

    def GetRealTimeStamp(self):
        r"""GetRealTimeStamp(self) -> itkRealTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetRealTimeStamp(self)

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_Modified(self)

    def AddObserver(self, *args):
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_AddObserver(self, *args)


    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_InvokeEvent(self, *args)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetMetaDataDictionary(self, *args)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetObjectName(self)

    def CreateAnother(self):
        r"""CreateAnother(self) -> itkLightObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_CreateAnother(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetNameOfClass(self)

    def GetReferenceCount(self):
        r"""GetReferenceCount(self) -> int"""
        return _itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_GetReferenceCount(self)

# Register itkCudaImageCVF53_ConstPointer in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageCVF53_ConstPointer_swigregister(itkCudaImageCVF53_ConstPointer)

def itkCudaImageCVF54_New():
    return itkCudaImageCVF54.New()

class itkCudaImageCVF54(itk.itkImageRTKPython.itkImageCVF54):
    r"""Proxy of C++ itkCudaImageCVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageCVF54_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageCVF54_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkCovariantVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex4 const &
        value: itkCovariantVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkCovariantVectorF5

        Parameters
        ----------
        index: itkIndex4 const &

        GetPixel(self, index) -> itkCovariantVectorF5

        Parameters
        ----------
        index: itkIndex4 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_GetPixel(self, *args)

    def UpdateBuffers(self):
        r"""UpdateBuffers(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_UpdateBuffers(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkCovariantVectorF5
        GetBufferPointer(self) -> itkCovariantVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 >,4 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 >,4 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_GetNeighborhoodAccessor(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > > *

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_SetPixelContainer(self, container)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_GetPixelContainer(self, *args)

    def GetModifiableDataManager(self):
        r"""GetModifiableDataManager(self) -> itkCudaImageDataManagerCICVF54"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_GetModifiableDataManager(self)

    def GetDataManager(self, *args):
        r"""
        GetDataManager(self) -> itkCudaImageDataManagerCICVF54
        GetDataManager(self) -> itkCudaImageDataManagerCICVF54
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_GetDataManager(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_GetCudaDataManager(self)

    def Graft(self, data):
        r"""
        Graft(self, data)

        Parameters
        ----------
        data: itkCudaImageCVF54 const *

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_Graft(self, data)
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageCVF54

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageCVF54

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageCVF54

        Create a new object of the class itkCudaImageCVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageCVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageCVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageCVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageCVF54 in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageCVF54_swigregister(itkCudaImageCVF54)
class itkCudaImageCVF54_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageCVF54_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageCVF54_ConstPointer
        __init__(self, p) -> itkCudaImageCVF54_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF54_ConstPointer const &

        __init__(self, p) -> itkCudaImageCVF54_ConstPointer

        Parameters
        ----------
        p: itkCudaImageCVF54 const *

        """
        _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_swiginit(self, _itkCudaImageRTKPython.new_itkCudaImageCVF54_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageCVF54_ConstPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCudaImageCVF54"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer___deref__(self)

    def __ref__(self):
        r"""__ref__(self) -> itkCudaImageCVF54"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer___ref__(self)

    def IsNotNull(self):
        r"""IsNotNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_IsNotNull(self)

    def IsNull(self):
        r"""IsNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_IsNull(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCudaImageCVF54"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetPointer(self)

    def get(self):
        r"""get(self) -> itkCudaImageCVF54"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_get(self)

    def Print(self, os):
        r"""
        Print(self, os) -> itkCudaImageCVF54

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_Print(self, os)

    def Swap(self, other):
        r"""
        Swap(self, other)

        Parameters
        ----------
        other: itkCudaImageCVF54_ConstPointer &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_Swap(self, other)

    def Clone(self):
        r"""Clone(self) -> itkCudaImageCVF54_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_Clone(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkCovariantVectorF5
        GetBufferPointer(self) -> itkCovariantVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::CovariantVector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 >,4 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::CovariantVector< float,5 >,4 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetNeighborhoodAccessor(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::CovariantVector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetPixelContainer(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetCudaDataManager(self)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD44"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetDirection(self)

    def GetInverseDirection(self):
        r"""GetInverseDirection(self) -> itkMatrixD44"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetInverseDirection(self)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD4"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetSpacing(self)

    def GetOrigin(self):
        r"""GetOrigin(self) -> itkPointD4"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetOrigin(self)

    def __GetLargestPossibleRegion_orig__(self):
        r"""__GetLargestPossibleRegion_orig__(self) -> itkImageRegion4"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer___GetLargestPossibleRegion_orig__(self)

    def __GetBufferedRegion_orig__(self):
        r"""__GetBufferedRegion_orig__(self) -> itkImageRegion4"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer___GetBufferedRegion_orig__(self)

    def __GetRequestedRegion_orig__(self):
        r"""__GetRequestedRegion_orig__(self) -> itkImageRegion4"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer___GetRequestedRegion_orig__(self)

    def GetOffsetTable(self):
        r"""GetOffsetTable(self) -> long const *"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetOffsetTable(self)

    def ComputeOffset(self, ind):
        r"""
        ComputeOffset(self, ind) -> long

        Parameters
        ----------
        ind: itkIndex4 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_ComputeOffset(self, ind)

    def ComputeIndex(self, offset):
        r"""
        ComputeIndex(self, offset) -> itkIndex4

        Parameters
        ----------
        offset: long

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_ComputeIndex(self, offset)

    def IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance):
        r"""
        IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase4 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance)

    def IsSameImageGeometryAs(self, *args):
        r"""
        IsSameImageGeometryAs(self, otherImage, coordinateTolerance=itk::DefaultImageCoordinateTolerance, directionTolerance=itk::DefaultImageDirectionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase4 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_IsSameImageGeometryAs(self, *args)

    def GetNumberOfComponentsPerPixel(self):
        r"""GetNumberOfComponentsPerPixel(self) -> unsigned int"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetNumberOfComponentsPerPixel(self)

    def GetSource(self):
        r"""GetSource(self) -> itkProcessObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetSource(self)

    def GetSourceOutputName(self):
        r"""GetSourceOutputName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetSourceOutputName(self)

    def GetSourceOutputIndex(self):
        r"""GetSourceOutputIndex(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetSourceOutputIndex(self)

    def UpdateSource(self):
        r"""UpdateSource(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_UpdateSource(self)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetReleaseDataFlag(self)

    def ShouldIReleaseData(self):
        r"""ShouldIReleaseData(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_ShouldIReleaseData(self)

    def GetDataReleased(self):
        r"""GetDataReleased(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetDataReleased(self)

    def GetPipelineMTime(self):
        r"""GetPipelineMTime(self) -> unsigned long const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetPipelineMTime(self)

    def GetUpdateMTime(self):
        r"""GetUpdateMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetUpdateMTime(self)

    def GetRealTimeStamp(self):
        r"""GetRealTimeStamp(self) -> itkRealTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetRealTimeStamp(self)

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_Modified(self)

    def AddObserver(self, *args):
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_AddObserver(self, *args)


    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_InvokeEvent(self, *args)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetMetaDataDictionary(self, *args)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetObjectName(self)

    def CreateAnother(self):
        r"""CreateAnother(self) -> itkLightObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_CreateAnother(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetNameOfClass(self)

    def GetReferenceCount(self):
        r"""GetReferenceCount(self) -> int"""
        return _itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_GetReferenceCount(self)

# Register itkCudaImageCVF54_ConstPointer in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageCVF54_ConstPointer_swigregister(itkCudaImageCVF54_ConstPointer)

def itkCudaImageVF52_New():
    return itkCudaImageVF52.New()

class itkCudaImageVF52(itk.itkImageRTKPython.itkImageVF52):
    r"""Proxy of C++ itkCudaImageVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageVF52_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF52___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageVF52_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex2 const &
        value: itkVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkVectorF5

        Parameters
        ----------
        index: itkIndex2 const &

        GetPixel(self, index) -> itkVectorF5

        Parameters
        ----------
        index: itkIndex2 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_GetPixel(self, *args)

    def UpdateBuffers(self):
        r"""UpdateBuffers(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_UpdateBuffers(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkVectorF5
        GetBufferPointer(self) -> itkVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 > > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 > > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_GetNeighborhoodAccessor(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > > *

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_SetPixelContainer(self, container)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_GetPixelContainer(self, *args)

    def GetModifiableDataManager(self):
        r"""GetModifiableDataManager(self) -> itkCudaImageDataManagerCIVF52"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_GetModifiableDataManager(self)

    def GetDataManager(self, *args):
        r"""
        GetDataManager(self) -> itkCudaImageDataManagerCIVF52
        GetDataManager(self) -> itkCudaImageDataManagerCIVF52
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_GetDataManager(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_GetCudaDataManager(self)

    def Graft(self, data):
        r"""
        Graft(self, data)

        Parameters
        ----------
        data: itkCudaImageVF52 const *

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_Graft(self, data)
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageVF52

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageVF52

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF52

        Create a new object of the class itkCudaImageVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF52 in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageVF52_swigregister(itkCudaImageVF52)
class itkCudaImageVF52_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF52_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF52_ConstPointer
        __init__(self, p) -> itkCudaImageVF52_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF52_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF52_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF52 const *

        """
        _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_swiginit(self, _itkCudaImageRTKPython.new_itkCudaImageVF52_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageVF52_ConstPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCudaImageVF52"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer___deref__(self)

    def __ref__(self):
        r"""__ref__(self) -> itkCudaImageVF52"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer___ref__(self)

    def IsNotNull(self):
        r"""IsNotNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_IsNotNull(self)

    def IsNull(self):
        r"""IsNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_IsNull(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCudaImageVF52"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetPointer(self)

    def get(self):
        r"""get(self) -> itkCudaImageVF52"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_get(self)

    def Print(self, os):
        r"""
        Print(self, os) -> itkCudaImageVF52

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_Print(self, os)

    def Swap(self, other):
        r"""
        Swap(self, other)

        Parameters
        ----------
        other: itkCudaImageVF52_ConstPointer &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_Swap(self, other)

    def Clone(self):
        r"""Clone(self) -> itkCudaImageVF52_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_Clone(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkVectorF5
        GetBufferPointer(self) -> itkVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 > > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 > > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetNeighborhoodAccessor(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetPixelContainer(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetCudaDataManager(self)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD22"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetDirection(self)

    def GetInverseDirection(self):
        r"""GetInverseDirection(self) -> itkMatrixD22"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetInverseDirection(self)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD2"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetSpacing(self)

    def GetOrigin(self):
        r"""GetOrigin(self) -> itkPointD2"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetOrigin(self)

    def __GetLargestPossibleRegion_orig__(self):
        r"""__GetLargestPossibleRegion_orig__(self) -> itkImageRegion2"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer___GetLargestPossibleRegion_orig__(self)

    def __GetBufferedRegion_orig__(self):
        r"""__GetBufferedRegion_orig__(self) -> itkImageRegion2"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer___GetBufferedRegion_orig__(self)

    def __GetRequestedRegion_orig__(self):
        r"""__GetRequestedRegion_orig__(self) -> itkImageRegion2"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer___GetRequestedRegion_orig__(self)

    def GetOffsetTable(self):
        r"""GetOffsetTable(self) -> long const *"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetOffsetTable(self)

    def ComputeOffset(self, ind):
        r"""
        ComputeOffset(self, ind) -> long

        Parameters
        ----------
        ind: itkIndex2 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_ComputeOffset(self, ind)

    def ComputeIndex(self, offset):
        r"""
        ComputeIndex(self, offset) -> itkIndex2

        Parameters
        ----------
        offset: long

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_ComputeIndex(self, offset)

    def IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance):
        r"""
        IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase2 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance)

    def IsSameImageGeometryAs(self, *args):
        r"""
        IsSameImageGeometryAs(self, otherImage, coordinateTolerance=itk::DefaultImageCoordinateTolerance, directionTolerance=itk::DefaultImageDirectionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase2 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_IsSameImageGeometryAs(self, *args)

    def GetNumberOfComponentsPerPixel(self):
        r"""GetNumberOfComponentsPerPixel(self) -> unsigned int"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetNumberOfComponentsPerPixel(self)

    def GetSource(self):
        r"""GetSource(self) -> itkProcessObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetSource(self)

    def GetSourceOutputName(self):
        r"""GetSourceOutputName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetSourceOutputName(self)

    def GetSourceOutputIndex(self):
        r"""GetSourceOutputIndex(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetSourceOutputIndex(self)

    def UpdateSource(self):
        r"""UpdateSource(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_UpdateSource(self)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetReleaseDataFlag(self)

    def ShouldIReleaseData(self):
        r"""ShouldIReleaseData(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_ShouldIReleaseData(self)

    def GetDataReleased(self):
        r"""GetDataReleased(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetDataReleased(self)

    def GetPipelineMTime(self):
        r"""GetPipelineMTime(self) -> unsigned long const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetPipelineMTime(self)

    def GetUpdateMTime(self):
        r"""GetUpdateMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetUpdateMTime(self)

    def GetRealTimeStamp(self):
        r"""GetRealTimeStamp(self) -> itkRealTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetRealTimeStamp(self)

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_Modified(self)

    def AddObserver(self, *args):
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_AddObserver(self, *args)


    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_InvokeEvent(self, *args)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetMetaDataDictionary(self, *args)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetObjectName(self)

    def CreateAnother(self):
        r"""CreateAnother(self) -> itkLightObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_CreateAnother(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetNameOfClass(self)

    def GetReferenceCount(self):
        r"""GetReferenceCount(self) -> int"""
        return _itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_GetReferenceCount(self)

# Register itkCudaImageVF52_ConstPointer in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageVF52_ConstPointer_swigregister(itkCudaImageVF52_ConstPointer)

def itkCudaImageVF53_New():
    return itkCudaImageVF53.New()

class itkCudaImageVF53(itk.itkImageRTKPython.itkImageVF53):
    r"""Proxy of C++ itkCudaImageVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageVF53_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageVF53_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: itkVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkVectorF5

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> itkVectorF5

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_GetPixel(self, *args)

    def UpdateBuffers(self):
        r"""UpdateBuffers(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_UpdateBuffers(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkVectorF5
        GetBufferPointer(self) -> itkVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 >,3 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 >,3 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_GetNeighborhoodAccessor(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > > *

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_SetPixelContainer(self, container)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_GetPixelContainer(self, *args)

    def GetModifiableDataManager(self):
        r"""GetModifiableDataManager(self) -> itkCudaImageDataManagerCIVF53"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_GetModifiableDataManager(self)

    def GetDataManager(self, *args):
        r"""
        GetDataManager(self) -> itkCudaImageDataManagerCIVF53
        GetDataManager(self) -> itkCudaImageDataManagerCIVF53
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_GetDataManager(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_GetCudaDataManager(self)

    def Graft(self, data):
        r"""
        Graft(self, data)

        Parameters
        ----------
        data: itkCudaImageVF53 const *

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_Graft(self, data)
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF53

        Create a new object of the class itkCudaImageVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF53 in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageVF53_swigregister(itkCudaImageVF53)
class itkCudaImageVF53_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF53_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF53_ConstPointer
        __init__(self, p) -> itkCudaImageVF53_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF53_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF53_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF53 const *

        """
        _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_swiginit(self, _itkCudaImageRTKPython.new_itkCudaImageVF53_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageVF53_ConstPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCudaImageVF53"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer___deref__(self)

    def __ref__(self):
        r"""__ref__(self) -> itkCudaImageVF53"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer___ref__(self)

    def IsNotNull(self):
        r"""IsNotNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_IsNotNull(self)

    def IsNull(self):
        r"""IsNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_IsNull(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCudaImageVF53"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetPointer(self)

    def get(self):
        r"""get(self) -> itkCudaImageVF53"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_get(self)

    def Print(self, os):
        r"""
        Print(self, os) -> itkCudaImageVF53

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_Print(self, os)

    def Swap(self, other):
        r"""
        Swap(self, other)

        Parameters
        ----------
        other: itkCudaImageVF53_ConstPointer &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_Swap(self, other)

    def Clone(self):
        r"""Clone(self) -> itkCudaImageVF53_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_Clone(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkVectorF5
        GetBufferPointer(self) -> itkVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 >,3 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 >,3 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetNeighborhoodAccessor(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetPixelContainer(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetCudaDataManager(self)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD33"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetDirection(self)

    def GetInverseDirection(self):
        r"""GetInverseDirection(self) -> itkMatrixD33"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetInverseDirection(self)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD3"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetSpacing(self)

    def GetOrigin(self):
        r"""GetOrigin(self) -> itkPointD3"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetOrigin(self)

    def __GetLargestPossibleRegion_orig__(self):
        r"""__GetLargestPossibleRegion_orig__(self) -> itkImageRegion3"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer___GetLargestPossibleRegion_orig__(self)

    def __GetBufferedRegion_orig__(self):
        r"""__GetBufferedRegion_orig__(self) -> itkImageRegion3"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer___GetBufferedRegion_orig__(self)

    def __GetRequestedRegion_orig__(self):
        r"""__GetRequestedRegion_orig__(self) -> itkImageRegion3"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer___GetRequestedRegion_orig__(self)

    def GetOffsetTable(self):
        r"""GetOffsetTable(self) -> long const *"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetOffsetTable(self)

    def ComputeOffset(self, ind):
        r"""
        ComputeOffset(self, ind) -> long

        Parameters
        ----------
        ind: itkIndex3 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_ComputeOffset(self, ind)

    def ComputeIndex(self, offset):
        r"""
        ComputeIndex(self, offset) -> itkIndex3

        Parameters
        ----------
        offset: long

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_ComputeIndex(self, offset)

    def IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance):
        r"""
        IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase3 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance)

    def IsSameImageGeometryAs(self, *args):
        r"""
        IsSameImageGeometryAs(self, otherImage, coordinateTolerance=itk::DefaultImageCoordinateTolerance, directionTolerance=itk::DefaultImageDirectionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase3 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_IsSameImageGeometryAs(self, *args)

    def GetNumberOfComponentsPerPixel(self):
        r"""GetNumberOfComponentsPerPixel(self) -> unsigned int"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetNumberOfComponentsPerPixel(self)

    def GetSource(self):
        r"""GetSource(self) -> itkProcessObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetSource(self)

    def GetSourceOutputName(self):
        r"""GetSourceOutputName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetSourceOutputName(self)

    def GetSourceOutputIndex(self):
        r"""GetSourceOutputIndex(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetSourceOutputIndex(self)

    def UpdateSource(self):
        r"""UpdateSource(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_UpdateSource(self)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetReleaseDataFlag(self)

    def ShouldIReleaseData(self):
        r"""ShouldIReleaseData(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_ShouldIReleaseData(self)

    def GetDataReleased(self):
        r"""GetDataReleased(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetDataReleased(self)

    def GetPipelineMTime(self):
        r"""GetPipelineMTime(self) -> unsigned long const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetPipelineMTime(self)

    def GetUpdateMTime(self):
        r"""GetUpdateMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetUpdateMTime(self)

    def GetRealTimeStamp(self):
        r"""GetRealTimeStamp(self) -> itkRealTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetRealTimeStamp(self)

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_Modified(self)

    def AddObserver(self, *args):
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_AddObserver(self, *args)


    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_InvokeEvent(self, *args)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetMetaDataDictionary(self, *args)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetObjectName(self)

    def CreateAnother(self):
        r"""CreateAnother(self) -> itkLightObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_CreateAnother(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetNameOfClass(self)

    def GetReferenceCount(self):
        r"""GetReferenceCount(self) -> int"""
        return _itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_GetReferenceCount(self)

# Register itkCudaImageVF53_ConstPointer in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageVF53_ConstPointer_swigregister(itkCudaImageVF53_ConstPointer)

def itkCudaImageVF54_New():
    return itkCudaImageVF54.New()

class itkCudaImageVF54(itk.itkImageRTKPython.itkImageVF54):
    r"""Proxy of C++ itkCudaImageVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageVF54_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF54___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageVF54_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex4 const &
        value: itkVectorF5 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkVectorF5

        Parameters
        ----------
        index: itkIndex4 const &

        GetPixel(self, index) -> itkVectorF5

        Parameters
        ----------
        index: itkIndex4 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_GetPixel(self, *args)

    def UpdateBuffers(self):
        r"""UpdateBuffers(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_UpdateBuffers(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkVectorF5
        GetBufferPointer(self) -> itkVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 >,4 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 >,4 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_GetNeighborhoodAccessor(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > > *

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_SetPixelContainer(self, container)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_GetPixelContainer(self, *args)

    def GetModifiableDataManager(self):
        r"""GetModifiableDataManager(self) -> itkCudaImageDataManagerCIVF54"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_GetModifiableDataManager(self)

    def GetDataManager(self, *args):
        r"""
        GetDataManager(self) -> itkCudaImageDataManagerCIVF54
        GetDataManager(self) -> itkCudaImageDataManagerCIVF54
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_GetDataManager(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_GetCudaDataManager(self)

    def Graft(self, data):
        r"""
        Graft(self, data)

        Parameters
        ----------
        data: itkCudaImageVF54 const *

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_Graft(self, data)
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageVF54

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageVF54

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageVF54

        Create a new object of the class itkCudaImageVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageVF54 in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageVF54_swigregister(itkCudaImageVF54)
class itkCudaImageVF54_ConstPointer(object):
    r"""Proxy of C++ itkCudaImageVF54_ConstPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCudaImageVF54_ConstPointer
        __init__(self, p) -> itkCudaImageVF54_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF54_ConstPointer const &

        __init__(self, p) -> itkCudaImageVF54_ConstPointer

        Parameters
        ----------
        p: itkCudaImageVF54 const *

        """
        _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_swiginit(self, _itkCudaImageRTKPython.new_itkCudaImageVF54_ConstPointer(*args))
    __swig_destroy__ = _itkCudaImageRTKPython.delete_itkCudaImageVF54_ConstPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCudaImageVF54"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer___deref__(self)

    def __ref__(self):
        r"""__ref__(self) -> itkCudaImageVF54"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer___ref__(self)

    def IsNotNull(self):
        r"""IsNotNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_IsNotNull(self)

    def IsNull(self):
        r"""IsNull(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_IsNull(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCudaImageVF54"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetPointer(self)

    def get(self):
        r"""get(self) -> itkCudaImageVF54"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_get(self)

    def Print(self, os):
        r"""
        Print(self, os) -> itkCudaImageVF54

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_Print(self, os)

    def Swap(self, other):
        r"""
        Swap(self, other)

        Parameters
        ----------
        other: itkCudaImageVF54_ConstPointer &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_Swap(self, other)

    def Clone(self):
        r"""Clone(self) -> itkCudaImageVF54_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_Clone(self)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkVectorF5
        GetBufferPointer(self) -> itkVectorF5
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetBufferPointer(self, *args)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::Vector< float,5 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 >,4 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::CudaImage< itk::Vector< float,5 >,4 > > const
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetNeighborhoodAccessor(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::Vector< float,5 > > const *
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetPixelContainer(self, *args)

    def GetCudaDataManager(self):
        r"""GetCudaDataManager(self) -> itkCudaDataManager_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetCudaDataManager(self)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD44"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetDirection(self)

    def GetInverseDirection(self):
        r"""GetInverseDirection(self) -> itkMatrixD44"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetInverseDirection(self)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD4"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetSpacing(self)

    def GetOrigin(self):
        r"""GetOrigin(self) -> itkPointD4"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetOrigin(self)

    def __GetLargestPossibleRegion_orig__(self):
        r"""__GetLargestPossibleRegion_orig__(self) -> itkImageRegion4"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer___GetLargestPossibleRegion_orig__(self)

    def __GetBufferedRegion_orig__(self):
        r"""__GetBufferedRegion_orig__(self) -> itkImageRegion4"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer___GetBufferedRegion_orig__(self)

    def __GetRequestedRegion_orig__(self):
        r"""__GetRequestedRegion_orig__(self) -> itkImageRegion4"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer___GetRequestedRegion_orig__(self)

    def GetOffsetTable(self):
        r"""GetOffsetTable(self) -> long const *"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetOffsetTable(self)

    def ComputeOffset(self, ind):
        r"""
        ComputeOffset(self, ind) -> long

        Parameters
        ----------
        ind: itkIndex4 const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_ComputeOffset(self, ind)

    def ComputeIndex(self, offset):
        r"""
        ComputeIndex(self, offset) -> itkIndex4

        Parameters
        ----------
        offset: long

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_ComputeIndex(self, offset)

    def IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance):
        r"""
        IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase4 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_IsCongruentImageGeometry(self, otherImage, coordinateTolerance, directionTolerance)

    def IsSameImageGeometryAs(self, *args):
        r"""
        IsSameImageGeometryAs(self, otherImage, coordinateTolerance=itk::DefaultImageCoordinateTolerance, directionTolerance=itk::DefaultImageDirectionTolerance) -> bool

        Parameters
        ----------
        otherImage: itkImageBase4 const *
        coordinateTolerance: double
        directionTolerance: double

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_IsSameImageGeometryAs(self, *args)

    def GetNumberOfComponentsPerPixel(self):
        r"""GetNumberOfComponentsPerPixel(self) -> unsigned int"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetNumberOfComponentsPerPixel(self)

    def GetSource(self):
        r"""GetSource(self) -> itkProcessObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetSource(self)

    def GetSourceOutputName(self):
        r"""GetSourceOutputName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetSourceOutputName(self)

    def GetSourceOutputIndex(self):
        r"""GetSourceOutputIndex(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetSourceOutputIndex(self)

    def UpdateSource(self):
        r"""UpdateSource(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_UpdateSource(self)

    def GetReleaseDataFlag(self):
        r"""GetReleaseDataFlag(self) -> bool const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetReleaseDataFlag(self)

    def ShouldIReleaseData(self):
        r"""ShouldIReleaseData(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_ShouldIReleaseData(self)

    def GetDataReleased(self):
        r"""GetDataReleased(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetDataReleased(self)

    def GetPipelineMTime(self):
        r"""GetPipelineMTime(self) -> unsigned long const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetPipelineMTime(self)

    def GetUpdateMTime(self):
        r"""GetUpdateMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetUpdateMTime(self)

    def GetRealTimeStamp(self):
        r"""GetRealTimeStamp(self) -> itkRealTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetRealTimeStamp(self)

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_Modified(self)

    def AddObserver(self, *args):
        r"""
        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        AddObserver(self, event, arg1) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        arg1: itkCommand *

        """

        import itk
        if len(args) == 3 and not issubclass(args[2].__class__, itk.Command) and callable(args[2]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[2] )
            args[2] = pycommand
            args = tuple(args)
        elif len(args) == 2 and not issubclass(args[1].__class__, itk.Command) and callable(args[1]):
            args = list(args)
            pycommand = itk.PyCommand.New()
            pycommand.SetCommandCallable( args[1] )
            args[1] = pycommand
            args = tuple(args)


        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_AddObserver(self, *args)


    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_InvokeEvent(self, *args)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetMetaDataDictionary(self, *args)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetObjectName(self)

    def CreateAnother(self):
        r"""CreateAnother(self) -> itkLightObject_Pointer"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_CreateAnother(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetNameOfClass(self)

    def GetReferenceCount(self):
        r"""GetReferenceCount(self) -> int"""
        return _itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_GetReferenceCount(self)

# Register itkCudaImageVF54_ConstPointer in _itkCudaImageRTKPython:
_itkCudaImageRTKPython.itkCudaImageVF54_ConstPointer_swigregister(itkCudaImageVF54_ConstPointer)

