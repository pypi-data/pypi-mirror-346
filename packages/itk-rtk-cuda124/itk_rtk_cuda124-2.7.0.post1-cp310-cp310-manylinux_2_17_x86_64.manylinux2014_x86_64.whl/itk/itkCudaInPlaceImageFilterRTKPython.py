# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _RTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCudaInPlaceImageFilterRTKPython
else:
    import _itkCudaInPlaceImageFilterRTKPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkCudaImagePython
import itk.itkImagePython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkCudaDataManagerPython
import itk.itkCudaImageDataManagerPython
import itk.rtkParkerShortScanImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterAPython
import itk.rtkThreeDCircularProjectionGeometryPython
import itk.rtkProjectionGeometryPython
import itk.itkInPlaceImageFilterRTKPython
import itk.itkImageToImageFilterRTKPython
import itk.itkImageSourceRTKPython
import itk.itkImageRTKPython
import itk.itkImageBaseRTKPython
import itk.itkPointRTKPython
import itk.itkImageRegionRTKPython
import itk.itkMatrixRTKPython
import itk.itkCovariantVectorRTKPython
import itk.itkCudaImageRTKPython
import itk.itkCudaImageDataManagerRTKPython
import itk.itkImageToImageFilterCudaCommonPython
import itk.itkImageSourceCudaCommonPython

def itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_New():
    return itkCudaImageToImageFilterCIF2CIF2IPIFCIF2.New()

class itkCudaImageToImageFilterCIF2CIF2IPIFCIF2(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIF2):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF2CIF2IPIFCIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageF2 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageF2 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIF2CIF2IPIFCIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIF2CIF2IPIFCIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF2CIF2IPIFCIF2

        Create a new object of the class itkCudaImageToImageFilterCIF2CIF2IPIFCIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF2CIF2IPIFCIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF2CIF2IPIFCIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF2CIF2IPIFCIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF2CIF2IPIFCIF2 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF2CIF2IPIFCIF2_swigregister(itkCudaImageToImageFilterCIF2CIF2IPIFCIF2)

def itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_New():
    return itkCudaImageToImageFilterCIF3CIF3IPIFCIF3.New()

class itkCudaImageToImageFilterCIF3CIF3IPIFCIF3(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIF3):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF3CIF3IPIFCIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageF3 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageF3 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIF3CIF3IPIFCIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIF3CIF3IPIFCIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF3CIF3IPIFCIF3

        Create a new object of the class itkCudaImageToImageFilterCIF3CIF3IPIFCIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF3CIF3IPIFCIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF3CIF3IPIFCIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF3CIF3IPIFCIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF3CIF3IPIFCIF3 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3IPIFCIF3_swigregister(itkCudaImageToImageFilterCIF3CIF3IPIFCIF3)

def itkCudaImageToImageFilterCIF3CIF3PSCIF3_New():
    return itkCudaImageToImageFilterCIF3CIF3PSCIF3.New()

class itkCudaImageToImageFilterCIF3CIF3PSCIF3(itk.rtkParkerShortScanImageFilterPython.rtkParkerShortScanImageFilterCIF3):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF3CIF3PSCIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIF3CIF3PSCIF3_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIF3CIF3PSCIF3_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageF3 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageF3 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIF3CIF3PSCIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIF3CIF3PSCIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF3CIF3PSCIF3

        Create a new object of the class itkCudaImageToImageFilterCIF3CIF3PSCIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF3CIF3PSCIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF3CIF3PSCIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF3CIF3PSCIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF3CIF3PSCIF3 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF3CIF3PSCIF3_swigregister(itkCudaImageToImageFilterCIF3CIF3PSCIF3)

def itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_New():
    return itkCudaImageToImageFilterCIF4CIF4IPIFCIF4.New()

class itkCudaImageToImageFilterCIF4CIF4IPIFCIF4(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIF4):
    r"""Proxy of C++ itkCudaImageToImageFilterCIF4CIF4IPIFCIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageF4 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageF4 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIF4CIF4IPIFCIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIF4CIF4IPIFCIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIF4CIF4IPIFCIF4

        Create a new object of the class itkCudaImageToImageFilterCIF4CIF4IPIFCIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIF4CIF4IPIFCIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIF4CIF4IPIFCIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIF4CIF4IPIFCIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIF4CIF4IPIFCIF4 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIF4CIF4IPIFCIF4_swigregister(itkCudaImageToImageFilterCIF4CIF4IPIFCIF4)

def itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_New():
    return itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22.New()

class itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF22):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF22 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF22 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22

        Create a new object of the class itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22_swigregister(itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22)

def itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_New():
    return itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23.New()

class itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF23):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF23 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF23 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23

        Create a new object of the class itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23_swigregister(itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23)

def itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_New():
    return itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24.New()

class itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF24):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF24 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF24 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24

        Create a new object of the class itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24_swigregister(itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24)

def itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_New():
    return itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32.New()

class itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF32):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF32 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF32 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32

        Create a new object of the class itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32_swigregister(itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32)

def itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_New():
    return itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33.New()

class itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF33):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF33 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF33 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33

        Create a new object of the class itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33_swigregister(itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33)

def itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_New():
    return itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34.New()

class itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF34):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF34 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF34 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34

        Create a new object of the class itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34_swigregister(itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34)

def itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_New():
    return itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42.New()

class itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF42):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF42 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF42 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42

        Create a new object of the class itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42_swigregister(itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42)

def itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_New():
    return itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43.New()

class itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF43):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF43 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF43 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43

        Create a new object of the class itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43_swigregister(itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43)

def itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_New():
    return itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44.New()

class itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF44):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF44 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF44 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44

        Create a new object of the class itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44_swigregister(itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44)

def itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_New():
    return itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52.New()

class itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF52):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF52 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF52 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52

        Create a new object of the class itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52_swigregister(itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52)

def itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_New():
    return itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53.New()

class itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF53):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF53 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF53 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53

        Create a new object of the class itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53_swigregister(itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53)

def itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_New():
    return itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54.New()

class itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54(itk.itkInPlaceImageFilterRTKPython.itkInPlaceImageFilterCIVF54):
    r"""Proxy of C++ itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_Pointer"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_Clone(self)

    def SetGPUEnabled(self, _arg):
        r"""
        SetGPUEnabled(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_SetGPUEnabled(self, _arg)

    def GetGPUEnabled(self):
        r"""GetGPUEnabled(self) -> bool"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_GetGPUEnabled(self)

    def GPUEnabledOn(self):
        r"""GPUEnabledOn(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_GPUEnabledOn(self)

    def GPUEnabledOff(self):
        r"""GPUEnabledOff(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_GPUEnabledOff(self)

    def GenerateData(self):
        r"""GenerateData(self)"""
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_GenerateData(self)

    def GraftOutput(self, *args):
        r"""
        GraftOutput(self, output)

        Parameters
        ----------
        output: itkCudaImageVF54 *

        GraftOutput(self, key, output)

        Parameters
        ----------
        key: std::string const &
        output: itkCudaImageVF54 *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_GraftOutput(self, *args)
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54

        Create a new object of the class itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54_swigregister(itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54)
class itkCudaInPlaceImageFilterCIF2CIF2(itkCudaImageToImageFilterCIF2CIF2IPIFCIF2):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIF2CIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIF2CIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIF2CIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIF2CIF2_cast(obj)

# Register itkCudaInPlaceImageFilterCIF2CIF2 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIF2CIF2_swigregister(itkCudaInPlaceImageFilterCIF2CIF2)
class itkCudaInPlaceImageFilterCIF3CIF3(itkCudaImageToImageFilterCIF3CIF3IPIFCIF3):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIF3CIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIF3CIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIF3CIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIF3CIF3_cast(obj)

# Register itkCudaInPlaceImageFilterCIF3CIF3 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIF3CIF3_swigregister(itkCudaInPlaceImageFilterCIF3CIF3)
class itkCudaInPlaceImageFilterCIF3CIF3PSCIF3(itkCudaImageToImageFilterCIF3CIF3PSCIF3):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIF3CIF3PSCIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIF3CIF3PSCIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIF3CIF3PSCIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIF3CIF3PSCIF3_cast(obj)

# Register itkCudaInPlaceImageFilterCIF3CIF3PSCIF3 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIF3CIF3PSCIF3_swigregister(itkCudaInPlaceImageFilterCIF3CIF3PSCIF3)
class itkCudaInPlaceImageFilterCIF4CIF4(itkCudaImageToImageFilterCIF4CIF4IPIFCIF4):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIF4CIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIF4CIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIF4CIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIF4CIF4_cast(obj)

# Register itkCudaInPlaceImageFilterCIF4CIF4 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIF4CIF4_swigregister(itkCudaInPlaceImageFilterCIF4CIF4)
class itkCudaInPlaceImageFilterCIVF22CIVF22(itkCudaImageToImageFilterCIVF22CIVF22IPIFCIVF22):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF22CIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF22CIVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF22CIVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF22CIVF22_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF22CIVF22 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF22CIVF22_swigregister(itkCudaInPlaceImageFilterCIVF22CIVF22)
class itkCudaInPlaceImageFilterCIVF23CIVF23(itkCudaImageToImageFilterCIVF23CIVF23IPIFCIVF23):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF23CIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF23CIVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF23CIVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF23CIVF23_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF23CIVF23 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF23CIVF23_swigregister(itkCudaInPlaceImageFilterCIVF23CIVF23)
class itkCudaInPlaceImageFilterCIVF24CIVF24(itkCudaImageToImageFilterCIVF24CIVF24IPIFCIVF24):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF24CIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF24CIVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF24CIVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF24CIVF24_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF24CIVF24 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF24CIVF24_swigregister(itkCudaInPlaceImageFilterCIVF24CIVF24)
class itkCudaInPlaceImageFilterCIVF32CIVF32(itkCudaImageToImageFilterCIVF32CIVF32IPIFCIVF32):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF32CIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF32CIVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF32CIVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF32CIVF32_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF32CIVF32 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF32CIVF32_swigregister(itkCudaInPlaceImageFilterCIVF32CIVF32)
class itkCudaInPlaceImageFilterCIVF33CIVF33(itkCudaImageToImageFilterCIVF33CIVF33IPIFCIVF33):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF33CIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF33CIVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF33CIVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF33CIVF33_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF33CIVF33 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF33CIVF33_swigregister(itkCudaInPlaceImageFilterCIVF33CIVF33)
class itkCudaInPlaceImageFilterCIVF34CIVF34(itkCudaImageToImageFilterCIVF34CIVF34IPIFCIVF34):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF34CIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF34CIVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF34CIVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF34CIVF34_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF34CIVF34 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF34CIVF34_swigregister(itkCudaInPlaceImageFilterCIVF34CIVF34)
class itkCudaInPlaceImageFilterCIVF42CIVF42(itkCudaImageToImageFilterCIVF42CIVF42IPIFCIVF42):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF42CIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF42CIVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF42CIVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF42CIVF42_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF42CIVF42 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF42CIVF42_swigregister(itkCudaInPlaceImageFilterCIVF42CIVF42)
class itkCudaInPlaceImageFilterCIVF43CIVF43(itkCudaImageToImageFilterCIVF43CIVF43IPIFCIVF43):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF43CIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF43CIVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF43CIVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF43CIVF43_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF43CIVF43 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF43CIVF43_swigregister(itkCudaInPlaceImageFilterCIVF43CIVF43)
class itkCudaInPlaceImageFilterCIVF44CIVF44(itkCudaImageToImageFilterCIVF44CIVF44IPIFCIVF44):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF44CIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF44CIVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF44CIVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF44CIVF44_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF44CIVF44 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF44CIVF44_swigregister(itkCudaInPlaceImageFilterCIVF44CIVF44)
class itkCudaInPlaceImageFilterCIVF52CIVF52(itkCudaImageToImageFilterCIVF52CIVF52IPIFCIVF52):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF52CIVF52 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF52CIVF52

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF52CIVF52

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF52CIVF52_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF52CIVF52 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF52CIVF52_swigregister(itkCudaInPlaceImageFilterCIVF52CIVF52)
class itkCudaInPlaceImageFilterCIVF53CIVF53(itkCudaImageToImageFilterCIVF53CIVF53IPIFCIVF53):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF53CIVF53 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF53CIVF53

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF53CIVF53

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF53CIVF53_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF53CIVF53 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF53CIVF53_swigregister(itkCudaInPlaceImageFilterCIVF53CIVF53)
class itkCudaInPlaceImageFilterCIVF54CIVF54(itkCudaImageToImageFilterCIVF54CIVF54IPIFCIVF54):
    r"""Proxy of C++ itkCudaInPlaceImageFilterCIVF54CIVF54 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkCudaInPlaceImageFilterRTKPython.delete_itkCudaInPlaceImageFilterCIVF54CIVF54

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCudaInPlaceImageFilterCIVF54CIVF54

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF54CIVF54_cast(obj)

# Register itkCudaInPlaceImageFilterCIVF54CIVF54 in _itkCudaInPlaceImageFilterRTKPython:
_itkCudaInPlaceImageFilterRTKPython.itkCudaInPlaceImageFilterCIVF54CIVF54_swigregister(itkCudaInPlaceImageFilterCIVF54CIVF54)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def cuda_in_place_image_filter(*args: itkt.ImageLike,  gpu_enabled: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for CudaInPlaceImageFilter"""
    import itk

    kwarg_typehints = { 'gpu_enabled':gpu_enabled }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.CudaInPlaceImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def cuda_in_place_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.CudaInPlaceImageFilter
    cuda_in_place_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    cuda_in_place_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def cuda_image_to_image_filter(*args: itkt.ImageLike,  gpu_enabled: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for CudaImageToImageFilter"""
    import itk

    kwarg_typehints = { 'gpu_enabled':gpu_enabled }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.CudaImageToImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def cuda_image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.RTK.CudaImageToImageFilter
    cuda_image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    cuda_image_to_image_filter.__doc__ = filter_object.__doc__



