# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
from ...types.extraction_field import ExtractionField
import typing_extensions
from ...types.workflow_run import WorkflowRun
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic
from ...core.pydantic_utilities import update_forward_refs


class WorkflowRunGetResponse(UniversalBaseModel):
    success: bool
    workflow_run: typing_extensions.Annotated[WorkflowRun, FieldMetadata(alias="workflowRun")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(ExtractionField, WorkflowRunGetResponse=WorkflowRunGetResponse)
