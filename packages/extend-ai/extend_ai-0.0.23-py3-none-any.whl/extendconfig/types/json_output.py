# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .json_object import JsonObject
import pydantic
import typing
from .json_output_metadata_value import JsonOutputMetadataValue
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class JsonOutput(UniversalBaseModel):
    value: JsonObject = pydantic.Field()
    """
    The extracted values conforming to the schema defined in the processor config
    """

    metadata: typing.Dict[str, JsonOutputMetadataValue] = pydantic.Field()
    """
    Metadata about the extracted fields
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
