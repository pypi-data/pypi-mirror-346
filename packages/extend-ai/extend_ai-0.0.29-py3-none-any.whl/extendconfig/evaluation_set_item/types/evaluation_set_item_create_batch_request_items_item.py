# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...core.serialization import FieldMetadata
import pydantic
from ...types.provided_processor_output import ProvidedProcessorOutput
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class EvaluationSetItemCreateBatchRequestItemsItem(UniversalBaseModel):
    file_id: typing_extensions.Annotated[str, FieldMetadata(alias="fileId")] = pydantic.Field()
    """
    Extend's internal ID for the file. It will always start with "file_".
    
    Example: `"file_xK9mLPqRtN3vS8wF5hB2cQ"`
    """

    expected_output: typing_extensions.Annotated[ProvidedProcessorOutput, FieldMetadata(alias="expectedOutput")] = (
        pydantic.Field()
    )
    """
    The expected output of the processor when run against the file
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
