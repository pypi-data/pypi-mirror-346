# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
from .extraction_field import ExtractionField
import typing_extensions
import typing
from .workflow_run import WorkflowRun
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.pydantic_utilities import update_forward_refs


class RunWorkflowResponse(UniversalBaseModel):
    success: bool
    workflow_runs: typing_extensions.Annotated[typing.List[WorkflowRun], FieldMetadata(alias="workflowRuns")] = (
        pydantic.Field()
    )
    """
    An array of WorkflowRun objects, with each WorkflowRun corresponding to a single File that was passed in.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(ExtractionField, RunWorkflowResponse=RunWorkflowResponse)
