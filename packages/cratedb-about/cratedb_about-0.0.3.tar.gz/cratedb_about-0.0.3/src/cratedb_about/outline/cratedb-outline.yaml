# CrateDB documentation and knowledge outline
#
# Source: https://github.com/crate/about
# Target: https://cdn.crate.io/about/v1/
#
# Bundles CrateDB documentation resources into sets of named sections.
# The standard section names are: Docs, API, Examples, Optional.
#
# The data layout adheres to the conventions of "llms.txt" [1].
# The attribute naming follows conventions from the RSS specification [2].
#
# [1] https://llmstxt.org/
# [2] https://www.rssboard.org/rss-specification
#
---

meta:
  version: 0.1
  type: outline

data:

  header:
    title: CrateDB
    link: https://cratedb.com/
    description: |
      > CrateDB is a distributed and scalable SQL database for storing and analyzing massive amounts of data in near real-time, even with complex queries. It is based on Lucene, inherits technologies from Elasticsearch, and is compatible with PostgreSQL.

      Things to remember when working with CrateDB are:

      - CrateDB is a distributed database written in Java, where individual nodes form a database cluster, using a shared-nothing architecture.
      - CrateDB brings together fundamental components to manage big data after the Hadoop and Spark batch-processing era, more like Teradata, BigQuery and Snowflake are doing it.
      - Clients can connect to CrateDB using HTTP or the PostgreSQL wire protocol.
      - The default TCP ports of CrateDB are 4200 for the HTTP interface and 5432 for the PostgreSQL interface.
      - The language of choice after connecting to CrateDB is to use SQL, mostly compatible with PostgreSQL's SQL dialect.
      - The data storage layer is based on Lucene, the data distribution layer was inspired by Elasticsearch.
      - Storage concepts of CrateDB include partitioning and sharding to manage data larger than fitting on a single machine.
      - CrateDB Cloud offers a managed option for running CrateDB and provides additional features like automated backups, data ingest / ETL utilities, or scheduling recurrent jobs.
      - Get started with CrateDB Cloud at `https://console.cratedb.cloud`.
      - CrateDB also provides an option to run it on your premises, optimally by using its Docker/OCI image `docker.io/crate`. Nightly images are available per `docker.io/crate/crate:nightly`.

  sections:

  - name: Docs
    items:

    - title: "CrateDB README"
      link: https://raw.githubusercontent.com/crate/crate/refs/heads/master/README.rst
      description: README about CrateDB.

    - title: "CrateDB database"
      link: https://cratedb.com/docs/guide/_sources/home/index.md.txt
      description: Benefits of CrateDB at a glance.

    - title: "CrateDB features"
      link: https://cratedb.com/docs/guide/_sources/feature/index.md.txt
      description: All features of CrateDB at a glance.

    - title: "CrateDB reference documentation"
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/index.rst.txt
      description: The reference documentation of CrateDB.
      notes: This just includes the index, but no content yet. Expand!

    - title: "CrateDB Cloud"
      link: https://cratedb.com/docs/cloud/en/latest/_sources/index.md.txt
      description: The full documentation for CrateDB Cloud.
      notes: This also just includes the index, but no content yet. Expand!

    - title: "Guide: CrateDB sharding"
      link: https://cratedb.com/docs/guide/_sources/performance/sharding.rst.txt
      description: A best practice guide about sharding with CrateDB.

    - title: "Guide: CrateDB query optimization"
      link: https://cratedb.com/docs/guide/_sources/performance/optimization.rst.txt
      description: Essential principles for optimizing queries in CrateDB while avoiding the most common pitfalls.

    - title: "Guide: Design for scale"
      link: https://cratedb.com/docs/guide/_sources/performance/scaling.rst.txt
      description: Critical design considerations to successfully scale CrateDB in large production environments to ensure performance and reliability as workloads grow.

    - title: "Data modeling: Sequences"
      link: https://cratedb.com/docs/guide/_sources/performance/inserts/sequences.rst.txt
      description: About autogenerated sequences and PRIMARY KEY values in CrateDB.

  - name: API
    items:

    - title: "CrateDB SQL syntax"
      description: You can use Structured Query Language (SQL) to query your data.
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/sql/index.rst.txt

    - title: "CrateDB SQL functions"
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/general/builtins/scalar-functions.rst.txt
      description: The reference documentation about all SQL functions CrateDB provides.
      notes: Possibly use `ctk docs functions` subsystem.

    - title: "CrateDB drivers"
      link: https://cratedb.com/docs/crate/clients-tools/en/latest/_sources/connect/index.md.txt
      description: How to connect to a CrateDB cluster using traditional database drivers.
      notes: This just refers to the index page, and does not include details about how to connect with individual drivers.

    - title: "CrateDB cluster-wide settings"
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/config/cluster.rst.txt
      description: Cluster-wide settings can be read by querying the `sys.cluster.settings` column. Most cluster settings can be changed at runtime.
      notes: Possibly use `ctk docs settings` subsystem.

    - title: "CrateDB node-specific settings"
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/config/node.rst.txt
      description: Node-specific settings of CrateDB.
      notes: Possibly use `ctk docs settings` subsystem.

  - name: Examples
    items:

    - title: "CrateDB SQL gallery"
      link: https://github.com/crate/cratedb-toolkit/raw/refs/tags/v0.0.31/cratedb_toolkit/info/library.py
      description: A collection of SQL queries and utilities suitable for diagnostics on CrateDB.

    - title: "CrateDB GTFS / GTFS-RT Transit Data Demo"
      link: https://github.com/crate/devrel-gtfs-transit/raw/refs/heads/main/README.md
      description: Capture GTFS and GTFS-RT data for storage and analysis with CrateDB.

    - title: "CrateDB Offshore Wind Farms Demo Application"
      link: https://github.com/crate/devrel-offshore-wind-farms-demo/raw/refs/heads/main/README.md
      description: A CrateDB demo application using data from the UK's offshore wind farms.

    - title: "CrateDB RAG / Hybrid Search PDF Chatbot"
      link: https://github.com/crate/devrel-pdf-rag-chatbot/raw/refs/heads/main/README.md
      description: A chatbot powered by CrateDB using RAG techniques and data from PDF files.

    - title: "CrateDB Geospatial Data Demo"
      link: https://github.com/crate/devrel-shipping-forecast-geo-demo/raw/refs/heads/main/README.md
      description: Spatial data demo application using CrateDB and the Express framework.

    - title: "Plane Spotting with Software Defined Radio, CrateDB and Node.js"
      link: https://github.com/crate/devrel-plane-spotting-with-cratedb/raw/refs/heads/main/README.md
      description: Code for the Plane Spotting with Software Defined Radio, CrateDB and Node.js talk.

  - name: Optional
    items:

    - title: "Concept: Clustering"
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/concepts/clustering.rst.txt
      description: How the distributed SQL database CrateDB uses a shared nothing architecture to form high-availability, resilient database clusters with minimal effort of configuration.
      source: docs

    - title: "Concept: Distributed joins"
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/concepts/joins.rst.txt
      description: Make joins work on large volumes of data, stored distributed.
      source: docs

    - title: "Concept: Storage and consistency"
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/concepts/storage-consistency.rst.txt
      description: How CrateDB stores and distributes state across the cluster and what consistency and durability guarantees are provided.
      source: docs

    - title: "Concept: Resiliency"
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/concepts/resiliency.rst.txt
      description: How CrateDB copes with network-, disk-, or machine-failures.
      source: docs

    - title: "CrateDB Cloud: Services"
      link: https://cratedb.com/docs/cloud/en/latest/_sources/reference/services.md.txt
      description: Services specifications and variants of CrateDB Cloud.
      source: docs

    - title: "CrateDB Cloud: Billing"
      link: https://cratedb.com/docs/cloud/en/latest/_sources/organization/billing.md.txt
      description: How billing works in CrateDB Cloud.
      source: docs

    - title: "CrateDB Cloud: API"
      link: https://cratedb.com/docs/cloud/en/latest/_sources/organization/api.md.txt
      description: CrateDB Cloud provides an HTTP API for programmatic cluster and resource management.
      source: docs

    - title: "CrateDB Cloud: Import data"
      link: https://cratedb.com/docs/cloud/en/latest/_sources/cluster/import.md.txt
      description: How to conveniently import data into CrateDB Cloud.
      source: docs

    - title: "CrateDB Cloud: Export data"
      link: https://cratedb.com/docs/cloud/en/latest/_sources/cluster/export.md.txt
      description: How to conveniently export data from CrateDB Cloud.
      source: docs

    - title: "CrateDB Cloud: Automatic backups"
      link: https://cratedb.com/docs/cloud/en/latest/_sources/cluster/backups.md.txt
      description: How automatic backups work in CrateDB Cloud.
      source: docs

    - title: "CrateDB Cloud: MongoDB CDC integration"
      link: https://cratedb.com/docs/cloud/en/latest/_sources/cluster/integrations/mongo-cdc.md.txt
      description: CrateDB Cloud enables continuous data ingestion from MongoDB using Change Data Capture (CDC), providing seamless, real-time synchronization of your data.
      source: docs

    - title: "Feature: User-defined functions"
      link: https://cratedb.com/docs/crate/reference/en/latest/_sources/general/user-defined-functions.rst.txt
      description: CrateDB supports user-defined functions.
      source: docs

    - title: "Integration Tutorials I"
      link: https://cratedb.com/docs/guide/_sources/integrate/index.md.txt
      description: Integrating 3rd party software with CrateDB.
      source: tutorials

    - title: "Integration Tutorials II"
      link: https://community.cratedb.com/raw/1015/1
      description: Overview of CrateDB integration tutorials.
      source: tutorials

    - title: "Time Series with CrateDB"
      link: https://github.com/crate/cratedb-examples/raw/refs/heads/main/topic/timeseries/README.md
      description: Examples, tutorials and runnable code on how to use CrateDB for time-series use cases. Exploratory data analysis, time-series decomposition, anomaly detection, forecasting.
      notes: That's just the index again, and doesn't include any ingredients.
      source: examples

    - title: "Timeseries QA Assistant with CrateDB, LLMs, and Machine Manuals"
      link: https://github.com/crate/cratedb-examples/raw/refs/heads/main/topic/chatbot/table-augmented-generation/README.md
      description: A full interactive pipeline for simulating telemetry data from industrial motors, storing that data in CrateDB, and enabling natural-language querying powered by OpenAI — including RAG-style guidance from machine manuals.
      source: examples

    - title: "LangChain and CrateDB"
      link: https://github.com/crate/cratedb-examples/raw/refs/heads/main/topic/machine-learning/llm-langchain/README.md
      description: Get started with LangChain and CrateDB.
      source: examples

    - title: "Use case: Best database for big data analytics"
      link: https://github.com/crate/about/raw/refs/heads/main/src/content/blog/shared-nothing-architecture-multi-model-databases-scalable-real-time-analytics.md
      description: Leveraging Shared Nothing Architecture and Multi-Model Databases for Scalable Real-Time Analytics on Large Data.
      source: blog

    - title: "Use case: Digital Twins"
      link: https://github.com/crate/about/raw/refs/heads/main/src/content/blog/digital-twins.md
      description: Digital twins are virtual representations of physical objects, processes, or systems in the digital realm. The abundance of data to be processed in digital twin setups is no problem for CrateDB.
      source: blog
