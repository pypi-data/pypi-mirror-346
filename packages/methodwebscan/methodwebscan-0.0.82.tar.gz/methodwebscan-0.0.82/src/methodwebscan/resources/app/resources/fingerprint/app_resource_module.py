# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
from ....common.resources.requests.http_method import HttpMethod
import typing
from ....common.resources.requests.request_params import RequestParams
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class AppResourceModule(UniversalBaseModel):
    name: str
    method: HttpMethod
    paths: typing.List[str]
    request_params: typing.Optional[RequestParams] = pydantic.Field(alias="RequestParams", default=None)
    header_indicators: typing.Optional[typing.Dict[str, typing.Optional[typing.List[str]]]] = pydantic.Field(
        alias="HeaderIndicators", default=None
    )
    body_indicators: typing.Optional[typing.List[str]] = pydantic.Field(alias="BodyIndicators", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
