# This file was auto-generated by Fern from our API Definition.

from .....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2


class HttpHeaders(UniversalBaseModel):
    location: typing.Optional[str] = None
    server: typing.Optional[str] = None
    x_powered_by: typing.Optional[str] = pydantic.Field(alias="xPoweredBy", default=None)
    x_frame_options: typing.Optional[str] = pydantic.Field(alias="xFrameOptions", default=None)
    x_cluster_name: typing.Optional[str] = pydantic.Field(alias="xClusterName", default=None)
    cross_origin_resource_policy: typing.Optional[str] = pydantic.Field(alias="crossOriginResourcePolicy", default=None)
    access_control_allow_origin: typing.Optional[str] = pydantic.Field(alias="accessControlAllowOrigin", default=None)
    x_asp_net_version: typing.Optional[str] = pydantic.Field(alias="xAspNetVersion", default=None)
    allowed_http_methods: typing.Optional[str] = pydantic.Field(alias="allowedHttpMethods", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
