[project]
name = "gemlib"
version = "0.13.1"
description = "GEMlib scientific compute library for epidemic modelling"
authors = [
    { name = "Chris Jewell", email = "c.jewell@lancaster.ac.uk>"},
    { name = "Alison Hale", email = "haleac@lancaster.ac.uk>"},
]
maintainers = [
    { name = "Jessica Bridgen", email = "j.bridgen@lancaster.ac.uk"},
    { name = "Alin Morariu", email = "a.morariu@lancaster.ac.uk"}
]
readme = "README.md"
requires-python = ">=3.10.0, <3.13.0"
license = "MIT License"
keywords = ["epidemic", "Bayesian", "inference", "infectious disease model", "probabilistic programming"]
dynamic = ["classifiers"]
dependencies = [
    "scipy >=1.14.0,<1.15.0",
    "tensorflow >=2.16.0",
    "tensorflow-probability >=0.24.*",
    "tf-keras >=2.16.0",
    "tqdm (>=4.67.1,<5.0.0)"
]

[project.optional-dependencies]
gpu = [ "tensorflow [and-cuda] >=2.16.0" ]

[project.urls]
homepage = "https://gem-epidemics.gitlab.io/gemlib"
documentation = "https://gem-epidemics.gitlab.io/gemlib"
repository = "https://gitlab.com/gem-epidemics/gemlib"

[tool.poetry]
requires-poetry = ">=2.0"
classifiers = [
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Mathematics"
]

[tool.poetry.group.dev.dependencies]
jupyterlab = "^3.0.9"
matplotlib = "^3.3.4"
jedi = "^0.18.0"
pre-commit = "^3.6.2"
seaborn = "^0.13.2"
ruff = "^0.9.3"
mypy = "^1.15.0"
types-requests = "^2.32.0.20250328"
types-protobuf = "^5.29.1.20250403"
types-tqdm = "^4.67.0.20250401"
types-tensorflow = "^2.18.0.20250319"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.1"
pytest-cov = "^5.0.0"

[tool.poetry.group.doc.dependencies]
sphinx = "^8.0.2"
myst-parser = "^4.0.0"
nbsphinx = "^0.9.5"
sphinx-book-theme = "^1.1.3"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 80

[tool.ruff.lint]
select = [
    "ARG",  # flake8-unused-arguments
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "PL",  # pylint
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "W",   # pycodestyle
]
ignore = [
    "N806",     # variable name should be lowercase
    "PLR0913",  # Too many arguments in function definition
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 70


