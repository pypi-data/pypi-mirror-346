# Project metadata (see https://packaging.python.org/en/latest/guides/writing-pyproject-toml/)
[project]
name = "operetta-compose"
version = "0.2.12"
description = "Fractal tasks for the Opera/Operetta microscope and drug response profiling"
readme = "README.md"
license = { text = "BSD-3-Clause" }
authors = [
    { name = "Fabio Steffen", email = "fabio.steffen@uzh.ch" },
]

# Required Python version and dependencies
requires-python = ">=3.10"
dependencies = ["fractal-tasks-core",
                "ome-zarr",
                "imagecodecs",
                "tqdm",
                "xmltodict",
                "pydantic",
                "csbdeep",
                "stardist",
                "tensorflow",
                "tensorflow-metal ; platform_system == 'Darwin'",
                "napari-feature-classifier==0.2.1",
                "ngio==0.1.6",
               ]


# Optional dependencies (e.g. for `pip install -e ".[dev]"`
[project.optional-dependencies]
dev = ["devtools",
       "pytest",
       "requests",
       "build",
       "jsonschema",
       "bumpver",
       "pre-commit",
       "pytest-cov",
       "pytest-dependency"
      ]

[project.urls]
Documentation = "https://leukemia-kispi.github.io/operetta-compose/"
Repository = "https://github.com/leukemia-kispi/operetta-compose.git"
Issues = "https://github.com/leukemia-kispi/operetta-compose/issues"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["operetta_compose", "operetta_compose.io", "operetta_compose.tasks"]

# Always include the __FRACTAL_MANIFEST__.json file in the package
[tool.setuptools.package-data]
"*" = ["__FRACTAL_MANIFEST__.json"]

[tool.bumpver]
current_version = "0.2.12"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'version = "{version}"$',
]

[tool.coverage.run]
branch = true
parallel = true
relative_files = true
source = ["src/operetta_compose"]
omit = ["tests/*", "operetta_compose/dev/*"]


[tool.pytest.ini_options]
addopts = "--cov=operetta_compose"
