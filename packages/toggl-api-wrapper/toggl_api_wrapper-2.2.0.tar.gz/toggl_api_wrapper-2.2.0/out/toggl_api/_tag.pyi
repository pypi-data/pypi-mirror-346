from ._exceptions import NamingError as NamingError
from .meta import RequestMethod as RequestMethod, TogglCachedEndpoint as TogglCachedEndpoint
from .models import TogglTag as TogglTag, TogglWorkspace as TogglWorkspace
from _typeshed import Incomplete
from httpx import BasicAuth as BasicAuth, Client as Client, Timeout as Timeout
from toggl_api.meta.cache import TogglCache as TogglCache, TogglQuery as TogglQuery

log: Incomplete

class TagEndpoint(TogglCachedEndpoint[TogglTag]):
    MODEL = TogglTag
    workspace_id: Incomplete
    def __init__(self, workspace_id: int | TogglWorkspace, auth: BasicAuth, cache: TogglCache[TogglTag] | None = None, *, client: Client | None = None, timeout: Timeout | int = 10, re_raise: bool = False, retries: int = 3) -> None: ...
    def get(self, tag: TogglTag | int, *, refresh: bool = False) -> TogglTag | None: ...
    def collect(self, *, refresh: bool = False) -> list[TogglTag]: ...
    def add(self, name: str) -> TogglTag: ...
    def edit(self, tag: TogglTag | int, name: str) -> TogglTag: ...
    def delete(self, tag: TogglTag | int) -> None: ...
    @property
    def endpoint(self) -> str: ...
