import abc
import enum
from _typeshed import Incomplete
from abc import ABC, abstractmethod
from dataclasses import dataclass, field
from datetime import date, datetime, timedelta, timezone
from functools import partial
from toggl_api._exceptions import NamingError as NamingError
from toggl_api.utility import get_workspace as get_workspace, parse_iso as parse_iso
from typing import Any
from typing_extensions import Self

log: Incomplete

@dataclass
class TogglClass(ABC, metaclass=abc.ABCMeta):
    __tablename__ = ...
    id: int
    name: str
    timestamp: datetime = field(compare=False, repr=False, default_factory=partial(datetime.now, tz=timezone.utc))
    def __post_init__(self) -> None: ...
    @classmethod
    @abstractmethod
    def from_kwargs(cls, **kwargs: Any) -> Self: ...
    def __getitem__(self, item: str) -> Any: ...
    def __setitem__(self, item: str, value: Any) -> None: ...

@dataclass
class TogglOrganization(TogglClass):
    ___tablename__ = ...
    def __post_init__(self) -> None: ...
    @classmethod
    def from_kwargs(cls, **kwargs: Any) -> Self: ...
    @staticmethod
    def validate_name(name: str, *, max_len: int = 140) -> None: ...

@dataclass
class TogglWorkspace(TogglClass):
    ___tablename__ = ...
    organization: int = field(default=0)
    name = ...
    def __post_init__(self) -> None: ...
    @classmethod
    def from_kwargs(cls, **kwargs: Any) -> Self: ...
    @staticmethod
    def validate_name(name: str, *, max_len: int = 140) -> None: ...

@dataclass
class WorkspaceChild(TogglClass):
    __tablename__ = ...
    workspace: int = field(default=0)
    def __post_init__(self) -> None: ...
    @classmethod
    def from_kwargs(cls, **kwargs: Any) -> Self: ...

@dataclass
class TogglClient(WorkspaceChild):
    __tablename__ = ...
    def __post_init__(self) -> None: ...
    @classmethod
    def from_kwargs(cls, **kwargs: Any) -> TogglClient: ...

@dataclass
class TogglProject(WorkspaceChild):
    class Status(enum.Enum):
        UPCOMING = ...
        ACTIVE = ...
        ENDED = ...
        ARCHIVED = ...
        DELETED = ...
    __tablename__: str
    color: str
    client: int | None
    active: bool
    start_date: date
    end_date: date | None
    stop_date: Incomplete
    def __post_init__(self) -> None: ...
    @classmethod
    def from_kwargs(cls, **kwargs: Any) -> TogglProject: ...
    def get_status(self) -> TogglProject.Status: ...
    def __init__(self, id, name, timestamp=..., workspace=..., color=..., client=..., active=..., start_date=..., end_date=...) -> None: ...

@dataclass
class TogglTracker(WorkspaceChild):
    __tablename__ = ...
    start: datetime = field(default_factory=partial(datetime.now, tz=timezone.utc))
    duration: timedelta | None = field(default=None)
    stop: datetime | None = field(default=None)
    project: int | None = field(default=None)
    tags: list[TogglTag] = field(default_factory=list)
    def __post_init__(self) -> None: ...
    def running(self) -> bool: ...
    @classmethod
    def from_kwargs(cls, **kwargs: Any) -> Self: ...
    @staticmethod
    def get_tags(**kwargs: Any) -> list[TogglTag]: ...
    @property
    def description(self) -> str: ...
    @property
    def running_duration(self) -> timedelta: ...

@dataclass
class TogglTag(WorkspaceChild):
    __tablename__ = ...
    def __post_init__(self) -> None: ...
    @classmethod
    def from_kwargs(cls, **kwargs: Any) -> TogglTag: ...
