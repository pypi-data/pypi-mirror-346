from ._async_endpoint import TogglAsyncCachedEndpoint as TogglAsyncCachedEndpoint
from ._async_sqlite_cache import AsyncSqliteCache as AsyncSqliteCache
from _typeshed import Incomplete
from httpx import AsyncClient as AsyncClient, BasicAuth as BasicAuth
from toggl_api import NamingError as NamingError, TogglTag as TogglTag, TogglWorkspace as TogglWorkspace
from toggl_api._exceptions import NoCacheAssignedError as NoCacheAssignedError
from toggl_api.meta import RequestMethod as RequestMethod

log: Incomplete

class AsyncTagEndpoint(TogglAsyncCachedEndpoint[TogglTag]):
    MODEL = TogglTag
    workspace_id: Incomplete
    def __init__(self, workspace_id: int | TogglWorkspace, auth: BasicAuth, cache: AsyncSqliteCache[TogglTag] | None = None, *, client: AsyncClient | None = None, timeout: int = 10, re_raise: bool = False, retries: int = 3) -> None: ...
    async def get(self, tag: TogglTag | int, *, refresh: bool = False) -> TogglTag | None: ...
    async def collect(self, *, refresh: bool = False) -> list[TogglTag]: ...
    async def add(self, name: str) -> TogglTag: ...
    async def edit(self, tag: TogglTag | int, name: str) -> TogglTag: ...
    async def delete(self, tag: TogglTag | int) -> None: ...
    @property
    def endpoint(self) -> str: ...
