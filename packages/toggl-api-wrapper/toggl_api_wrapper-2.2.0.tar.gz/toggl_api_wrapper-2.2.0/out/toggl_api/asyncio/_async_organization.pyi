from ._async_endpoint import TogglAsyncCachedEndpoint as TogglAsyncCachedEndpoint
from ._async_sqlite_cache import AsyncSqliteCache as AsyncSqliteCache
from _typeshed import Incomplete
from httpx import AsyncClient as AsyncClient, BasicAuth as BasicAuth
from toggl_api.meta import RequestMethod as RequestMethod
from toggl_api.models import TogglOrganization as TogglOrganization, TogglWorkspace as TogglWorkspace

log: Incomplete

class AsyncOrganizationEndpoint(TogglAsyncCachedEndpoint[TogglOrganization]):
    MODEL = TogglOrganization
    def __init__(self, auth: BasicAuth, cache: AsyncSqliteCache[TogglOrganization] | None = None, *, client: AsyncClient | None = None, timeout: int = 10, re_raise: bool = False, retries: int = 3) -> None: ...
    async def get(self, organization: TogglOrganization | int, *, refresh: bool = False) -> TogglOrganization | None: ...
    async def add(self, name: str, workspace_name: str = 'Default-Workspace') -> TogglOrganization: ...
    async def edit(self, organization: TogglOrganization | int, name: str) -> TogglOrganization: ...
    async def collect(self, *, refresh: bool = False) -> list[TogglOrganization]: ...
    async def delete(self, organization: TogglOrganization | int) -> None: ...
