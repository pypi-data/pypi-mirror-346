# coding: utf-8

"""
MoneyKit API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2023-02-18
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from moneykit.models.transaction_response import TransactionResponse


class TestTransactionResponse(unittest.TestCase):
    """TransactionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransactionResponse:
        """Test TransactionResponse
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TransactionResponse`
        """
        model = TransactionResponse()
        if include_optional:
            return TransactionResponse(
                transaction_id = '',
                account_id = '',
                amount = '',
                type = 'credit',
                currency = '',
                var_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                raw_description = '',
                pending = True,
                category = '',
                enrichment = moneykit.models.transaction_enrichment_response.TransactionEnrichmentResponse(
                    category = moneykit.models.transaction_category_response.TransactionCategoryResponse(
                        value = '', 
                        confidence = 56, ), 
                    subcategory = moneykit.models.transaction_subcategory_response.TransactionSubcategoryResponse(
                        value = '', 
                        confidence = 56, ), 
                    merchant = moneykit.models.transaction_merchant_response.TransactionMerchantResponse(
                        id = '', 
                        name = '', 
                        logo = '', 
                        confidence = 56, ), 
                    processor = moneykit.models.transaction_processor_response.TransactionProcessorResponse(
                        id = '', 
                        name = '', 
                        logo = '', 
                        confidence = 56, ), 
                    recurrence = moneykit.models.transaction_recurrence_response.TransactionRecurrenceResponse(
                        frequency = '', 
                        next_predicted_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), ),
                original_id = ''
            )
        else:
            return TransactionResponse(
                transaction_id = '',
                account_id = '',
                amount = '',
                type = 'credit',
                currency = '',
                var_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                pending = True,
        )
        """

    def testTransactionResponse(self):
        """Test TransactionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
