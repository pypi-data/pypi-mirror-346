# coding: utf-8

"""
MoneyKit API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2023-02-18
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from moneykit.models.transactions_link_product import TransactionsLinkProduct


class TestTransactionsLinkProduct(unittest.TestCase):
    """TransactionsLinkProduct unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransactionsLinkProduct:
        """Test TransactionsLinkProduct
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TransactionsLinkProduct`
        """
        model = TransactionsLinkProduct()
        if include_optional:
            return TransactionsLinkProduct(
                refreshed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_attempted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                error_code = 'rate_limit',
                error_message = '',
                unavailable = '',
                settings = moneykit.models.transactions_product_settings.TransactionsProductSettings(
                    required = True, 
                    require_permission = True, 
                    prefetch = True, 
                    reason = '', ),
                has_history = True
            )
        else:
            return TransactionsLinkProduct(
                has_history = True,
        )
        """

    def testTransactionsLinkProduct(self):
        """Test TransactionsLinkProduct"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
