# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zepben/protobuf/cim/iec61970/base/wires/generation/production/PhotoVoltaicUnit.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from zepben.protobuf.cim.iec61970.base.wires.generation.production import PowerElectronicsUnit_pb2 as zepben_dot_protobuf_dot_cim_dot_iec61970_dot_base_dot_wires_dot_generation_dot_production_dot_PowerElectronicsUnit__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nTzepben/protobuf/cim/iec61970/base/wires/generation/production/PhotoVoltaicUnit.proto\x12=zepben.protobuf.cim.iec61970.base.wires.generation.production\x1aXzepben/protobuf/cim/iec61970/base/wires/generation/production/PowerElectronicsUnit.proto\"t\n\x10PhotoVoltaicUnit\x12`\n\x03peu\x18\x01 \x01(\x0b\x32S.zepben.protobuf.cim.iec61970.base.wires.generation.production.PowerElectronicsUnitB\x85\x01\nAcom.zepben.protobuf.cim.iec61970.base.wires.generation.productionP\x01\xaa\x02=Zepben.Protobuf.CIM.IEC61970.Base.Wires.Generation.Productionb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'zepben.protobuf.cim.iec61970.base.wires.generation.production.PhotoVoltaicUnit_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'\nAcom.zepben.protobuf.cim.iec61970.base.wires.generation.productionP\001\252\002=Zepben.Protobuf.CIM.IEC61970.Base.Wires.Generation.Production'
  _globals['_PHOTOVOLTAICUNIT']._serialized_start=241
  _globals['_PHOTOVOLTAICUNIT']._serialized_end=357
# @@protoc_insertion_point(module_scope)
