[project]
name = 'flufl.i18n'
authors = [
    {name = 'Barry Warsaw', email = 'barry@python.org'},
]
description = 'A high level API for internationalizing Python libraries and applications'
readme = 'README.rst'
requires-python = '>=3.9'
license = {text = 'Apache-2.0'}
keywords = [
    'i18n',
    'internationalization',
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Development Status :: 6 - Mature',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: POSIX',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Topic :: Software Development :: Internationalization',
    'Topic :: Software Development :: Libraries',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Software Development :: Localization',
]
dependencies = [
    'atpublic',
]
dynamic = ['version']

[project.urls]
'Home Page' = 'https://flufli18n.readthedocs.io'
'Documentation' = 'https://flufli18n.readthedocs.io'
'Source Code' = 'https://gitlab.com/warsaw/flufl.i18n.git'
'Bug Tracker' = 'https://gitlab.com/warsaw/flufl.i18n/issues'

[tool.hatch.version]
path = 'src/flufl/i18n/__init__.py'

[tool.hatch.build.targets.wheel]
packages = [
    'src/flufl',
]

[tool.hatch.build.targets.sdist]
include = [
    'src/flufl/',
    'docs/',
    'test/',
    'conftest.py',
]
excludes = [
    '**/.mypy_cache',
]

[tool.hatch.envs.default.scripts]
all = [
    'hatch test --all',
    'hatch run qa:qa',
    'hatch run docs:docs',
]

[tool.hatch.envs.hatch-test]
default-args = ['tests', 'docs']
extra-dependencies = [
    'diff-cover',
    'sybil',
]

[tool.hatch.envs.hatch-test.scripts]
run = [
    'coverage run -m pytest{env:HATCH_TEST_ARGS:} {args}',
    'coverage combine',
    'coverage report',
    'coverage xml',
    '- diff-cover coverage.xml',
]
run-cov = 'hatch test'
cov-combine = ''
cov-report = ''

[[tool.hatch.envs.hatch-test.matrix]]
python = ['3.9', '3.10', '3.11', '3.12', '3.13', '3.14']

[tool.hatch.envs.qa]
dependencies = [
    'ruff',
    'mypy',
]

[tool.hatch.envs.qa.env-vars]
MODULE_NAME = '{env:MODULE_NAME:flufl.i18n}'
MODULE_PATH = '{env:MODULE_PATH:src/flufl/i18n}'

[tool.hatch.envs.qa.scripts]
qa = [
    'hatch fmt --check src',
    'mypy -p {env:MODULE_NAME}',
]
fix = [
    'hatch fmt src',
]
preview = [
    'hatch fmt --diff src',
]

[tool.hatch.envs.docs]
dependencies = [
    'sphinx',
    'furo',
]

[tool.hatch.envs.docs.scripts]
docs = [
    'sphinx-build docs build/html',
]

[tool.coverage.run]
source = ['flufl.i18n']
branch = true
parallel = true

[tool.coverage.report]
fail_under = 100
show_missing = true

[tool.ruff]
line-length = 100
src = ['src']

[tool.ruff.lint.extend-per-file-ignores]
# Essentially, ignore all lint warnings in these configuration files.
'conftest.py' = [
    'ARG002',
    'I001',
    'S101',
]
'docs/conf.py' = [
    'A',
    'DTZ',
    'E',
    'I',
    'UP',
]
'src/flufl/i18n/_strategy.py' = [
    'EM101',                    # Exception must not use a string literal, assign to variable first
    'TRY003',                   # Avoid specifying long messages outside the exception class
]
'src/flufl/i18n/_substitute.py' = [
    'N801',                     # Class name `attrdict` should use CapWords convention
]
# https://gitlab.com/warsaw/flufl.i18n/-/issues/20
'src/flufl/i18n/_translator.py' = [
    'FBT001',                   # Boolean-typed positional argument in function definition
    'FBT002',                   # Boolean default positional argument in function definition
]

[tool.ruff.format]
quote-style = 'single'

[tool.ruff.lint.pydocstyle]
convention = 'pep257'

[tool.ruff.lint.isort]
case-sensitive = true
forced-separate = ['docutils', 'sphinx']
known-first-party = ['flufl.i18n']
length-sort-straight = true
lines-after-imports = 2
lines-between-types = 1
order-by-type = true
section-order = ['standard-library', 'third-party', 'local-folder', 'first-party']

[tool.mypy]
mypy_path = 'src'

# Disallow dynamic typing
disallow_any_generics = true
disallow_subclassing_any = true

# Untyped definitions and calls
disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false

# None and Optional handling
no_implicit_optional = true

# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

# Miscellaneous strictness flags
implicit_reexport = false
strict_equality = true

# Configuring error messages
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
show_absolute_path = true

# Miscellaneous
warn_unused_configs = true
verbosity = 0

[[tool.mypy.overrides]]
module = [
    'pytest',
    'sybil.*',
]
ignore_missing_imports = true

[build-system]
requires = ['hatchling']
build-backend = 'hatchling.build'
