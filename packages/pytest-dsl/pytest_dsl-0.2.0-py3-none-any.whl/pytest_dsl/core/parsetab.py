
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightEQUALSAUTHOR_KEYWORD COLON COMMA DATA_KEYWORD DATE DATE_KEYWORD DESCRIPTION_KEYWORD DO END EQUALS FALSE FOR ID IMPORT_KEYWORD IN KEYWORD_KEYWORD LBRACKET LPAREN NAME_KEYWORD NUMBER PLACEHOLDER RANGE RBRACKET RETURN RPAREN STRING TAGS_KEYWORD TEARDOWN_KEYWORD TRUE USINGstart : metadata statements teardown\n             | metadata statementsmetadata : metadata_itemsmetadata_items : metadata_item metadata_items\n                     | metadata_itemmetadata_item : NAME_KEYWORD COLON metadata_value\n                    | DESCRIPTION_KEYWORD COLON metadata_value\n                    | TAGS_KEYWORD COLON LBRACKET tags RBRACKET\n                    | AUTHOR_KEYWORD COLON metadata_value\n                    | DATE_KEYWORD COLON DATE\n                    | DATA_KEYWORD COLON data_source\n                    | IMPORT_KEYWORD COLON STRINGmetadata_value : STRING\n                     | IDtags : tag COMMA tags\n            | tagtag : STRING\n           | IDstatements : statement statements\n                  | statementstatement : assignment\n                | keyword_call\n                | loop\n                | custom_keyword\n                | return_statementassignment : ID EQUALS expression\n                 | ID EQUALS keyword_callexpression : NUMBER\n                  | STRING\n                  | PLACEHOLDER\n                  | ID\n                  | boolean_expr\n                  | list_exprboolean_expr : TRUE\n                    | FALSElist_expr : LBRACKET list_items RBRACKET\n                 | LBRACKET RBRACKETlist_items : list_item\n                  | list_item COMMA list_itemslist_item : expressionloop : FOR ID IN RANGE LPAREN expression COMMA expression RPAREN DO statements ENDkeyword_call : LBRACKET ID RBRACKET COMMA parameter_list\n                   | LBRACKET ID RBRACKETparameter_list : parameter_itemsparameter_items : parameter_item COMMA parameter_items\n                     | parameter_itemparameter_item : ID COLON expressionteardown : TEARDOWN_KEYWORD DO statements ENDdata_source : STRING USING IDcustom_keyword : KEYWORD_KEYWORD ID LPAREN param_definitions RPAREN DO statements ENDparam_definitions : param_def_list\n                        | param_def_list : param_def COMMA param_def_list\n                     | param_defparam_def : ID EQUALS STRING\n                | ID EQUALS NUMBER\n                | IDreturn_statement : RETURN expression'
    
_lr_action_items = {'NAME_KEYWORD':([0,4,49,50,51,52,54,55,56,58,85,87,],[5,5,-6,-13,-14,-7,-9,-10,-11,-12,-8,-49,]),'DESCRIPTION_KEYWORD':([0,4,49,50,51,52,54,55,56,58,85,87,],[6,6,-6,-13,-14,-7,-9,-10,-11,-12,-8,-49,]),'TAGS_KEYWORD':([0,4,49,50,51,52,54,55,56,58,85,87,],[7,7,-6,-13,-14,-7,-9,-10,-11,-12,-8,-49,]),'AUTHOR_KEYWORD':([0,4,49,50,51,52,54,55,56,58,85,87,],[8,8,-6,-13,-14,-7,-9,-10,-11,-12,-8,-49,]),'DATE_KEYWORD':([0,4,49,50,51,52,54,55,56,58,85,87,],[9,9,-6,-13,-14,-7,-9,-10,-11,-12,-8,-49,]),'DATA_KEYWORD':([0,4,49,50,51,52,54,55,56,58,85,87,],[10,10,-6,-13,-14,-7,-9,-10,-11,-12,-8,-49,]),'IMPORT_KEYWORD':([0,4,49,50,51,52,54,55,56,58,85,87,],[11,11,-6,-13,-14,-7,-9,-10,-11,-12,-8,-49,]),'$end':([1,12,13,14,15,16,17,18,32,34,39,40,41,42,43,44,45,46,47,60,61,63,67,83,88,90,91,92,106,107,111,115,],[0,-2,-20,-21,-22,-23,-24,-25,-1,-19,-58,-28,-29,-30,-31,-32,-33,-34,-35,-26,-27,-43,-37,-36,-48,-42,-44,-46,-47,-45,-50,-41,]),'ID':([2,3,4,13,14,15,16,17,18,20,21,22,23,24,25,26,28,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,67,74,77,83,84,85,86,87,90,91,92,93,96,99,100,104,106,107,108,111,113,115,],[19,-3,-5,19,-21,-22,-23,-24,-25,36,37,38,43,-4,51,51,51,43,-58,-28,-29,-30,-31,-32,-33,-34,-35,43,-6,-13,-14,-7,73,-9,-10,-11,-12,19,-26,-27,76,-43,79,-37,87,89,-36,43,-8,73,-49,-42,-44,-46,43,79,43,89,19,-47,-45,43,-50,19,-41,]),'LBRACKET':([2,3,4,13,14,15,16,17,18,23,24,27,35,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,58,59,60,61,62,63,67,83,84,85,87,90,91,92,93,99,104,106,107,108,111,113,115,],[20,-3,-5,20,-21,-22,-23,-24,-25,48,-4,53,62,-58,-28,-29,-30,-31,-32,-33,-34,-35,48,-6,-13,-14,-7,-9,-10,-11,-12,20,-26,-27,48,-43,-37,-36,48,-8,-49,-42,-44,-46,48,48,20,-47,-45,48,-50,20,-41,]),'FOR':([2,3,4,13,14,15,16,17,18,24,39,40,41,42,43,44,45,46,47,49,50,51,52,54,55,56,58,59,60,61,63,67,83,85,87,90,91,92,104,106,107,111,113,115,],[21,-3,-5,21,-21,-22,-23,-24,-25,-4,-58,-28,-29,-30,-31,-32,-33,-34,-35,-6,-13,-14,-7,-9,-10,-11,-12,21,-26,-27,-43,-37,-36,-8,-49,-42,-44,-46,21,-47,-45,-50,21,-41,]),'KEYWORD_KEYWORD':([2,3,4,13,14,15,16,17,18,24,39,40,41,42,43,44,45,46,47,49,50,51,52,54,55,56,58,59,60,61,63,67,83,85,87,90,91,92,104,106,107,111,113,115,],[22,-3,-5,22,-21,-22,-23,-24,-25,-4,-58,-28,-29,-30,-31,-32,-33,-34,-35,-6,-13,-14,-7,-9,-10,-11,-12,22,-26,-27,-43,-37,-36,-8,-49,-42,-44,-46,22,-47,-45,-50,22,-41,]),'RETURN':([2,3,4,13,14,15,16,17,18,24,39,40,41,42,43,44,45,46,47,49,50,51,52,54,55,56,58,59,60,61,63,67,83,85,87,90,91,92,104,106,107,111,113,115,],[23,-3,-5,23,-21,-22,-23,-24,-25,-4,-58,-28,-29,-30,-31,-32,-33,-34,-35,-6,-13,-14,-7,-9,-10,-11,-12,23,-26,-27,-43,-37,-36,-8,-49,-42,-44,-46,23,-47,-45,-50,23,-41,]),'COLON':([5,6,7,8,9,10,11,89,],[25,26,27,28,29,30,31,99,]),'TEARDOWN_KEYWORD':([12,13,14,15,16,17,18,34,39,40,41,42,43,44,45,46,47,60,61,63,67,83,90,91,92,106,107,111,115,],[33,-20,-21,-22,-23,-24,-25,-19,-58,-28,-29,-30,-31,-32,-33,-34,-35,-26,-27,-43,-37,-36,-42,-44,-46,-47,-45,-50,-41,]),'END':([13,14,15,16,17,18,34,39,40,41,42,43,44,45,46,47,60,61,63,67,75,83,90,91,92,106,107,109,111,114,115,],[-20,-21,-22,-23,-24,-25,-19,-58,-28,-29,-30,-31,-32,-33,-34,-35,-26,-27,-43,-37,88,-36,-42,-44,-46,-47,-45,111,-50,115,-41,]),'EQUALS':([19,79,],[35,94,]),'NUMBER':([23,35,48,62,84,93,94,99,108,],[40,40,40,40,40,40,103,40,40,]),'STRING':([23,25,26,28,30,31,35,48,53,62,84,86,93,94,99,108,],[41,50,50,50,57,58,41,41,72,41,41,72,41,102,41,41,]),'PLACEHOLDER':([23,35,48,62,84,93,99,108,],[42,42,42,42,42,42,42,42,]),'TRUE':([23,35,48,62,84,93,99,108,],[46,46,46,46,46,46,46,46,]),'FALSE':([23,35,48,62,84,93,99,108,],[47,47,47,47,47,47,47,47,]),'DATE':([29,],[55,]),'DO':([33,95,112,],[59,104,113,]),'RBRACKET':([36,40,41,42,43,44,45,46,47,48,62,66,67,68,69,70,71,72,73,76,83,97,98,],[63,-28,-29,-30,-31,-32,-33,-34,-35,67,67,83,-37,-38,-40,85,-16,-17,-18,63,-36,-39,-15,]),'IN':([37,],[64,]),'LPAREN':([38,78,],[65,93,]),'COMMA':([40,41,42,43,44,45,46,47,63,67,68,69,71,72,73,76,79,82,83,92,101,102,103,106,],[-28,-29,-30,-31,-32,-33,-34,-35,77,-37,84,-40,86,-17,-18,-31,-57,96,-36,100,108,-55,-56,-47,]),'RPAREN':([40,41,42,43,44,45,46,47,65,67,79,80,81,82,83,102,103,105,110,],[-28,-29,-30,-31,-32,-33,-34,-35,-52,-37,-57,95,-51,-54,-36,-55,-56,-53,112,]),'USING':([57,],[74,]),'RANGE':([64,],[78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'metadata':([0,],[2,]),'metadata_items':([0,4,],[3,24,]),'metadata_item':([0,4,],[4,4,]),'statements':([2,13,59,104,113,],[12,34,75,109,114,]),'statement':([2,13,59,104,113,],[13,13,13,13,13,]),'assignment':([2,13,59,104,113,],[14,14,14,14,14,]),'keyword_call':([2,13,35,59,104,113,],[15,15,61,15,15,15,]),'loop':([2,13,59,104,113,],[16,16,16,16,16,]),'custom_keyword':([2,13,59,104,113,],[17,17,17,17,17,]),'return_statement':([2,13,59,104,113,],[18,18,18,18,18,]),'teardown':([12,],[32,]),'expression':([23,35,48,62,84,93,99,108,],[39,60,69,69,69,101,106,110,]),'boolean_expr':([23,35,48,62,84,93,99,108,],[44,44,44,44,44,44,44,44,]),'list_expr':([23,35,48,62,84,93,99,108,],[45,45,45,45,45,45,45,45,]),'metadata_value':([25,26,28,],[49,52,54,]),'data_source':([30,],[56,]),'list_items':([48,62,84,],[66,66,97,]),'list_item':([48,62,84,],[68,68,68,]),'tags':([53,86,],[70,98,]),'tag':([53,86,],[71,71,]),'param_definitions':([65,],[80,]),'param_def_list':([65,96,],[81,105,]),'param_def':([65,96,],[82,82,]),'parameter_list':([77,],[90,]),'parameter_items':([77,100,],[91,107,]),'parameter_item':([77,100,],[92,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> metadata statements teardown','start',3,'p_start','parser.py',20),
  ('start -> metadata statements','start',2,'p_start','parser.py',21),
  ('metadata -> metadata_items','metadata',1,'p_metadata','parser.py',30),
  ('metadata_items -> metadata_item metadata_items','metadata_items',2,'p_metadata_items','parser.py',35),
  ('metadata_items -> metadata_item','metadata_items',1,'p_metadata_items','parser.py',36),
  ('metadata_item -> NAME_KEYWORD COLON metadata_value','metadata_item',3,'p_metadata_item','parser.py',44),
  ('metadata_item -> DESCRIPTION_KEYWORD COLON metadata_value','metadata_item',3,'p_metadata_item','parser.py',45),
  ('metadata_item -> TAGS_KEYWORD COLON LBRACKET tags RBRACKET','metadata_item',5,'p_metadata_item','parser.py',46),
  ('metadata_item -> AUTHOR_KEYWORD COLON metadata_value','metadata_item',3,'p_metadata_item','parser.py',47),
  ('metadata_item -> DATE_KEYWORD COLON DATE','metadata_item',3,'p_metadata_item','parser.py',48),
  ('metadata_item -> DATA_KEYWORD COLON data_source','metadata_item',3,'p_metadata_item','parser.py',49),
  ('metadata_item -> IMPORT_KEYWORD COLON STRING','metadata_item',3,'p_metadata_item','parser.py',50),
  ('metadata_value -> STRING','metadata_value',1,'p_metadata_value','parser.py',64),
  ('metadata_value -> ID','metadata_value',1,'p_metadata_value','parser.py',65),
  ('tags -> tag COMMA tags','tags',3,'p_tags','parser.py',70),
  ('tags -> tag','tags',1,'p_tags','parser.py',71),
  ('tag -> STRING','tag',1,'p_tag','parser.py',79),
  ('tag -> ID','tag',1,'p_tag','parser.py',80),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',85),
  ('statements -> statement','statements',1,'p_statements','parser.py',86),
  ('statement -> assignment','statement',1,'p_statement','parser.py',94),
  ('statement -> keyword_call','statement',1,'p_statement','parser.py',95),
  ('statement -> loop','statement',1,'p_statement','parser.py',96),
  ('statement -> custom_keyword','statement',1,'p_statement','parser.py',97),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',98),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','parser.py',103),
  ('assignment -> ID EQUALS keyword_call','assignment',3,'p_assignment','parser.py',104),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',112),
  ('expression -> STRING','expression',1,'p_expression','parser.py',113),
  ('expression -> PLACEHOLDER','expression',1,'p_expression','parser.py',114),
  ('expression -> ID','expression',1,'p_expression','parser.py',115),
  ('expression -> boolean_expr','expression',1,'p_expression','parser.py',116),
  ('expression -> list_expr','expression',1,'p_expression','parser.py',117),
  ('boolean_expr -> TRUE','boolean_expr',1,'p_boolean_expr','parser.py',122),
  ('boolean_expr -> FALSE','boolean_expr',1,'p_boolean_expr','parser.py',123),
  ('list_expr -> LBRACKET list_items RBRACKET','list_expr',3,'p_list_expr','parser.py',128),
  ('list_expr -> LBRACKET RBRACKET','list_expr',2,'p_list_expr','parser.py',129),
  ('list_items -> list_item','list_items',1,'p_list_items','parser.py',137),
  ('list_items -> list_item COMMA list_items','list_items',3,'p_list_items','parser.py',138),
  ('list_item -> expression','list_item',1,'p_list_item','parser.py',146),
  ('loop -> FOR ID IN RANGE LPAREN expression COMMA expression RPAREN DO statements END','loop',12,'p_loop','parser.py',151),
  ('keyword_call -> LBRACKET ID RBRACKET COMMA parameter_list','keyword_call',5,'p_keyword_call','parser.py',156),
  ('keyword_call -> LBRACKET ID RBRACKET','keyword_call',3,'p_keyword_call','parser.py',157),
  ('parameter_list -> parameter_items','parameter_list',1,'p_parameter_list','parser.py',165),
  ('parameter_items -> parameter_item COMMA parameter_items','parameter_items',3,'p_parameter_items','parser.py',170),
  ('parameter_items -> parameter_item','parameter_items',1,'p_parameter_items','parser.py',171),
  ('parameter_item -> ID COLON expression','parameter_item',3,'p_parameter_item','parser.py',179),
  ('teardown -> TEARDOWN_KEYWORD DO statements END','teardown',4,'p_teardown','parser.py',184),
  ('data_source -> STRING USING ID','data_source',3,'p_data_source','parser.py',189),
  ('custom_keyword -> KEYWORD_KEYWORD ID LPAREN param_definitions RPAREN DO statements END','custom_keyword',8,'p_custom_keyword','parser.py',194),
  ('param_definitions -> param_def_list','param_definitions',1,'p_param_definitions','parser.py',199),
  ('param_definitions -> <empty>','param_definitions',0,'p_param_definitions','parser.py',200),
  ('param_def_list -> param_def COMMA param_def_list','param_def_list',3,'p_param_def_list','parser.py',208),
  ('param_def_list -> param_def','param_def_list',1,'p_param_def_list','parser.py',209),
  ('param_def -> ID EQUALS STRING','param_def',3,'p_param_def','parser.py',217),
  ('param_def -> ID EQUALS NUMBER','param_def',3,'p_param_def','parser.py',218),
  ('param_def -> ID','param_def',1,'p_param_def','parser.py',219),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',227),
]
