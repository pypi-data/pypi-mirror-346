[project]
name = "tomtom-apis"
version = "0.0.1a4"
description = "Asynchronous Python client for the TomTom APIs"
authors = [{ name = "Sander Gols", email = "developer@golles.nl" }]
requires-python = "==3.13.3"
readme = "README.md"
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "aiohttp==3.11.18",
    "geojson==3.2.0",
    "mashumaro==3.15",
    "orjson==3.10.18",
]

[project.urls]
Documentation = "https://github.com/golles/tomtom-apis-python"
Homepage = "https://github.com/golles/tomtom-apis-python"
Repository = "https://github.com/golles/tomtom-apis-python"
Issues = "https://github.com/golles/tomtom-apis-python/issues"

[dependency-groups]
dev = [
    "aresponses==3.0.0",
    "mypy==1.15.0",
    "pre-commit==4.2.0",
    "pylint==3.3.7",
    "pytest==8.3.5",
    "pytest-asyncio==0.26.0",
    "pytest-cov==6.1.1",
    "ruff==0.11.8",
    "shellcheck-py==0.10.0.1",
    "yamllint==1.37.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.coverage.run]
source = ["tomtom_apis"]

[tool.hatch.build.targets.wheel]
packages = ["src/tomtom_apis"]

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aresponses.*"
ignore_missing_imports = true

[tool.pylint]
max-line-length=150

[tool.pytest.ini_options]
addopts = "--cov --cov-report=term --cov-report=xml"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope="function"
log_cli = true
log_cli_level = "DEBUG"

[tool.ruff]
line-length = 150
target-version = "py313"

[tool.ruff.lint]
extend-select = [
  "UP",  # pyupgrade
  "D",  # pydocstyle
  "ANN",  # flake8-annotations
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["tomtom_apis"]
