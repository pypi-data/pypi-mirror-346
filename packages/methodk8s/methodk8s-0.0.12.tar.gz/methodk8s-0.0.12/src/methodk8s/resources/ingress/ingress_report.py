# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .http_route import HttpRoute
import pydantic
from .ingress import Ingress
from .load_balancer import LoadBalancer
from ..common.auth_types import AuthTypes
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class IngressReport(UniversalBaseModel):
    http_routes: typing.Optional[typing.List[HttpRoute]] = pydantic.Field(alias="httpRoutes", default=None)
    ingresses: typing.Optional[typing.List[Ingress]] = None
    load_balancers: typing.Optional[typing.List[LoadBalancer]] = pydantic.Field(alias="loadBalancers", default=None)
    cluster_url: typing.Optional[str] = pydantic.Field(alias="clusterUrl", default=None)
    auth_type: AuthTypes = pydantic.Field(alias="authType")
    errors: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
