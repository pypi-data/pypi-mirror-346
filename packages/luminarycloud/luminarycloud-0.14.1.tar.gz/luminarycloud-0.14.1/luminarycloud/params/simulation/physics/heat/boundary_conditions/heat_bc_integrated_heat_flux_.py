# Generated by generate_sdk_wrappers.py. DO NOT EDIT

from abc import ABC, ABCMeta
from dataclasses import dataclass, field
from typing import Any, Optional
from uuid import uuid4

from luminarycloud.tables import RectilinearTable, _param_name_to_table_type
from google.protobuf.message import Message as _Message

from luminarycloud.tables import RectilinearTable
from luminarycloud.types import Vector3
from luminarycloud.types.adfloat import _to_ad_proto, _from_ad_proto
from luminarycloud._proto.client import simulation_pb2 as clientpb
from luminarycloud._proto.client.entity_pb2 import EntityIdentifier
import luminarycloud.params.enum._enum_wrappers as enum

from luminarycloud.params.simulation._lib import ParamGroupWrapper, CodeRepr, create_unique_id

from luminarycloud.params.simulation.physics.heat.boundary_conditions_heat_ import (
    BoundaryConditionsHeat,
)
from luminarycloud.params.simulation.physics.heat.boundary_conditions_heat_ import *


@dataclass(kw_only=True)
class HeatBcIntegratedHeatFlux(BoundaryConditionsHeat):
    """Integrated heat flux."""

    heat_flux: float = 0.0
    "Total heat flux (power) at wall boundary surfaces. Negative values increase temperatures at the wall while positive values decrease it. Enter 0 for an adiabatic wall."
    heat_flux_column_index: int = 0
    "Index of the column of the table in profile_bc_data for heat flux."

    def _to_proto(self) -> clientpb.BoundaryConditionsHeat:
        _proto = super()._to_proto()
        _proto.heat_physical_boundary = enum.HeatPhysicalBoundary.HEAT_BC_INTEGRATED_HEAT_FLUX.value
        _proto.fixed_integrated_heat_flux.CopyFrom(_to_ad_proto(self.heat_flux))
        _proto.heat_flux_col.value = self.heat_flux_column_index
        return _proto

    def _from_proto(self, proto: clientpb.BoundaryConditionsHeat) -> None:
        super()._from_proto(proto)
        assert (
            proto.heat_physical_boundary
            == enum.HeatPhysicalBoundary.HEAT_BC_INTEGRATED_HEAT_FLUX.value
        )
        self.heat_flux = _from_ad_proto(proto.fixed_integrated_heat_flux)
        self.heat_flux_column_index = proto.heat_flux_col.value
        return None
