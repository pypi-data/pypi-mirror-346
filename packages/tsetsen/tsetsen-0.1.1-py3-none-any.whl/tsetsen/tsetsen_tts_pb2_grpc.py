# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import tsetsen_tts_pb2 as tsetsen__tts__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in tsetsen_tts_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TsetsenTTSStub(object):
    """Service definition for Tsetsen TTS API
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListVoices = channel.unary_unary(
                '/tsetsen.api.v1.TsetsenTTS/ListVoices',
                request_serializer=tsetsen__tts__pb2.ListVoicesRequest.SerializeToString,
                response_deserializer=tsetsen__tts__pb2.ListVoicesResponse.FromString,
                _registered_method=True)
        self.GenerateSpeech = channel.unary_unary(
                '/tsetsen.api.v1.TsetsenTTS/GenerateSpeech',
                request_serializer=tsetsen__tts__pb2.GenerateSpeechRequest.SerializeToString,
                response_deserializer=tsetsen__tts__pb2.GenerateSpeechResponse.FromString,
                _registered_method=True)
        self.CheckStatus = channel.unary_unary(
                '/tsetsen.api.v1.TsetsenTTS/CheckStatus',
                request_serializer=tsetsen__tts__pb2.CheckStatusRequest.SerializeToString,
                response_deserializer=tsetsen__tts__pb2.CheckStatusResponse.FromString,
                _registered_method=True)
        self.GetUserBalance = channel.unary_unary(
                '/tsetsen.api.v1.TsetsenTTS/GetUserBalance',
                request_serializer=tsetsen__tts__pb2.GetUserBalanceRequest.SerializeToString,
                response_deserializer=tsetsen__tts__pb2.GetUserBalanceResponse.FromString,
                _registered_method=True)
        self.StreamSpeech = channel.unary_stream(
                '/tsetsen.api.v1.TsetsenTTS/StreamSpeech',
                request_serializer=tsetsen__tts__pb2.StreamSpeechRequest.SerializeToString,
                response_deserializer=tsetsen__tts__pb2.StreamSpeechResponse.FromString,
                _registered_method=True)


class TsetsenTTSServicer(object):
    """Service definition for Tsetsen TTS API
    """

    def ListVoices(self, request, context):
        """List available voices
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateSpeech(self, request, context):
        """Generate speech from text
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckStatus(self, request, context):
        """Check the status of a TTS request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBalance(self, request, context):
        """Get user balance information
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamSpeech(self, request, context):
        """Streaming speech synthesis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TsetsenTTSServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListVoices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVoices,
                    request_deserializer=tsetsen__tts__pb2.ListVoicesRequest.FromString,
                    response_serializer=tsetsen__tts__pb2.ListVoicesResponse.SerializeToString,
            ),
            'GenerateSpeech': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateSpeech,
                    request_deserializer=tsetsen__tts__pb2.GenerateSpeechRequest.FromString,
                    response_serializer=tsetsen__tts__pb2.GenerateSpeechResponse.SerializeToString,
            ),
            'CheckStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckStatus,
                    request_deserializer=tsetsen__tts__pb2.CheckStatusRequest.FromString,
                    response_serializer=tsetsen__tts__pb2.CheckStatusResponse.SerializeToString,
            ),
            'GetUserBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBalance,
                    request_deserializer=tsetsen__tts__pb2.GetUserBalanceRequest.FromString,
                    response_serializer=tsetsen__tts__pb2.GetUserBalanceResponse.SerializeToString,
            ),
            'StreamSpeech': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamSpeech,
                    request_deserializer=tsetsen__tts__pb2.StreamSpeechRequest.FromString,
                    response_serializer=tsetsen__tts__pb2.StreamSpeechResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tsetsen.api.v1.TsetsenTTS', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('tsetsen.api.v1.TsetsenTTS', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TsetsenTTS(object):
    """Service definition for Tsetsen TTS API
    """

    @staticmethod
    def ListVoices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tsetsen.api.v1.TsetsenTTS/ListVoices',
            tsetsen__tts__pb2.ListVoicesRequest.SerializeToString,
            tsetsen__tts__pb2.ListVoicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateSpeech(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tsetsen.api.v1.TsetsenTTS/GenerateSpeech',
            tsetsen__tts__pb2.GenerateSpeechRequest.SerializeToString,
            tsetsen__tts__pb2.GenerateSpeechResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tsetsen.api.v1.TsetsenTTS/CheckStatus',
            tsetsen__tts__pb2.CheckStatusRequest.SerializeToString,
            tsetsen__tts__pb2.CheckStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tsetsen.api.v1.TsetsenTTS/GetUserBalance',
            tsetsen__tts__pb2.GetUserBalanceRequest.SerializeToString,
            tsetsen__tts__pb2.GetUserBalanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamSpeech(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/tsetsen.api.v1.TsetsenTTS/StreamSpeech',
            tsetsen__tts__pb2.StreamSpeechRequest.SerializeToString,
            tsetsen__tts__pb2.StreamSpeechResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
