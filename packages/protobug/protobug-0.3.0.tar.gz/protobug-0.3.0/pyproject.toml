[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "protobug"
dynamic = ["version"]
description = "A pythonic protobuf library using dataclasses and enums"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["protobuf"]
license = { file = "LICENSE" }
authors = [
  { name = "Simon Sawicki", email = "contact@grub4k.dev" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/yt-dlp/protobug?tab=readme-ov-file"
Repository = "https://github.com/yt-dlp/protobug"
Issues = "https://github.com/yt-dlp/protobug/issues"
Source = "https://github.com/yt-dlp/protobug"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/protobug/_version.py"

[tool.hatch.envs.default]
installer = "uv"
dependencies = ["pre-commit"]

[tool.hatch.envs.types]
installer = "uv"
extra-dependencies = [
  "mypy",
  "pytest",
  "types-setuptools",
  "types-Pygments",
]

[tool.hatch.envs.types.scripts]
check = "mypy {args:src/protobug tests}"

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_untyped_defs = true

[tool.hatch.envs.hatch-test]
installer = "uv"
extra-args = [
  "--tb=short",
]
randomize = false
parallel = false
retries = 0

[tool.hatch.envs.hatch-test.scripts]
run = "pytest{env:HATCH_TEST_ARGS:} {args}"
run-cov = "echo Code coverage not implemented && exit 1"

[[tool.hatch.envs.hatch-test.matrix]]
python = [
  "3.9",
  "3.10",
  "3.11",
  "3.12",
  "3.13",
]

[tool.hatch.envs.hatch-static-analysis]
installer = "uv"
dependencies = ["ruff==0.11.*"]
config-path = "pyproject.toml"

[tool.ruff.lint]
select = [
  "C4",
  "E",
  "F",
  "I",
  "PLC",
  "PLE",
  "PLW",
  "PYI",
  "RET",
  "RUF",
  "SIM",
  "TD",
  "TID",
  "W",
]
ignore = [
  "TD003",
  "E402",
  "E501",
  "PLR09",
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
force-single-line = true

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
