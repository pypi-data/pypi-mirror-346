# see documentation, e.g.
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://www.python.org/dev/peps/pep-0621/

[build-system]
requires = ["setuptools>=64.0.0", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
authors = [
    { name = "Christiaan Meijer", email = "c.meijer@esciencecenter.nl" }
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "dask",
    "tqdm",
    "numpy",
    "pandas",
    "rasterio",
    "scikit-learn",
    "torch",
    "torchvision",
    "torchinfo",
    "geopandas",
    "rioxarray",
    "huggingface_hub",
    "xgboost",
    "wget",
]
description = "Segment (georeferenced) raster data in an interactive fashion. Retrain models in seconds. Only small amounts of labeled data necessary because of our use of pretrained base models as feature extractors."
keywords = ["Segmentation"," UNet"," Active learning"," Drone"," Raster data"," Spatial data"]
license = {file = "LICENSE"}
name = "pycoeus"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10"
version = "0.6.0"

[project.optional-dependencies]
train = [
    "torch",
    "pillow",
    "torchvision",
    "mlflow",
]
dev = [
    "build",  # build is not only used in publishing (below), but also in the template's test suite
    "bump-my-version",
    "coverage [toml]",
    "pytest",
    "pytest-cov",
    "ruff",
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-autoapi",
    "tox",
    "myst_parser",
]
docs = [
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx-autoapi",
    "myst_parser",
]
publishing = [
    "build",
    "twine",
    "wheel",
]

[project.urls]
Repository = "https://github.com/DroneML/pycoeus"
Issues = "https://github.com/DroneML/pycoeus/issues"
ReadTheDocs = "https://pycoeus.readthedocs.io"


[tool.pytest.ini_options]
addopts = "--cov --cov-report term"
testpaths = [
    "tests",
]
markers = [
    "downloader: marks tests that download data from the internet",
    "slow: marks tests that are slow",
]

[tool.coverage.run]
branch = true
source = ["src/pycoeus"]
command_line = "-m pytest"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,py312
skip_missing_interpreters = true
[testenv]
commands = pytest
extras = dev
"""

[tool.ruff]
line-length = 120
output-format = "concise"
extend-exclude = ["docs"]

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Enable Pyflakes `E` and `F` codes by default.
select = ["ALL"]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ANN204", # Missing return type annotation for special (dunder) method
    "FBT",    # Using boolean function arguments
    "TD",     # TODOs
    "FIX001", # Resolve FIXMEs
    "FIX002", # Resolve TODOs
    "B028",   # No explicit `stacklevel` keyword argument found in warning
    # No docstrings required in the following cases
    "D100", # Missing module docstring
    "D104", # Missing public package docstring
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
]
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
# Tests can ignore a few extra rules
"tests/**.py" = [
    "ANN201", # Missing return type annotation for public function
    "PT011",  # Missing `match` parameter in `pytest.raises()`
    "S101",   # Use of assert is detected
]

[tool.ruff.lint.isort]
known-first-party = ["pycoeus"]
force-single-line = true
no-lines-before = ["future","standard-library","third-party","first-party","local-folder"]

[tool.bumpversion]
current_version = "0.6.0"

[[tool.bumpversion.files]]
filename = "src/pycoeus/__init__.py"

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[[tool.bumpversion.files]]
filename = "CITATION.cff"

[[tool.bumpversion.files]]
filename = "docs/conf.py"
