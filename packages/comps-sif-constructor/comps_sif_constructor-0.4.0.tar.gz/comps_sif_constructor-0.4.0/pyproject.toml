[project]
name = "comps-sif-constructor"
version = "0.4.0"
description = "Create a SIF file from a Singularity definition file for COMPS"
authors = [
  { name="Katherine Rosenfeld"},
  { name="Kurt Frey"}
]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "backoff>=2.2.1",
    "click>=8.1.8",
    "coloredlogs>=15.0.1",
    "diskcache>=5.6.3",
    "filelock>=3.18.0",
    "future>=1.0.0",
    "jinja2>=3.1.6",
    "more-itertools>=10.7.0",
    "numpy>=2.0.2",
    "packaging>=25.0",
    "pandas>=2.2.3",
    "pluggy>=1.5.0",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "tqdm>=4.67.1",
    "xdg>=6.0.0",
]
license = "Apache-2.0"


[project.scripts]
comps_sif_constructor = "comps_sif_constructor.main:main"

[project.entry-points.idmtools_experiment]
idmtools_experiment = "idmtools.entities.experiment:ExperimentSpecification"

[project.entry-points.idmtools_task]
idmtools_task_command = "idmtools.entities.command_task:CommandTaskSpecification"
idmtools_task_docker  = "idmtools.core.docker_task:DockerTaskSpecification"

[project.entry-points.idmtools_hooks]
idmtools_add_git_tag            = "idmtools.plugins.git_commit"
idmtools_id_generate_uuid       = "idmtools.plugins.uuid_generator"
idmtools_id_generate_item_sequence = "idmtools.plugins.item_sequence"

[project.entry-points.idmtools_platform]
idmtools_platform_comps = "idmtools_platform_comps.plugin_info:COMPSPlatformSpecification"
idmtools_platform_ssmt = "idmtools_platform_comps.plugin_info:SSMTPlatformSpecification"


[build-system]
requires = ["hatchling>=1.11.0"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["src"]
exclude = ["src/.*"]

[tool.hatch.build.targets.wheel]
packages = ["src/comps_sif_constructor", "src/idmtools", "src/idmtools_models", "src/idmtools_platform_comps", "src/COMPS"]

[dependency-groups]
dev = [
    "bump-my-version>=1.1.2",
]

[tool.bumpversion]
current_version = "0.4.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "src/comps_sif_constructor/version.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = 'src/comps_sif_constructor/version.py'
search = "__versiondate__ = '\\d{{4}}-\\d{{2}}-\\d{{2}}'"
replace = "__versiondate__ = '{now:%Y-%m-%d}'"
regex = true
