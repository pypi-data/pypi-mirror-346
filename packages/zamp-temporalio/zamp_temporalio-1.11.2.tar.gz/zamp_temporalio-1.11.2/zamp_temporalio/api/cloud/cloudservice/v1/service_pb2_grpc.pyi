"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc

import grpc

import zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2

class CloudServiceStub:
    """WARNING: This service is currently experimental and may change in
    incompatible ways.
    """

    def __init__(self, channel: grpc.Channel) -> None: ...
    GetUsers: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUsersRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUsersResponse,
    ]
    """Gets all known users"""
    GetUser: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserResponse,
    ]
    """Get a user"""
    CreateUser: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateUserRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateUserResponse,
    ]
    """Create a user"""
    UpdateUser: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateUserRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateUserResponse,
    ]
    """Update a user"""
    DeleteUser: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteUserRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteUserResponse,
    ]
    """Delete a user"""
    SetUserNamespaceAccess: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.SetUserNamespaceAccessRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.SetUserNamespaceAccessResponse,
    ]
    """Set a user's access to a namespace"""
    GetAsyncOperation: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetAsyncOperationRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetAsyncOperationResponse,
    ]
    """Get the latest information on an async operation"""
    CreateNamespace: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNamespaceRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNamespaceResponse,
    ]
    """Create a new namespace"""
    GetNamespaces: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespacesRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespacesResponse,
    ]
    """Get all namespaces"""
    GetNamespace: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceResponse,
    ]
    """Get a namespace"""
    UpdateNamespace: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNamespaceRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNamespaceResponse,
    ]
    """Update a namespace"""
    RenameCustomSearchAttribute: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.RenameCustomSearchAttributeRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.RenameCustomSearchAttributeResponse,
    ]
    """Rename an existing customer search attribute"""
    DeleteNamespace: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNamespaceRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNamespaceResponse,
    ]
    """Delete a namespace"""
    FailoverNamespaceRegion: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.FailoverNamespaceRegionRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.FailoverNamespaceRegionResponse,
    ]
    """Failover a multi-region namespace"""
    AddNamespaceRegion: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.AddNamespaceRegionRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.AddNamespaceRegionResponse,
    ]
    """Add a new region to a namespace"""
    GetRegions: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetRegionsRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetRegionsResponse,
    ]
    """Get all regions"""
    GetRegion: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetRegionRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetRegionResponse,
    ]
    """Get a region"""
    GetApiKeys: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetApiKeysRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetApiKeysResponse,
    ]
    """Get all known API keys"""
    GetApiKey: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetApiKeyRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetApiKeyResponse,
    ]
    """Get an API key"""
    CreateApiKey: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateApiKeyRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateApiKeyResponse,
    ]
    """Create an API key"""
    UpdateApiKey: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateApiKeyRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateApiKeyResponse,
    ]
    """Update an API key"""
    DeleteApiKey: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteApiKeyRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteApiKeyResponse,
    ]
    """Delete an API key"""
    GetNexusEndpoints: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNexusEndpointsRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNexusEndpointsResponse,
    ]
    """Gets nexus endpoints"""
    GetNexusEndpoint: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNexusEndpointRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNexusEndpointResponse,
    ]
    """Get a nexus endpoint"""
    CreateNexusEndpoint: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNexusEndpointRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNexusEndpointResponse,
    ]
    """Create a nexus endpoint"""
    UpdateNexusEndpoint: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNexusEndpointRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNexusEndpointResponse,
    ]
    """Update a nexus endpoint"""
    DeleteNexusEndpoint: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNexusEndpointRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNexusEndpointResponse,
    ]
    """Delete a nexus endpoint"""
    GetUserGroups: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserGroupsRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserGroupsResponse,
    ]
    """Get all user groups"""
    GetUserGroup: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserGroupRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserGroupResponse,
    ]
    """Get a user group"""
    CreateUserGroup: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateUserGroupRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateUserGroupResponse,
    ]
    """Create new a user group"""
    UpdateUserGroup: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateUserGroupRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateUserGroupResponse,
    ]
    """Update a user group"""
    DeleteUserGroup: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteUserGroupRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteUserGroupResponse,
    ]
    """Delete a user group"""
    SetUserGroupNamespaceAccess: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.SetUserGroupNamespaceAccessRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.SetUserGroupNamespaceAccessResponse,
    ]
    """Set a user group's access to a namespace"""
    CreateServiceAccount: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateServiceAccountRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateServiceAccountResponse,
    ]
    """Create a service account."""
    GetServiceAccount: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetServiceAccountRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetServiceAccountResponse,
    ]
    """Get a service account."""
    GetServiceAccounts: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetServiceAccountsRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetServiceAccountsResponse,
    ]
    """Get service accounts."""
    UpdateServiceAccount: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateServiceAccountRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateServiceAccountResponse,
    ]
    """Update a service account."""
    DeleteServiceAccount: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteServiceAccountRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteServiceAccountResponse,
    ]
    """Delete a service account."""
    GetUsage: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUsageRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUsageResponse,
    ]
    """WARNING: Pre-Release Feature
    Get usage data across namespaces
    """
    GetAccount: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetAccountRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetAccountResponse,
    ]
    """Get account information."""
    UpdateAccount: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateAccountRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateAccountResponse,
    ]
    """Update account information."""
    CreateNamespaceExportSink: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNamespaceExportSinkRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNamespaceExportSinkResponse,
    ]
    """Create an export sink"""
    GetNamespaceExportSink: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceExportSinkRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceExportSinkResponse,
    ]
    """Get an export sink"""
    GetNamespaceExportSinks: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceExportSinksRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceExportSinksResponse,
    ]
    """Get export sinks"""
    UpdateNamespaceExportSink: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNamespaceExportSinkRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNamespaceExportSinkResponse,
    ]
    """Update an export sink"""
    DeleteNamespaceExportSink: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNamespaceExportSinkRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNamespaceExportSinkResponse,
    ]
    """Delete an export sink"""
    ValidateNamespaceExportSink: grpc.UnaryUnaryMultiCallable[
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.ValidateNamespaceExportSinkRequest,
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.ValidateNamespaceExportSinkResponse,
    ]
    """Validates an export sink configuration by delivering an empty test file to the specified sink.
    This operation verifies that the sink is correctly configured, accessible, and ready for data export.
    """

class CloudServiceServicer(metaclass=abc.ABCMeta):
    """WARNING: This service is currently experimental and may change in
    incompatible ways.
    """

    @abc.abstractmethod
    def GetUsers(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUsersRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUsersResponse:
        """Gets all known users"""
    @abc.abstractmethod
    def GetUser(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserResponse:
        """Get a user"""
    @abc.abstractmethod
    def CreateUser(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateUserRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateUserResponse:
        """Create a user"""
    @abc.abstractmethod
    def UpdateUser(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateUserRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateUserResponse:
        """Update a user"""
    @abc.abstractmethod
    def DeleteUser(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteUserRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteUserResponse:
        """Delete a user"""
    @abc.abstractmethod
    def SetUserNamespaceAccess(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.SetUserNamespaceAccessRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.SetUserNamespaceAccessResponse:
        """Set a user's access to a namespace"""
    @abc.abstractmethod
    def GetAsyncOperation(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetAsyncOperationRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetAsyncOperationResponse:
        """Get the latest information on an async operation"""
    @abc.abstractmethod
    def CreateNamespace(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNamespaceRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNamespaceResponse:
        """Create a new namespace"""
    @abc.abstractmethod
    def GetNamespaces(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespacesRequest,
        context: grpc.ServicerContext,
    ) -> (
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespacesResponse
    ):
        """Get all namespaces"""
    @abc.abstractmethod
    def GetNamespace(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceResponse:
        """Get a namespace"""
    @abc.abstractmethod
    def UpdateNamespace(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNamespaceRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNamespaceResponse:
        """Update a namespace"""
    @abc.abstractmethod
    def RenameCustomSearchAttribute(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.RenameCustomSearchAttributeRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.RenameCustomSearchAttributeResponse:
        """Rename an existing customer search attribute"""
    @abc.abstractmethod
    def DeleteNamespace(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNamespaceRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNamespaceResponse:
        """Delete a namespace"""
    @abc.abstractmethod
    def FailoverNamespaceRegion(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.FailoverNamespaceRegionRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.FailoverNamespaceRegionResponse:
        """Failover a multi-region namespace"""
    @abc.abstractmethod
    def AddNamespaceRegion(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.AddNamespaceRegionRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.AddNamespaceRegionResponse:
        """Add a new region to a namespace"""
    @abc.abstractmethod
    def GetRegions(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetRegionsRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetRegionsResponse:
        """Get all regions"""
    @abc.abstractmethod
    def GetRegion(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetRegionRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetRegionResponse:
        """Get a region"""
    @abc.abstractmethod
    def GetApiKeys(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetApiKeysRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetApiKeysResponse:
        """Get all known API keys"""
    @abc.abstractmethod
    def GetApiKey(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetApiKeyRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetApiKeyResponse:
        """Get an API key"""
    @abc.abstractmethod
    def CreateApiKey(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateApiKeyRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateApiKeyResponse:
        """Create an API key"""
    @abc.abstractmethod
    def UpdateApiKey(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateApiKeyRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateApiKeyResponse:
        """Update an API key"""
    @abc.abstractmethod
    def DeleteApiKey(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteApiKeyRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteApiKeyResponse:
        """Delete an API key"""
    @abc.abstractmethod
    def GetNexusEndpoints(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNexusEndpointsRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNexusEndpointsResponse:
        """Gets nexus endpoints"""
    @abc.abstractmethod
    def GetNexusEndpoint(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNexusEndpointRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNexusEndpointResponse:
        """Get a nexus endpoint"""
    @abc.abstractmethod
    def CreateNexusEndpoint(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNexusEndpointRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNexusEndpointResponse:
        """Create a nexus endpoint"""
    @abc.abstractmethod
    def UpdateNexusEndpoint(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNexusEndpointRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNexusEndpointResponse:
        """Update a nexus endpoint"""
    @abc.abstractmethod
    def DeleteNexusEndpoint(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNexusEndpointRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNexusEndpointResponse:
        """Delete a nexus endpoint"""
    @abc.abstractmethod
    def GetUserGroups(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserGroupsRequest,
        context: grpc.ServicerContext,
    ) -> (
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserGroupsResponse
    ):
        """Get all user groups"""
    @abc.abstractmethod
    def GetUserGroup(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserGroupRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUserGroupResponse:
        """Get a user group"""
    @abc.abstractmethod
    def CreateUserGroup(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateUserGroupRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateUserGroupResponse:
        """Create new a user group"""
    @abc.abstractmethod
    def UpdateUserGroup(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateUserGroupRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateUserGroupResponse:
        """Update a user group"""
    @abc.abstractmethod
    def DeleteUserGroup(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteUserGroupRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteUserGroupResponse:
        """Delete a user group"""
    @abc.abstractmethod
    def SetUserGroupNamespaceAccess(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.SetUserGroupNamespaceAccessRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.SetUserGroupNamespaceAccessResponse:
        """Set a user group's access to a namespace"""
    @abc.abstractmethod
    def CreateServiceAccount(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateServiceAccountRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateServiceAccountResponse:
        """Create a service account."""
    @abc.abstractmethod
    def GetServiceAccount(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetServiceAccountRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetServiceAccountResponse:
        """Get a service account."""
    @abc.abstractmethod
    def GetServiceAccounts(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetServiceAccountsRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetServiceAccountsResponse:
        """Get service accounts."""
    @abc.abstractmethod
    def UpdateServiceAccount(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateServiceAccountRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateServiceAccountResponse:
        """Update a service account."""
    @abc.abstractmethod
    def DeleteServiceAccount(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteServiceAccountRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteServiceAccountResponse:
        """Delete a service account."""
    @abc.abstractmethod
    def GetUsage(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUsageRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetUsageResponse:
        """WARNING: Pre-Release Feature
        Get usage data across namespaces
        """
    @abc.abstractmethod
    def GetAccount(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetAccountRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetAccountResponse:
        """Get account information."""
    @abc.abstractmethod
    def UpdateAccount(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateAccountRequest,
        context: grpc.ServicerContext,
    ) -> (
        zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateAccountResponse
    ):
        """Update account information."""
    @abc.abstractmethod
    def CreateNamespaceExportSink(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNamespaceExportSinkRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.CreateNamespaceExportSinkResponse:
        """Create an export sink"""
    @abc.abstractmethod
    def GetNamespaceExportSink(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceExportSinkRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceExportSinkResponse:
        """Get an export sink"""
    @abc.abstractmethod
    def GetNamespaceExportSinks(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceExportSinksRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.GetNamespaceExportSinksResponse:
        """Get export sinks"""
    @abc.abstractmethod
    def UpdateNamespaceExportSink(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNamespaceExportSinkRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.UpdateNamespaceExportSinkResponse:
        """Update an export sink"""
    @abc.abstractmethod
    def DeleteNamespaceExportSink(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNamespaceExportSinkRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.DeleteNamespaceExportSinkResponse:
        """Delete an export sink"""
    @abc.abstractmethod
    def ValidateNamespaceExportSink(
        self,
        request: zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.ValidateNamespaceExportSinkRequest,
        context: grpc.ServicerContext,
    ) -> zamp_temporalio.api.cloud.cloudservice.v1.request_response_pb2.ValidateNamespaceExportSinkResponse:
        """Validates an export sink configuration by delivering an empty test file to the specified sink.
        This operation verifies that the sink is correctly configured, accessible, and ready for data export.
        """

def add_CloudServiceServicer_to_server(
    servicer: CloudServiceServicer, server: grpc.Server
) -> None: ...
