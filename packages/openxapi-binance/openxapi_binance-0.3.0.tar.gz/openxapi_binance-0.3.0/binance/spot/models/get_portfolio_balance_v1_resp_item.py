# coding: utf-8

"""
    Binance Spot API

    OpenAPI specification for Binance exchange - Spot API

    The version of the OpenAPI document: 0.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class GetPortfolioBalanceV1RespItem(BaseModel):
    """
    GetPortfolioBalanceV1RespItem
    """ # noqa: E501
    asset: Optional[StrictStr] = None
    cm_unrealized_pnl: Optional[StrictStr] = Field(default=None, alias="cmUnrealizedPNL")
    cm_wallet_balance: Optional[StrictStr] = Field(default=None, alias="cmWalletBalance")
    cross_margin_asset: Optional[StrictStr] = Field(default=None, alias="crossMarginAsset")
    cross_margin_borrowed: Optional[StrictStr] = Field(default=None, alias="crossMarginBorrowed")
    cross_margin_free: Optional[StrictStr] = Field(default=None, alias="crossMarginFree")
    cross_margin_interest: Optional[StrictStr] = Field(default=None, alias="crossMarginInterest")
    cross_margin_locked: Optional[StrictStr] = Field(default=None, alias="crossMarginLocked")
    negative_balance: Optional[StrictStr] = Field(default=None, alias="negativeBalance")
    option_equity: Optional[StrictStr] = Field(default=None, alias="optionEquity")
    option_wallet_balance: Optional[StrictStr] = Field(default=None, alias="optionWalletBalance")
    total_wallet_balance: Optional[StrictStr] = Field(default=None, alias="totalWalletBalance")
    um_unrealized_pnl: Optional[StrictStr] = Field(default=None, alias="umUnrealizedPNL")
    um_wallet_balance: Optional[StrictStr] = Field(default=None, alias="umWalletBalance")
    update_time: Optional[StrictInt] = Field(default=None, alias="updateTime")
    __properties: ClassVar[List[str]] = ["asset", "cmUnrealizedPNL", "cmWalletBalance", "crossMarginAsset", "crossMarginBorrowed", "crossMarginFree", "crossMarginInterest", "crossMarginLocked", "negativeBalance", "optionEquity", "optionWalletBalance", "totalWalletBalance", "umUnrealizedPNL", "umWalletBalance", "updateTime"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of GetPortfolioBalanceV1RespItem from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of GetPortfolioBalanceV1RespItem from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "asset": obj.get("asset"),
            "cmUnrealizedPNL": obj.get("cmUnrealizedPNL"),
            "cmWalletBalance": obj.get("cmWalletBalance"),
            "crossMarginAsset": obj.get("crossMarginAsset"),
            "crossMarginBorrowed": obj.get("crossMarginBorrowed"),
            "crossMarginFree": obj.get("crossMarginFree"),
            "crossMarginInterest": obj.get("crossMarginInterest"),
            "crossMarginLocked": obj.get("crossMarginLocked"),
            "negativeBalance": obj.get("negativeBalance"),
            "optionEquity": obj.get("optionEquity"),
            "optionWalletBalance": obj.get("optionWalletBalance"),
            "totalWalletBalance": obj.get("totalWalletBalance"),
            "umUnrealizedPNL": obj.get("umUnrealizedPNL"),
            "umWalletBalance": obj.get("umWalletBalance"),
            "updateTime": obj.get("updateTime")
        })
        return _obj


