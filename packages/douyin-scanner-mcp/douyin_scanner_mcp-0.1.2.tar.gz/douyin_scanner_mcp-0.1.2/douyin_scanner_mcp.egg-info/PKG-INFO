Metadata-Version: 2.4
Name: douyin-scanner-mcp
Version: 0.1.2
Summary: MCP client for Douyin Scanner with integrated scanning capabilities
Author: Your Name
Author-email: Your Name <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/yourusername/douyin-scanner-mcp
Project-URL: Bug Tracker, https://github.com/yourusername/douyin-scanner-mcp/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: requests>=2.31.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: rich>=13.6.0
Requires-Dist: typer>=0.9.0
Requires-Dist: httpx>=0.24.0
Requires-Dist: aiohttp>=3.8.5
Requires-Dist: asyncio>=3.4.3
Requires-Dist: fastmcp>=0.1.0
Requires-Dist: playwright>=1.32.0
Dynamic: author

# Douyin Scanner MCP

抖音账号扫描 MCP 客户端，集成了账号数据扫描功能，**不再需要单独的 HTTP 服务器**。

## 功能特点

- 基于 Playwright 的浏览器自动化，支持抖音账号数据扫描
- 无需额外配置和启动 HTTP 服务器
- 支持 MCP 标准通信协议
- 缓存扫描结果，提高效率

## 安装

### 开发模式安装

```bash
# 克隆仓库
git clone https://your-repository-url/douyin-scanner.git
cd douyin-scanner/account_scan/client

# 安装依赖
pip install -e .

# 初始化 Playwright (首次安装需要)
playwright install
```

### 从 PyPI 安装 (一旦发布)

```bash
pip install douyin-scanner-mcp

# 初始化 Playwright (首次安装需要)
playwright install
```

## 使用方法

### 作为 Cursor MCP 工具使用

在 Cursor 的 MCP 配置文件中添加以下配置：

```json
{
  "mcpServers": {
    "douyin-scanner": {
      "command": "uvx",
      "args": [
        "douyin-scanner-mcp"
      ],
      "env": {
        "BROWSER_TYPE": "chromium",
        "BROWSER_HEADLESS": "1"
      }
    }
  }
}
```

环境变量配置说明：

| 环境变量 | 说明 | 默认值 |
|---------|------|-------|
| BROWSER_TYPE | 浏览器类型 (chromium, firefox, webkit) | chromium |
| BROWSER_HEADLESS | 无头模式 (1: 启用, 0: 禁用) | 1 |
| BROWSER_TIMEOUT | 浏览器超时时间 (毫秒) | 60000 |
| DOUYIN_SCAN_MAX_VIDEOS | 最大扫描视频数 | 100 |
| CONCURRENT_LIMIT | 并发扫描限制 | 3 |
| LOG_LEVEL | 日志级别 | INFO |

### 命令行使用

```bash
# 使用 stdio 通信方式运行
douyin-scanner-mcp

# 使用其他通信方式
douyin-scanner-mcp --transport tcp --host 127.0.0.1 --port 9000

# 启用调试模式
douyin-scanner-mcp --debug
```

## 工具列表

该 MCP 客户端提供以下工具：

1. `scan_douyin_account` - 扫描单个抖音账号
2. `scan_multiple_accounts` - 批量扫描多个抖音账号
3. `get_server_info` - 获取服务信息
4. `get_last_result` - 获取最后一次扫描结果

## 发布到 PyPI

1. 更新版本号 `__version__` in `douyin_scanner_mcp/__init__.py`
2. 构建包：
```bash
python -m build
```
3. 上传到 PyPI：
```bash
python -m twine upload dist/*
```

## 贡献

欢迎提交 Issue 和 Pull Request。

## 许可证

MIT 
