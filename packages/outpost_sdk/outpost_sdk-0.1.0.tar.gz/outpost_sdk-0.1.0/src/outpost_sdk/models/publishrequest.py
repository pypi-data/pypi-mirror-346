"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from outpost_sdk.types import BaseModel
from typing import Any, Dict, Optional
from typing_extensions import NotRequired, TypedDict


class PublishRequestTypedDict(TypedDict):
    tenant_id: str
    r"""The ID of the tenant to publish for."""
    topic: str
    r"""Topic name for the event."""
    eligible_for_retry: bool
    r"""Should event delivery be retried on failure."""
    data: Dict[str, Any]
    r"""Any JSON payload for the event data."""
    destination_id: NotRequired[str]
    r"""Optional. Route event to a specific destination."""
    metadata: NotRequired[Dict[str, str]]
    r"""Any key-value string pairs for metadata."""


class PublishRequest(BaseModel):
    tenant_id: str
    r"""The ID of the tenant to publish for."""

    topic: str
    r"""Topic name for the event."""

    eligible_for_retry: bool
    r"""Should event delivery be retried on failure."""

    data: Dict[str, Any]
    r"""Any JSON payload for the event data."""

    destination_id: Optional[str] = None
    r"""Optional. Route event to a specific destination."""

    metadata: Optional[Dict[str, str]] = None
    r"""Any key-value string pairs for metadata."""
