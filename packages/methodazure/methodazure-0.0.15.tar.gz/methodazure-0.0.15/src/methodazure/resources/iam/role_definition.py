# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .permission import Permission
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class RoleDefinition(UniversalBaseModel):
    """
    An Azure Role definition describes certain actions that can be performed on resource(s). This type is mirrored
    after the RoleDefinition type: https://pkg.go.dev/github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/authorization/armauthorization/v2#RoleDefinition
    """

    id: str
    name: str
    type: str
    assignable_scopes: typing.Optional[typing.List[str]] = pydantic.Field(alias="assignableScopes", default=None)
    description: typing.Optional[str] = None
    role_name: typing.Optional[str] = pydantic.Field(alias="roleName", default=None)
    role_type: typing.Optional[str] = pydantic.Field(alias="roleType", default=None)
    permissions: typing.Optional[typing.List[Permission]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
