name: Build and Release

on: push

jobs:
  build:
    name: >-
      Build and Package 📦
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/release' }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
          cache: "pip"
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install the project
        run: pip install .
      
      - name: Build a binary wheel and a source tarball
        if: matrix.os == 'ubuntu-latest'
        run: |
          uv build
      
      - name: Store the distribution packages
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          overwrite: true

      - name: Build Executable with Nuitka
        uses: Nuitka/Nuitka-Action@main
        env:
          DEBUG_COMPILATION: yes
        with:
          nuitka-version: main
          script-name: ytm2spt.py
          onefile: false
          # enable-plugins: pyside6
          # user-package-configuration-file: ytmusicapi.nuitka-package.config.yaml
      
      - name: Build Windows Installer
        if: matrix.os == 'windows-latest'
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: windows-installer.iss

      - id: runnerOS
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ runner.os }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ytm2spt-${{ steps.runnerOS.outputs.lowercase }}-build
          path: | # match what's created for the 3 OSes
            build/*.exe
            build/*.bin
            build/*.app/**/*
          overwrite: true

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ytm2spt
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  release:
    name: >-
      Create a GitHub Release 🚀
    needs:
    - build
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
    - run: ls -R

    - name: Add Executable Permissions
      run: |
        chmod +x *build/*.bin *build/*.exe *build/*.app/Contents/MacOS/*
    
    - name: Zip Windows Executable
      run: |
        cd *windows-build
        zip -9 ytm2spt-windows.zip *-installer.exe
    
    - name: Zip Linux Executable
      run: |
        cd *linux-build
        tar -cavf ytm2spt-linux.tar.gz *.bin
    
    - name: Zip MacOS Executable
      run: |
        cd *macos-build
        zip -r -9 ytm2spt-macos.zip *.app

    - name: GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        generate_release_notes: true
        files: |
          *build/ytm2spt-windows.zip
          *build/ytm2spt-linux.tar.gz
          *build/ytm2spt-macos.zip
          dist/*
