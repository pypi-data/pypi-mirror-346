from typing import Optional, TypedDict
from bruce_models import BruceApi

class Scenario:
    """
    Represents a Scenario in Nextspace.
    You will find the JScenario data-model and all related API communication here.
    """

    class JScenario(TypedDict):
        """
        Represents the JSON structure of a Scenario.
        """

        # Unique numeric identity of the record.
        # Generated by the database.
        ID: Optional[int]
        # (30) Unique keyword that is used for identification of the record when referred to in URL.
        Key: str
        # (120) User friendly name to display in UI.
        DisplayName: str

    @staticmethod
    def get_by_id(api: BruceApi, scenario_id: int = 0) -> JScenario:
        """
        Retrieves a Scenario by its ID.
        """
        if not scenario_id or scenario_id < 1:
            raise ValueError("A valid scenario ID is required.")
        return api.GET(f"scenario/{scenario_id}")
    
    @staticmethod
    def get_by_key(api: BruceApi, scenario_key: str = "") -> JScenario:
        """
        Retrieves a Scenario by its Key.
        """
        if not scenario_key:
            raise ValueError("A valid scenario Key is required.")
        return api.GET(f"scenario/key/{scenario_key}")