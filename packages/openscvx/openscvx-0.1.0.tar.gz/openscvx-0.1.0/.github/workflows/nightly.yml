name: Nightly build â†’ TestPyPI

permissions:
  contents: write

on:
  push:
    branches:
      - main
  # Keep nightly schedule as a fallback
  schedule:
    - cron: '0 0 * * *'

concurrency:
  group: nightly-build
  cancel-in-progress: true

jobs:
  nightly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install build tools
        run: pip install --upgrade pip build twine setuptools-scm
      - name: Build artifacts
        run: |
          rm -rf dist
          python -m build

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          twine upload \
            --repository testpypi \
            --non-interactive \
            --verbose \
            --skip-existing \
            dist/*

      - name: Package source archive
        run: |
          git archive \
            --format zip \
            --prefix openscvx-nightly/ \
            --output dist/openscvx-nightly.zip \
            HEAD
          git archive \
            --format tar.gz \
            --prefix openscvx-nightly/ \
            --output dist/openscvx-nightly.tar.gz \
            HEAD

      - name: Find last semver
        run: echo "LAST_SEMVER=$(git describe --tags --match 'v*.*.*' --abbrev=0)" >> $GITHUB_ENV

      - name: Create Release
        run: |
          gh release create nightly \
            --draft \
            --prerelease \
            --generate-notes \
            --notes-start-tag "$LAST_SEMVER"
          gh release upload nightly dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
