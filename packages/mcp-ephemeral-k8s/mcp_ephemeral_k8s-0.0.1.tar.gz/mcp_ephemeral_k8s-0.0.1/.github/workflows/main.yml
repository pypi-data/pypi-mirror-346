name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Run checks
        run: make check

  tests-and-type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Clean up docker storage
        run: docker system prune -f

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create k8s Kind Cluster
        if: ${{ matrix.python-version == '3.13' }}
        uses: helm/kind-action@v1
        with:
          cluster_name: kind-chart-testing

      - name: Docker build the proxy
        if: ${{ matrix.python-version == '3.13' }}
        run: docker build -t ghcr.io/bobmerkus/mcp-ephemeral-k8s-proxy:latest -f dockerfiles/mcp-ephemeral-k8s-proxy/Dockerfile .

      - name: Load the proxy image into the cluster
        if: ${{ matrix.python-version == '3.13' }}
        run: kind load docker-image ghcr.io/bobmerkus/mcp-ephemeral-k8s-proxy:latest --name kind-chart-testing

      - name: Run tests (unit only)
        if: ${{ matrix.python-version != '3.13' }}
        run: uv run python -m pytest -m unit tests --cov --cov-config=pyproject.toml --cov-report=xml

      - name: Run tests (unit and integration)
        if: ${{ matrix.python-version == '3.13' }}
        run: uv run python -m pytest tests --cov --cov-config=pyproject.toml --cov-report=xml

      - name: Check typing
        run: uv run mypy

      - name: Upload coverage reports to Codecov with GitHub Action on Python 3.13
        uses: codecov/codecov-action@v5
        if: ${{ matrix.python-version == '3.13' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Check if documentation can be built
        run: uv run mkdocs build -s


  build-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for main image
        id: meta-main
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Extract metadata for proxy image
        id: meta-proxy
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-proxy

      - name: Build main Docker image
        id: build-main
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ steps.meta-main.outputs.tags }}
          labels: ${{ steps.meta-main.outputs.labels }}

      - name: Build proxy Docker image
        id: build-proxy
        uses: docker/build-push-action@v6
        with:
          context: .
          file: dockerfiles/mcp-ephemeral-k8s-proxy/Dockerfile
          push: false
          tags: ${{ steps.meta-proxy.outputs.tags }}
          labels: ${{ steps.meta-proxy.outputs.labels }}
