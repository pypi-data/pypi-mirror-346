[project]
name = "mcp-ephemeral-k8s"
version = "v0.0.1-beta.3"
description = "Python implementation to spawn ephemeral Model Context Protocol (MCP) servers using the kubernetes API."
authors = [{ name = "Bob Merkus", email = "bob.merkus@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.11,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fastapi[standard]>=0.115.12",
    "fastmcp>=2.2.7",
    "kubernetes>=32.0.1",
    "pydantic>=2.11.4",
]

[project.urls]
Homepage = "https://BobMerkus.github.io/mcp-ephemeral-k8s/"
Repository = "https://github.com/BobMerkus/mcp-ephemeral-k8s"
Documentation = "https://BobMerkus.github.io/mcp-ephemeral-k8s/"

[project.scripts]
mcp-ephemeral-k8s = "mcp_ephemeral_k8s.app.mcp:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
files = ["src"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.ruff]
target-version = "py313"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.23.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.11.5",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    "kubernetes-stubs>=22.6.0.post1",
    "pytest-asyncio>=0.26.0",
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
]
