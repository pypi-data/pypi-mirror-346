version: 2.1
jobs:
  test:
    parameters:
      python:
        type: string
        description: Python major.minor version to use (e.g. "3.7", "3.11")
      sqlalchemy:
        type: string
        description: SQLAlchemy version to use (e.g. "2.0.36", "1.4").
    working_directory: ~/circleci
    resource_class: large
    docker:
      - image: ghcr.io/astral-sh/uv:0.5.7-python<<parameters.python>>-alpine
      - image: cimg/postgres:12.12
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: root
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: cimg/mariadb:10.11
        environment:
          MYSQL_DATABASE: root
          MYSQL_USER: root
          MYSQL_PASSWORD: ""
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

    environment:
      SQLALCHEMY_SILENCE_UBER_WARNING: 1 # Silence sqlalchemy 2.0 warnings
      UV_LOCKED: 1
      UV_PYTHON_PREFERENCE: only-system

    steps:
      - checkout
      - restore_cache:
          key: uv-<<parameters.python>>
      - run: 
          name: Install non-python deps
          command: |
            apk update --no-cache
            apk add --no-cache curl openssl postgresql16-client mariadb-client make git
            curl -LSsf https://github.com/jwilder/dockerize/releases/download/v0.8.0/dockerize-alpine-linux-amd64-v0.8.0.tar.gz | tar xzf - -C /usr/local/bin
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:5432 -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: create postgres user
          command: psql postgresql://@localhost/root -c 'create role postgres'
      - run:
          name: create mysql user
          command: mysql root -u root -h 127.0.0.1 -e "create user 'root'@'127.0.0.1'; grant all privileges on *.* to 'root'@'127.0.0.1' identified by '';"
      - run:
          name: Check formatting
          command: make lint
      - run:
          name: Test with SQLAlchemy == << parameters.sqlalchemy >>
          command: |
            UV_RUN_ARGS="--with pytest-xdist --with sqlalchemy==<<parameters.sqlalchemy>>" PYTEST_ARGS="-n4" make test
      - store_test_results:
          path: test-reports
      - save_cache:
          key: uv-<<parameters.python>>
          paths:
            - "~/.cache/uv"

  publish:
    working_directory: ~/circleci
    docker:
      - image: ghcr.io/astral-sh/uv:0.5.7-python3.12-alpine
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Bump version, build, install
          command: |
            uv run --no-project --with "toml~=0.10.0" deploy/vbump.py
            uv build
            uv publish dist/* --token "$PYPI_API_TOKEN"

workflows:
  build-then-publish:
    jobs:
      - test:
          matrix:
            parameters:
              python: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
              sqlalchemy: ["1.3.24", "1.4.49", "2.0.36"]
      - publish:
          requires:
            - test
          filters:
            branches:
              only: master
