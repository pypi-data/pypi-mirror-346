[project]
name = "mcp-server-discogs"
version = "0.2.0"
description = "An MCP Server to interact with the discogs API, supports read operations (for the moment)"
readme = "README.md"
license = "BSD-3-Clause"
license-files = ["LICENSE"]
authors = [
    { name = "Konstantin Wolff", email = "konstantin.bc@googlemail.com" }
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Topic :: Utilities",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]

requires-python = ">=3.13"
dependencies = [
    "mcp[cli]>=1.6.0",
    "mcpo>=0.0.13",
    "python3-discogs-client>=2.8",
]

[project.scripts]
mcp-server-discogs = "mcp_server_discogs:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "bandit>=1.8.3",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
    "ruff>=0.11.7",
]

[tool.pytest.ini_options]
#addopts = "--cov=mcp-server-discogs"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests"
]

[tool.mypy]
exclude = [
    "playground.py",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".venv"
]

[tool.ruff]
exclude = [
    "playground.py",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",    # pycodestyles (error)
    "F",    # pyflakes
    "B",    # bugbear
    "B9",
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "I",    # isort
    "UP",   # pyupgrade
    "PIE",  # flake8-pie
    "PGH",  # pygrep-hooks
    "PYI",  # flake8-pyi
    "RUF"
]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.bandit]
exclude_dirs = [
    "playground.py",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "tests",
]
