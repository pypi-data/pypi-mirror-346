[tool.poetry]
name = "construct-tracker"
version = "v1.0.16"
description = "Track and measure constructs, concepts or categories in text documents."
authors = ["Daniel M. Low <daniel.m.low@gmail.com>"]
maintainers = ["Daniel M. Low <daniel.m.low@gmail.com>"]
repository = "https://github.com/danielmlow/construct-tracker"
documentation = "https://danielmlow.github.io/construct-tracker/"
readme = "README.md"
license = "Apache-2.0"
keywords = ["lexicon", "concept", "classification", "NLP", "embeddings", "similarity", "zero shot", "construct", "category", "social sciences", "text"]
packages = [
  {include = "construct_tracker", from = "src"}
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent"
]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
seaborn = ">=0.12.0,<0.13.0"
statsmodels = "~=0.14.2"
litellm = ">=1.35.28,<2.0.0"
dill = ">=0.3.0,<0.4.0"
cython = ">=0.29.24"
spacy = {version = "~=3.7.3", extras = []}
nltk = "~=3.8"
"sentence-transformers" = {version = "~=2.7", extras = []}
numpy = "==1.24.4"
pandas = "==1.5.3"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
pdoc = "~=14.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = ">=22.0.0,<23.0.0"
srsly = "~2.4.0"
pdoc = "^14.6.1"
isort = ">=5.0.0,<6.0.0"
mkdocs = ">=1.0.0,<2.0.0"
pydantic = "~=2.7"
mkdocs-material = ">=8.0.0,<9.0.0"
mkdocstrings = ">=0.18.0,<0.19.0"
pytest = "^8.2"
pytest-mock = "~=3.14"
pytest-cov = "~=5.0"
pytest-testmon = "^2.1.1"
mypy = "~=1.9"
pre-commit = "~=3.7"
ruff = "~=0.3"
codespell = "~=2.3"
poetry-dynamic-versioning = "^1.7.0"

[tool.isort]
profile = "black"  # Or another profile if you're using one
line_length = 88  # Customize based on your project's line length
multi_line_output = 3
include_trailing_comma = true
known_first_party = ["construct_tracker"]  # Replace with your package name
combine_as_imports = true

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
testpaths = [
  "src/tests"
]

[tool.mypy]
ignore_missing_imports = true
plugins = [
  "pydantic.mypy"
]

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv"
]
line-length = 120
indent-width = 4
src = ["src"]
target-version = "py310"

[tool.ruff.lint]
select = ["ANN", "D", "E", "F", "I"]
ignore = [
  "ANN101",  # self should not be annotated.
  "ANN102",  # cls should not be annotated.
  "ANN401",  # type hint should not be Any because defeats the purpose
  "D200",  # One-line docstring should fit on one line
  "D202",  # No blank lines allowed after function docstring (found 1)
  "D205",  # 1 blank line required between summary line and description
  "D206",  # Docstring should be indented with spaces, not tabs
  "D212",  # Multi-line docstring summary should start at the first line
  "D415",  # First line should end with a period, question mark, or exclamation point
  "E501",  # line too long
  "F541"  # f-string without any placeholders
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"src/tests/**/*.py" = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
bump = true  # false: no automatic version bumps on each commit
style = "pep440"
pattern = "default-unprefixed"

[tool.codespell]
skip = [
  "poetry.lock",
  "docs_style/pdoc-theme/syntax-highlighting.css",
  "*.ipynb"
]
ignore-words-list = ["construct-tracker", "construct_tracker", "nd", "astroid", "wil", "te"]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"
