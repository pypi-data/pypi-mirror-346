"""
This type stub file was generated by pyright.
"""

import datetime
from typing import Dict, Optional
from pymilvus.grpc_gen import common_pb2
from .singleton_utils import Singleton

ConsistencyLevel = common_pb2.ConsistencyLevel
class GTsDict(metaclass=Singleton):
    def __init__(self) -> None:
        ...
    
    def __repr__(self) -> str:
        ...
    
    def update(self, collection: int, ts: int): # -> None:
        ...
    
    def get(self, collection: int):
        ...
    


def update_collection_ts(collection: int, ts: int): # -> None:
    ...

def update_ts_on_mutation(collection: int): # -> Callable[..., None]:
    ...

def get_collection_ts(collection: int):
    ...

def get_collection_timestamp(collection: int): # -> float:
    ...

def get_collection_datetime(collection: int, tz: Optional[datetime.timezone] = ...): # -> datetime:
    ...

def get_eventually_ts(): # -> Literal[1]:
    ...

def get_bounded_ts(): # -> Literal[2]:
    ...

def construct_guarantee_ts(collection_name: str, kwargs: Dict): # -> bool:
    ...

