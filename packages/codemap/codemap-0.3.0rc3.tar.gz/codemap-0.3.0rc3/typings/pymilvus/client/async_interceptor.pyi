"""
This type stub file was generated by pyright.
"""

from typing import Callable, List, Union
from grpc.aio import ClientCallDetails, StreamStreamClientInterceptor, StreamUnaryClientInterceptor, UnaryStreamClientInterceptor, UnaryUnaryClientInterceptor
from grpc.aio._call import StreamStreamCall, StreamUnaryCall, UnaryStreamCall, UnaryUnaryCall
from grpc.aio._typing import RequestIterableType, RequestType, ResponseIterableType, ResponseType

class _GenericAsyncClientInterceptor(UnaryUnaryClientInterceptor, UnaryStreamClientInterceptor, StreamUnaryClientInterceptor, StreamStreamClientInterceptor):
    def __init__(self, interceptor_function: Callable) -> None:
        ...
    
    async def intercept_unary_unary(self, continuation: Callable[[ClientCallDetails, RequestType], UnaryUnaryCall], client_call_details: ClientCallDetails, request: RequestType) -> Union[UnaryUnaryCall, ResponseType]:
        ...
    
    async def intercept_unary_stream(self, continuation: Callable[[ClientCallDetails, RequestType], UnaryStreamCall], client_call_details: ClientCallDetails, request: RequestType) -> Union[ResponseIterableType, UnaryStreamCall]:
        ...
    
    async def intercept_stream_unary(self, continuation: Callable[[ClientCallDetails, RequestType], StreamUnaryCall], client_call_details: ClientCallDetails, request_iterator: RequestIterableType) -> StreamUnaryCall:
        ...
    
    async def intercept_stream_stream(self, continuation: Callable[[ClientCallDetails, RequestType], StreamStreamCall], client_call_details: ClientCallDetails, request_iterator: RequestIterableType) -> Union[ResponseIterableType, StreamStreamCall]:
        ...
    


def async_header_adder_interceptor(headers: List[str], values: Union[List[str], List[bytes]]): # -> _GenericAsyncClientInterceptor:
    ...

