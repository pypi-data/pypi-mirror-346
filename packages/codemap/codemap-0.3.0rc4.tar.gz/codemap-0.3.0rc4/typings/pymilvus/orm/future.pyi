"""
This type stub file was generated by pyright.
"""

from typing import Any
from pymilvus.client.search_result import SearchResult

class BaseFuture:
    def __init__(self, future: Any) -> None:
        ...
    
    def result(self) -> Any:
        """Return the result from future object.

        It's a synchronous interface. It will wait executing until
        server respond or timeout occur(if specified).
        """
        ...
    
    def on_response(self, res: Any): # -> Any:
        ...
    
    def cancel(self): # -> Any | None:
        """Cancel the request."""
        ...
    
    def done(self): # -> Any | None:
        """Wait for request done."""
        ...
    


class _EmptySearchFuture:
    def result(self) -> SearchResult:
        ...
    
    def cancel(self) -> None:
        ...
    
    def done(self) -> None:
        ...
    


class MutationFuture(BaseFuture):
    def on_response(self, res: Any): # -> MutationResult:
        ...
    


class SearchFuture(BaseFuture):
    """SearchFuture of async already returns SearchResult, add BaseFuture
    functions into async.SearchFuture
    """
    ...


