# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .plot_info_x_axis_min import PlotInfoXAxisMin
from .plot_info_x_axis_max import PlotInfoXAxisMax
from .plot_info_x_axis_tick_values_item import PlotInfoXAxisTickValuesItem
from .plot_info_y_axis_min import PlotInfoYAxisMin
from .plot_info_y_axis_max import PlotInfoYAxisMax
from .plot_info_y_axis_tick_values_item import PlotInfoYAxisTickValuesItem
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class PlotInfo(UniversalBaseModel):
    """
    Pydantic class for Plot information to extract
    """

    x_axis_name: typing.Optional[str] = None
    x_axis_min: typing.Optional[PlotInfoXAxisMin] = None
    x_axis_max: typing.Optional[PlotInfoXAxisMax] = None
    x_axis_tick_values: typing.Optional[typing.List[PlotInfoXAxisTickValuesItem]] = None
    x_axis_unit: typing.Optional[str] = None
    x_scale: typing.Optional[str] = None
    y_axis_name: typing.Optional[str] = None
    y_axis_min: typing.Optional[PlotInfoYAxisMin] = None
    y_axis_max: typing.Optional[PlotInfoYAxisMax] = None
    y_axis_tick_values: typing.Optional[typing.List[PlotInfoYAxisTickValuesItem]] = None
    y_axis_unit: typing.Optional[str] = None
    y_scale: typing.Optional[str] = None
    num_of_lines: typing.Optional[int] = None
    black_gray_line: typing.Optional[bool] = None
    grid_lines: typing.Optional[bool] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
