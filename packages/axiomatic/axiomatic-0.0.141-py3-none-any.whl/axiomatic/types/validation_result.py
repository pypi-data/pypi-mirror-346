# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class ValidationResult(UniversalBaseModel):
    """
    Represents the validation result for an expression
    """

    is_valid: bool = pydantic.Field()
    """
    Whether the validation passed
    """

    message: str = pydantic.Field()
    """
    Validation message or error description
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
