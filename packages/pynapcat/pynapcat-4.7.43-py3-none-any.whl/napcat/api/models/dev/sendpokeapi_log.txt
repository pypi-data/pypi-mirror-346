Based on the OpenAPI specification:

-   **Request (`SendPokeReq`):**
    -   Requires `user_id` which can be `number` or `string`. Using `int | str`.
    -   Optionally takes `group_id` which can be `number` or `string`. Using `int | str | None` with a default of `None`.
    -   Added descriptions for both fields using `Field`.
-   **Response (`SendPokeRes`):**
    -   Defines fields: `status`, `retcode`, `data`, `message`, `wording`, `echo`.
    -   `status` has a constant value `ok`. Using `Literal["ok"]`.
    -   `retcode` is a `number`. Using `int`.
    -   `data` is explicitly overridden to `null` in the response schema. Using `None`.
    -   `message` and `wording` are `string`. Using `str`.
    -   `echo` is `string` and nullable. Using `str | None` with a default of `None`.
    -   Added descriptions for all fields using `Field`.
    -   All specified fields are marked as required in the response schema.
-   Removed unused import `typing.Any`.
-   Ensured all type hints follow the guidelines (`|` for Union/Optional, built-in types).
-   Kept the `SendPokeAPI` structure as it seems correct for the framework.