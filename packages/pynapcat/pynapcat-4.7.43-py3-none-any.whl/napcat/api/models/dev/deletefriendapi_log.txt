Based on the provided OpenAPI specification:
1. Removed unused `logging` and `typing.Any` imports.
2. Added `typing.Literal` for the `status` field with a constant value of 'ok'.
3. Defined `DeleteFriendReq` with fields `user_id`, `friend_id`, `temp_block`, and `temp_both_del`.
4. Used `int | str | None` for `user_id` and `friend_id` as they are not explicitly marked as required in the request body schema's `required` list, and follow the `oneOf` integer/string type.
5. Used `bool` for `temp_block` and `temp_both_del` and marked them as required using `Field(...)`.
6. Added descriptions to all request fields using `Field`.
7. Defined `DeleteFriendRes` with top-level fields `status`, `retcode`, `data`, `message`, `wording`, and `echo`.
8. Created an inner class `DeleteFriendRes.Data` to model the structure of the `data` field, containing `result` (int) and `errMsg` (str), both marked as required.
9. Used `Literal["ok"]` for the `status` field.
10. Used `int` for `retcode`, `str` for `message` and `wording`, and `str | None` for `echo`.
11. Used `DeleteFriendRes.Data` as the type for the `data` field.
12. Added descriptions to all response fields using `Field`.
13. Marked all top-level response fields and inner data fields as required using `Field(...)`, except for `user_id`, `friend_id` in request and `echo` in response which are nullable based on the schema.
14. Updated `DeleteFriendAPI` to use `__endpoint__` and `__method__` variables for consistency.