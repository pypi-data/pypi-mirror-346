Analyzing the OpenAPI spec for /ArkSharePeer POST endpoint. Identified the request body parameters (group_id, user_id, phoneNumber) and the response body structure, including the nested data object (errCode, errMsg, arkJson). Refactored the `ArksharepeerReq` model to include the request parameters with appropriate types (considering the oneOf and optional nature) and descriptions. Created a nested model `ArksharepeerData` for the `data` field in the response. Refactored `ArksharepeerRes` to include all top-level response fields with correct types, required status, descriptions, and handling for `Literal['ok']` and nullable `echo`. Added descriptions using `pydantic.Field`. Removed unused imports. Ensured compliance with Python 3.13 type hinting and pydantic v2 practices.