Analyzing OpenAPI schema for /get_friend_msg_history. Identified request parameters (user_id, message_seq, count, reverseOrder) and response structure including nested 'messages' array. Defined GetFriendMsgHistoryReq based on request parameters, including required fields, optional fields with default values, and type annotations (handling mixed types like user_id/message_seq). Defined nested models for 'sender' (Sender) and various message components (TextMsg, AtMsg, FaceMsg, ImageMsg, FileMsg, ReplyMsg, JsonMsg, VoiceMsg, VideoMsg, MarkdownMsg, ForwardMsg), including their internal data structures and literal 'type' fields. Noted the conflict in OpenAPI where both '语音消息' and 'markdown消息' schemas have type 'record', handling this by defining separate models and noting the issue. Defined the main 'Message' model based on '消息详情', including all required fields and the 'message' field as a union of all possible message component types. Defined the response data container 'GetFriendMsgHistoryResData'. Defined the main response model 'GetFriendMsgHistoryRes', including status, retcode, data, message, wording, and echo, mapping the 'data' field to GetFriendMsgHistoryResData. Added descriptions using Field. Removed unused imports (Any). Ensured all fields have type annotations. Kept nested models outside the main request/response classes for clarity.