Based on the OpenAPI schema, I have refactored the Pydantic models:
1.  **GetGroupMemberListReq**: Added `group_id` (int | str, required) and `no_cache` (bool, default=False) with descriptions.
2.  **GroupMemberInfo**: Created a new model to represent the items in the `data` list of the response. Added all fields specified in the schema (`group_id`, `user_id`, `nickname`, `card`, `sex`, `age`, `area`, `level`, `qq_level`, `join_time`, `last_sent_time`, `title_expire_time`, `unfriendly`, `card_changeable`, `is_robot`, `shut_up_timestamp`, `role`, `title`) with appropriate types (int, str, bool), descriptions using `Field`, and marked them as required.
3.  **GetGroupMemberListRes**: Updated the model to include `status` (Literal['ok'], required), `retcode` (int, required), `data` (list[GroupMemberInfo], required), `message` (str, required), `wording` (str, required), and `echo` (str | None, required). Added descriptions for all fields.
4.  **Imports**: Added `Literal` from `typing`. Removed unused `Any`.
5.  **Coding Guidelines**: Ensured type annotations are used, `| None` for nullable, `Literal` for fixed values, and `Field` for descriptions and default values.