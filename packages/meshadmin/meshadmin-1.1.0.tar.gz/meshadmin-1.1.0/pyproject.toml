[project]
name = "meshadmin"
description = "Management for Nebula Mesh networks."
dynamic = ["version"]
readme = "README.md"
license = { text = "Proprietary" }
requires-python = ">=3.13"

dependencies = [
    "httpx>=0.28.1",
    "pydantic>=2.10.6",
    "structlog>=25.2.0",
    "jwcrypto>=1.5.6",
    "pyjwt>=2.10.1",
    "rich>=13.9.4",
    "typer>=0.15.2",
    "pyyaml>=6.0.2",
]

[project.optional-dependencies]
server = [
    "python-dotenv>=1.1.0",
    "django>=5.1.8",
    "django-ninja>=1.3.0",
    "django-tailwind>=3.8.0",
    "python-semantic-release>=9.20.0",
    "jinja2>=3.1.6",
    "syrupy>=4.8.2",
    "uvicorn>=0.34.0",
    "whitenoise>=6.9.0",
    "django-cotton>=1.6.0",
    "django-htmx>=1.22.0",
    "django-allauth[socialaccount]>=65.4.1",
    "django-structlog>=9.0.1",
    "django-tailwind-cli==2.20.1",
]

[dependency-groups]
dev = [
    "coverage>=7.6.12",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-django>=4.10.0",
    "pytest-mock>=3.14.0",
]

[tool.uv]
package = true
environments = ["sys_platform == 'darwin'", "sys_platform == 'linux'"]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" }

[tool.hatch.build.targets.wheel]
packages = ["src/meshadmin"]

[project.scripts]
meshadmin = "meshadmin.cli.main:app"
meshserver = "meshadmin.server.manage:main"

[tool.coverage.run]
omit = ["*/migrations/*"]

[tool.coverage.report]
omit = ["*/migrations/*"]
