{"src/lib/components/Dropdown.react.js":{"description":"A dropdown similar to dcc.Dropdown, where the menu stays open when multi=true and a selection is made","displayName":"Dropdown","methods":[{"name":"handleChange","docblock":"Handle the value change and communicate it to Dash via setProps.","modifiers":[],"params":[{"name":"selectedOption"}],"returns":null,"description":"Handle the value change and communicate it to Dash via setProps."}],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."},"options":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}]},"description":"Array of options where the label and the value are the same thing - [string|number|bool]"},{"name":"object","description":"Simpler `options` representation in dictionary format. The order is not guaranteed.\n{`value1`: `label1`, `value2`: `label2`, ... }\nwhich is equal to\n[{label: `label1`, value: `value1`}, {label: `label2`, value: `value2`}, ...]"},{"name":"arrayOf","value":{"name":"exact","value":{"label":{"name":"node","description":"The option's label","required":true},"value":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}],"description":"The value of the option. This value\ncorresponds to the items specified in the\n`value` property.","required":true},"disabled":{"name":"bool","description":"If true, this option is disabled and cannot be selected.","required":false},"title":{"name":"string","description":"The HTML 'title' attribute for the option. Allows for\ninformation on hover. For more information on this attribute,\nsee https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title","required":false},"search":{"name":"string","description":"Optional search value for the option, to use if the label\nis a component or provide a custom search value different\nfrom the label. If no search value and the label is a\ncomponent, the `value` will be used for search.","required":false}}},"description":"An array of options {label: [string|number], value: [string|number]},\nan optional disabled field can be used for each option"}]},"required":false,"description":"An array of options {label: [string|number], value: [string|number]},"},"value":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"},{"name":"arrayOf","value":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}]}}]},"required":false,"description":"The value of the input. If `multi` is false (the default)\nthen value is just a string that corresponds to the values\nprovided in the `options` property. If `multi` is true, then\nmultiple values can be selected at once, and `value` is an\narray of items with values corresponding to those in the\n`options` prop."},"multi":{"type":{"name":"bool"},"required":false,"description":"If true, the user can select multiple values","defaultValue":{"value":"false","computed":false}},"clearable":{"type":{"name":"bool"},"required":false,"description":"Whether or not the dropdown is \"clearable\", that is, whether or\nnot a small \"x\" appears on the right of the dropdown that removes\nthe selected value."},"placeholder":{"type":{"name":"string"},"required":false,"description":"A placeholder in the dropdown input if no selection is made yet; default is 'Select...'","defaultValue":{"value":"'Select...'","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If true, this dropdown is disabled and the selection cannot be changed.","defaultValue":{"value":"false","computed":false}},"hide_options_on_select":{"type":{"name":"bool"},"required":false,"description":"If true, options are removed when selected.","defaultValue":{"value":"true","computed":false}},"searchable":{"type":{"name":"bool"},"required":false,"description":"Whether to enable the searching feature or not","defaultValue":{"value":"true","computed":false}},"setProps":{"type":{"name":"func"},"required":false,"description":"Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."},"style":{"type":{"name":"object"},"required":false,"description":"Defines CSS styles which will override styles previously set."},"className":{"type":{"name":"string"},"required":false,"description":"className of the dropdown element"}}},"src/lib/components/MultiLevelDropdown.react.js":{"description":"A dropdown similar to dcc.Dropdown but with multiple levels, where the menu stays open when multi=true and a selection is made","displayName":"MultiLevelDropdown","methods":[{"name":"handleChange","docblock":"Handle the value change and communicate it to Dash via setProps.","modifiers":[],"params":[{"name":"selectedOption"}],"returns":null,"description":"Handle the value change and communicate it to Dash via setProps."}],"props":{"id":{"type":{"name":"string"},"required":false,"description":"The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."},"options":{"type":{"name":"arrayOf","value":{"name":"shape","value":{"value":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}],"required":true},"label":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}],"required":true},"options":{"name":"arrayOf","value":{"name":"shape","value":{"value":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}],"required":true},"label":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}],"required":true}}},"required":false}}}},"required":false,"description":"An array of options {label: [string|number], value: [string|number]},"},"value":{"type":{"name":"union","value":[{"name":"arrayOf","value":{"name":"arrayOf","value":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}]}}},{"name":"arrayOf","value":{"name":"union","value":[{"name":"string"},{"name":"number"},{"name":"bool"}]}}]},"required":false,"description":"The value of the input. If multi is false (the default)\nthen value is just a string that corresponds to the values\nprovided in the options property. If multi is true, then\nmultiple values can be selected at once, and value is an\narray of items with values corresponding to those in the\noptions prop."},"multi":{"type":{"name":"bool"},"required":false,"description":"If true, the user can select multiple values","defaultValue":{"value":"false","computed":false}},"clearable":{"type":{"name":"bool"},"required":false,"description":"Whether or not the dropdown is \"clearable\", that is, whether or\nnot a small \"x\" appears on the right of the dropdown that removes\nthe selected value."},"placeholder":{"type":{"name":"string"},"required":false,"description":"A placeholder in the dropdown input if no selection is made yet; default is 'Select...'","defaultValue":{"value":"'Select...'","computed":false}},"disabled":{"type":{"name":"bool"},"required":false,"description":"If true, this dropdown is disabled and the selection cannot be changed.","defaultValue":{"value":"false","computed":false}},"hide_options_on_select":{"type":{"name":"bool"},"required":false,"description":"If true, options are removed when selected.","defaultValue":{"value":"true","computed":false}},"submenu_widths":{"type":{"name":"array"},"required":false,"description":"Control the width of the submenu for each level. Can be in percentage if the preceding level or fixed widths."},"setProps":{"type":{"name":"func"},"required":false,"description":"Whether to enable the searching feature or not"},"style":{"type":{"name":"object"},"required":false,"description":"Defines CSS styles which will override styles previously set."},"className":{"type":{"name":"string"},"required":false,"description":"className of the dropdown element"}}}}