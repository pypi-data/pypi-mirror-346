# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import admin_pb2 as admin__pb2
from . import api_pb2 as api__pb2
from . import communities_pb2 as communities__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class AdminStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserDetails = channel.unary_unary(
                '/org.couchers.admin.Admin/GetUserDetails',
                request_serializer=admin__pb2.GetUserDetailsReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/org.couchers.admin.Admin/GetUser',
                request_serializer=admin__pb2.GetUserReq.SerializeToString,
                response_deserializer=api__pb2.User.FromString,
                )
        self.ChangeUserGender = channel.unary_unary(
                '/org.couchers.admin.Admin/ChangeUserGender',
                request_serializer=admin__pb2.ChangeUserGenderReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.ChangeUserBirthdate = channel.unary_unary(
                '/org.couchers.admin.Admin/ChangeUserBirthdate',
                request_serializer=admin__pb2.ChangeUserBirthdateReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.AddBadge = channel.unary_unary(
                '/org.couchers.admin.Admin/AddBadge',
                request_serializer=admin__pb2.AddBadgeReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.RemoveBadge = channel.unary_unary(
                '/org.couchers.admin.Admin/RemoveBadge',
                request_serializer=admin__pb2.RemoveBadgeReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.SetPassportSexGenderException = channel.unary_unary(
                '/org.couchers.admin.Admin/SetPassportSexGenderException',
                request_serializer=admin__pb2.SetPassportSexGenderExceptionReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.BanUser = channel.unary_unary(
                '/org.couchers.admin.Admin/BanUser',
                request_serializer=admin__pb2.BanUserReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.UnbanUser = channel.unary_unary(
                '/org.couchers.admin.Admin/UnbanUser',
                request_serializer=admin__pb2.UnbanUserReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.AddAdminNote = channel.unary_unary(
                '/org.couchers.admin.Admin/AddAdminNote',
                request_serializer=admin__pb2.AddAdminNoteReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.GetContentReport = channel.unary_unary(
                '/org.couchers.admin.Admin/GetContentReport',
                request_serializer=admin__pb2.GetContentReportReq.SerializeToString,
                response_deserializer=admin__pb2.GetContentReportRes.FromString,
                )
        self.GetContentReportsForAuthor = channel.unary_unary(
                '/org.couchers.admin.Admin/GetContentReportsForAuthor',
                request_serializer=admin__pb2.GetContentReportsForAuthorReq.SerializeToString,
                response_deserializer=admin__pb2.GetContentReportsForAuthorRes.FromString,
                )
        self.SendModNote = channel.unary_unary(
                '/org.couchers.admin.Admin/SendModNote',
                request_serializer=admin__pb2.SendModNoteReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/org.couchers.admin.Admin/DeleteUser',
                request_serializer=admin__pb2.DeleteUserReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.RecoverDeletedUser = channel.unary_unary(
                '/org.couchers.admin.Admin/RecoverDeletedUser',
                request_serializer=admin__pb2.RecoverDeletedUserReq.SerializeToString,
                response_deserializer=admin__pb2.UserDetails.FromString,
                )
        self.CreateApiKey = channel.unary_unary(
                '/org.couchers.admin.Admin/CreateApiKey',
                request_serializer=admin__pb2.CreateApiKeyReq.SerializeToString,
                response_deserializer=admin__pb2.CreateApiKeyRes.FromString,
                )
        self.CreateCommunity = channel.unary_unary(
                '/org.couchers.admin.Admin/CreateCommunity',
                request_serializer=admin__pb2.CreateCommunityReq.SerializeToString,
                response_deserializer=communities__pb2.Community.FromString,
                )
        self.UpdateCommunity = channel.unary_unary(
                '/org.couchers.admin.Admin/UpdateCommunity',
                request_serializer=admin__pb2.UpdateCommunityReq.SerializeToString,
                response_deserializer=communities__pb2.Community.FromString,
                )
        self.GetChats = channel.unary_unary(
                '/org.couchers.admin.Admin/GetChats',
                request_serializer=admin__pb2.GetChatsReq.SerializeToString,
                response_deserializer=admin__pb2.GetChatsRes.FromString,
                )
        self.ListEventCommunityInviteRequests = channel.unary_unary(
                '/org.couchers.admin.Admin/ListEventCommunityInviteRequests',
                request_serializer=admin__pb2.ListEventCommunityInviteRequestsReq.SerializeToString,
                response_deserializer=admin__pb2.ListEventCommunityInviteRequestsRes.FromString,
                )
        self.DecideEventCommunityInviteRequest = channel.unary_unary(
                '/org.couchers.admin.Admin/DecideEventCommunityInviteRequest',
                request_serializer=admin__pb2.DecideEventCommunityInviteRequestReq.SerializeToString,
                response_deserializer=admin__pb2.DecideEventCommunityInviteRequestRes.FromString,
                )
        self.DeleteEvent = channel.unary_unary(
                '/org.couchers.admin.Admin/DeleteEvent',
                request_serializer=admin__pb2.DeleteEventReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListUserIds = channel.unary_unary(
                '/org.couchers.admin.Admin/ListUserIds',
                request_serializer=admin__pb2.ListUserIdsReq.SerializeToString,
                response_deserializer=admin__pb2.ListUserIdsRes.FromString,
                )
        self.EditReferenceText = channel.unary_unary(
                '/org.couchers.admin.Admin/EditReferenceText',
                request_serializer=admin__pb2.EditReferenceTextReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteReference = channel.unary_unary(
                '/org.couchers.admin.Admin/DeleteReference',
                request_serializer=admin__pb2.DeleteReferenceReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.EditDiscussion = channel.unary_unary(
                '/org.couchers.admin.Admin/EditDiscussion',
                request_serializer=admin__pb2.EditDiscussionReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.EditReply = channel.unary_unary(
                '/org.couchers.admin.Admin/EditReply',
                request_serializer=admin__pb2.EditReplyReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.CreateAccountDeletionLink = channel.unary_unary(
                '/org.couchers.admin.Admin/CreateAccountDeletionLink',
                request_serializer=admin__pb2.CreateAccountDeletionLinkReq.SerializeToString,
                response_deserializer=admin__pb2.CreateAccountDeletionLinkRes.FromString,
                )


class AdminServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUserDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Get info about a particular user, ignores the fact that they may be banned/deleted
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeUserGender(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeUserBirthdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBadge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveBadge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPassportSexGenderException(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BanUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnbanUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddAdminNote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContentReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContentReportsForAuthor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendModNote(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecoverDeletedUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateApiKey(self, request, context):
        """Create an API key for a user. For security, we don't return the API key to the admin calling this API, rather
        it's sent to the user in an email
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCommunity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCommunity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEventCommunityInviteRequests(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecideEventCommunityInviteRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserIds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditReferenceText(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteReference(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditDiscussion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditReply(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccountDeletionLink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUserDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDetails,
                    request_deserializer=admin__pb2.GetUserDetailsReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=admin__pb2.GetUserReq.FromString,
                    response_serializer=api__pb2.User.SerializeToString,
            ),
            'ChangeUserGender': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeUserGender,
                    request_deserializer=admin__pb2.ChangeUserGenderReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'ChangeUserBirthdate': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeUserBirthdate,
                    request_deserializer=admin__pb2.ChangeUserBirthdateReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'AddBadge': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBadge,
                    request_deserializer=admin__pb2.AddBadgeReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'RemoveBadge': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveBadge,
                    request_deserializer=admin__pb2.RemoveBadgeReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'SetPassportSexGenderException': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPassportSexGenderException,
                    request_deserializer=admin__pb2.SetPassportSexGenderExceptionReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'BanUser': grpc.unary_unary_rpc_method_handler(
                    servicer.BanUser,
                    request_deserializer=admin__pb2.BanUserReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'UnbanUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UnbanUser,
                    request_deserializer=admin__pb2.UnbanUserReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'AddAdminNote': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAdminNote,
                    request_deserializer=admin__pb2.AddAdminNoteReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'GetContentReport': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContentReport,
                    request_deserializer=admin__pb2.GetContentReportReq.FromString,
                    response_serializer=admin__pb2.GetContentReportRes.SerializeToString,
            ),
            'GetContentReportsForAuthor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContentReportsForAuthor,
                    request_deserializer=admin__pb2.GetContentReportsForAuthorReq.FromString,
                    response_serializer=admin__pb2.GetContentReportsForAuthorRes.SerializeToString,
            ),
            'SendModNote': grpc.unary_unary_rpc_method_handler(
                    servicer.SendModNote,
                    request_deserializer=admin__pb2.SendModNoteReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=admin__pb2.DeleteUserReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'RecoverDeletedUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RecoverDeletedUser,
                    request_deserializer=admin__pb2.RecoverDeletedUserReq.FromString,
                    response_serializer=admin__pb2.UserDetails.SerializeToString,
            ),
            'CreateApiKey': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateApiKey,
                    request_deserializer=admin__pb2.CreateApiKeyReq.FromString,
                    response_serializer=admin__pb2.CreateApiKeyRes.SerializeToString,
            ),
            'CreateCommunity': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCommunity,
                    request_deserializer=admin__pb2.CreateCommunityReq.FromString,
                    response_serializer=communities__pb2.Community.SerializeToString,
            ),
            'UpdateCommunity': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCommunity,
                    request_deserializer=admin__pb2.UpdateCommunityReq.FromString,
                    response_serializer=communities__pb2.Community.SerializeToString,
            ),
            'GetChats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChats,
                    request_deserializer=admin__pb2.GetChatsReq.FromString,
                    response_serializer=admin__pb2.GetChatsRes.SerializeToString,
            ),
            'ListEventCommunityInviteRequests': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEventCommunityInviteRequests,
                    request_deserializer=admin__pb2.ListEventCommunityInviteRequestsReq.FromString,
                    response_serializer=admin__pb2.ListEventCommunityInviteRequestsRes.SerializeToString,
            ),
            'DecideEventCommunityInviteRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.DecideEventCommunityInviteRequest,
                    request_deserializer=admin__pb2.DecideEventCommunityInviteRequestReq.FromString,
                    response_serializer=admin__pb2.DecideEventCommunityInviteRequestRes.SerializeToString,
            ),
            'DeleteEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEvent,
                    request_deserializer=admin__pb2.DeleteEventReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListUserIds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserIds,
                    request_deserializer=admin__pb2.ListUserIdsReq.FromString,
                    response_serializer=admin__pb2.ListUserIdsRes.SerializeToString,
            ),
            'EditReferenceText': grpc.unary_unary_rpc_method_handler(
                    servicer.EditReferenceText,
                    request_deserializer=admin__pb2.EditReferenceTextReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteReference': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteReference,
                    request_deserializer=admin__pb2.DeleteReferenceReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'EditDiscussion': grpc.unary_unary_rpc_method_handler(
                    servicer.EditDiscussion,
                    request_deserializer=admin__pb2.EditDiscussionReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'EditReply': grpc.unary_unary_rpc_method_handler(
                    servicer.EditReply,
                    request_deserializer=admin__pb2.EditReplyReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateAccountDeletionLink': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccountDeletionLink,
                    request_deserializer=admin__pb2.CreateAccountDeletionLinkReq.FromString,
                    response_serializer=admin__pb2.CreateAccountDeletionLinkRes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'org.couchers.admin.Admin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Admin(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUserDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/GetUserDetails',
            admin__pb2.GetUserDetailsReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/GetUser',
            admin__pb2.GetUserReq.SerializeToString,
            api__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeUserGender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/ChangeUserGender',
            admin__pb2.ChangeUserGenderReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeUserBirthdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/ChangeUserBirthdate',
            admin__pb2.ChangeUserBirthdateReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddBadge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/AddBadge',
            admin__pb2.AddBadgeReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveBadge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/RemoveBadge',
            admin__pb2.RemoveBadgeReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPassportSexGenderException(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/SetPassportSexGenderException',
            admin__pb2.SetPassportSexGenderExceptionReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BanUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/BanUser',
            admin__pb2.BanUserReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnbanUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/UnbanUser',
            admin__pb2.UnbanUserReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddAdminNote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/AddAdminNote',
            admin__pb2.AddAdminNoteReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContentReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/GetContentReport',
            admin__pb2.GetContentReportReq.SerializeToString,
            admin__pb2.GetContentReportRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContentReportsForAuthor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/GetContentReportsForAuthor',
            admin__pb2.GetContentReportsForAuthorReq.SerializeToString,
            admin__pb2.GetContentReportsForAuthorRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendModNote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/SendModNote',
            admin__pb2.SendModNoteReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/DeleteUser',
            admin__pb2.DeleteUserReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecoverDeletedUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/RecoverDeletedUser',
            admin__pb2.RecoverDeletedUserReq.SerializeToString,
            admin__pb2.UserDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateApiKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/CreateApiKey',
            admin__pb2.CreateApiKeyReq.SerializeToString,
            admin__pb2.CreateApiKeyRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCommunity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/CreateCommunity',
            admin__pb2.CreateCommunityReq.SerializeToString,
            communities__pb2.Community.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCommunity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/UpdateCommunity',
            admin__pb2.UpdateCommunityReq.SerializeToString,
            communities__pb2.Community.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/GetChats',
            admin__pb2.GetChatsReq.SerializeToString,
            admin__pb2.GetChatsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListEventCommunityInviteRequests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/ListEventCommunityInviteRequests',
            admin__pb2.ListEventCommunityInviteRequestsReq.SerializeToString,
            admin__pb2.ListEventCommunityInviteRequestsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DecideEventCommunityInviteRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/DecideEventCommunityInviteRequest',
            admin__pb2.DecideEventCommunityInviteRequestReq.SerializeToString,
            admin__pb2.DecideEventCommunityInviteRequestRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/DeleteEvent',
            admin__pb2.DeleteEventReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/ListUserIds',
            admin__pb2.ListUserIdsReq.SerializeToString,
            admin__pb2.ListUserIdsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditReferenceText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/EditReferenceText',
            admin__pb2.EditReferenceTextReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteReference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/DeleteReference',
            admin__pb2.DeleteReferenceReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditDiscussion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/EditDiscussion',
            admin__pb2.EditDiscussionReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditReply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/EditReply',
            admin__pb2.EditReplyReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAccountDeletionLink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.admin.Admin/CreateAccountDeletionLink',
            admin__pb2.CreateAccountDeletionLinkReq.SerializeToString,
            admin__pb2.CreateAccountDeletionLinkRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
