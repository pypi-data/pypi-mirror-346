# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import notifications_pb2 as notifications__pb2


class NotificationsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNotificationSettings = channel.unary_unary(
                '/org.couchers.notifications.Notifications/GetNotificationSettings',
                request_serializer=notifications__pb2.GetNotificationSettingsReq.SerializeToString,
                response_deserializer=notifications__pb2.GetNotificationSettingsRes.FromString,
                )
        self.SetNotificationSettings = channel.unary_unary(
                '/org.couchers.notifications.Notifications/SetNotificationSettings',
                request_serializer=notifications__pb2.SetNotificationSettingsReq.SerializeToString,
                response_deserializer=notifications__pb2.GetNotificationSettingsRes.FromString,
                )
        self.ListNotifications = channel.unary_unary(
                '/org.couchers.notifications.Notifications/ListNotifications',
                request_serializer=notifications__pb2.ListNotificationsReq.SerializeToString,
                response_deserializer=notifications__pb2.ListNotificationsRes.FromString,
                )
        self.MarkNotificationSeen = channel.unary_unary(
                '/org.couchers.notifications.Notifications/MarkNotificationSeen',
                request_serializer=notifications__pb2.MarkNotificationSeenReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.MarkAllNotificationsSeen = channel.unary_unary(
                '/org.couchers.notifications.Notifications/MarkAllNotificationsSeen',
                request_serializer=notifications__pb2.MarkAllNotificationsSeenReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetVapidPublicKey = channel.unary_unary(
                '/org.couchers.notifications.Notifications/GetVapidPublicKey',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=notifications__pb2.GetVapidPublicKeyRes.FromString,
                )
        self.RegisterPushNotificationSubscription = channel.unary_unary(
                '/org.couchers.notifications.Notifications/RegisterPushNotificationSubscription',
                request_serializer=notifications__pb2.RegisterPushNotificationSubscriptionReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SendTestPushNotification = channel.unary_unary(
                '/org.couchers.notifications.Notifications/SendTestPushNotification',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class NotificationsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetNotificationSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNotificationSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkNotificationSeen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkAllNotificationsSeen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVapidPublicKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterPushNotificationSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendTestPushNotification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NotificationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNotificationSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNotificationSettings,
                    request_deserializer=notifications__pb2.GetNotificationSettingsReq.FromString,
                    response_serializer=notifications__pb2.GetNotificationSettingsRes.SerializeToString,
            ),
            'SetNotificationSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNotificationSettings,
                    request_deserializer=notifications__pb2.SetNotificationSettingsReq.FromString,
                    response_serializer=notifications__pb2.GetNotificationSettingsRes.SerializeToString,
            ),
            'ListNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNotifications,
                    request_deserializer=notifications__pb2.ListNotificationsReq.FromString,
                    response_serializer=notifications__pb2.ListNotificationsRes.SerializeToString,
            ),
            'MarkNotificationSeen': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkNotificationSeen,
                    request_deserializer=notifications__pb2.MarkNotificationSeenReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'MarkAllNotificationsSeen': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkAllNotificationsSeen,
                    request_deserializer=notifications__pb2.MarkAllNotificationsSeenReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetVapidPublicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVapidPublicKey,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=notifications__pb2.GetVapidPublicKeyRes.SerializeToString,
            ),
            'RegisterPushNotificationSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterPushNotificationSubscription,
                    request_deserializer=notifications__pb2.RegisterPushNotificationSubscriptionReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SendTestPushNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTestPushNotification,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'org.couchers.notifications.Notifications', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Notifications(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetNotificationSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.notifications.Notifications/GetNotificationSettings',
            notifications__pb2.GetNotificationSettingsReq.SerializeToString,
            notifications__pb2.GetNotificationSettingsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNotificationSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.notifications.Notifications/SetNotificationSettings',
            notifications__pb2.SetNotificationSettingsReq.SerializeToString,
            notifications__pb2.GetNotificationSettingsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.notifications.Notifications/ListNotifications',
            notifications__pb2.ListNotificationsReq.SerializeToString,
            notifications__pb2.ListNotificationsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkNotificationSeen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.notifications.Notifications/MarkNotificationSeen',
            notifications__pb2.MarkNotificationSeenReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkAllNotificationsSeen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.notifications.Notifications/MarkAllNotificationsSeen',
            notifications__pb2.MarkAllNotificationsSeenReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVapidPublicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.notifications.Notifications/GetVapidPublicKey',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            notifications__pb2.GetVapidPublicKeyRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterPushNotificationSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.notifications.Notifications/RegisterPushNotificationSubscription',
            notifications__pb2.RegisterPushNotificationSubscriptionReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendTestPushNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.couchers.notifications.Notifications/SendTestPushNotification',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
