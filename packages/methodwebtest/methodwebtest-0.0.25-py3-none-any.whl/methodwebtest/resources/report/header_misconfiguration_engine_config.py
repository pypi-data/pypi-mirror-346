# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ..request.http_method import HttpMethod
from ..request.event_type import EventType
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class HeaderMisconfigurationEngineConfig(UniversalBaseModel):
    targets: typing.List[str]
    method: HttpMethod
    payloads: typing.List[typing.List[typing.Dict[str, str]]]
    event_type: EventType = pydantic.Field(alias="eventType")
    follow_redirects: bool = pydantic.Field(alias="followRedirects")
    timeout: int
    retries: int
    sleep: int

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
