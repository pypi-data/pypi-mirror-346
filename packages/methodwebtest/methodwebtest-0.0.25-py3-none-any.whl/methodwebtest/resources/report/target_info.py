# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import datetime as dt
import pydantic
import typing
from .attempt_info import AttemptInfo
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class TargetInfo(UniversalBaseModel):
    target: str
    start_timestamp: dt.datetime = pydantic.Field(alias="startTimestamp")
    end_timestamp: dt.datetime = pydantic.Field(alias="endTimestamp")
    request_count: int = pydantic.Field(alias="requestCount")
    baseline_attempt: typing.Optional[AttemptInfo] = pydantic.Field(alias="baselineAttempt", default=None)
    attempts: typing.Optional[typing.List[AttemptInfo]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
