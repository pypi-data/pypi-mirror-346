# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class PathTraversalConfig(UniversalBaseModel):
    targets: typing.List[str]
    paths: typing.Optional[typing.List[str]] = None
    path_lists: typing.Optional[typing.List[str]] = pydantic.Field(alias="pathLists", default=None)
    query_param: typing.Optional[str] = pydantic.Field(alias="queryParam", default=None)
    response_codes: str = pydantic.Field(alias="responseCodes")
    ignore_base_content: bool = pydantic.Field(alias="ignoreBaseContent")
    timeout: int
    retries: int
    sleep: int
    successful_only: bool = pydantic.Field(alias="successfulOnly")
    threshold: float
    max_run_time: typing.Optional[int] = pydantic.Field(alias="maxRunTime", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
