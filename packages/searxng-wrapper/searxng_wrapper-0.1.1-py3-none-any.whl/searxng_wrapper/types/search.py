from typing import Literal, Optional
from pydantic import BaseModel

SafeSearch = Literal["off", "moderate", "strict"]
SAFESEARCH_MAP = {
    "off": 0,
    "moderate": 1,
    "strict": 2,
}
Category = Literal["general", "images", "videos",
                   "news", "map", "music", "it", "science", "files", "social_media"]

Language = Literal[
    "auto", "af", "ar", "ar-SA", "be", "bg", "bg-BG", "ca", "cs", "cs-CZ", "cy", "da", "da-DK",
    "de", "de-AT", "de-BE", "de-CH", "de-DE", "el", "el-GR", "en", "en-AU", "en-CA",
    "en-GB", "en-IE", "en-IN", "en-NZ", "en-PH", "en-PK", "en-SG", "en-US", "en-ZA",
    "es", "es-AR", "es-CL", "es-CO", "es-ES", "es-MX", "es-PE", "et", "et-EE", "eu",
    "fa", "fi", "fi-FI", "fr", "fr-BE", "fr-CA", "fr-CH", "fr-FR", "ga", "gd", "gl",
    "he", "hi", "hr", "hu", "hu-HU", "id", "id-ID", "is", "it", "it-CH", "it-IT",
    "ja", "ja-JP", "kn", "ko", "ko-KR", "lt", "lv", "ml", "mr", "nb", "nb-NO", "nl",
    "nl-BE", "nl-NL", "pl", "pl-PL", "pt", "pt-BR", "pt-PT", "ro", "ro-RO", "ru",
    "ru-RU", "sk", "sl", "sq", "sv", "sv-SE", "ta", "te", "th", "th-TH", "tr", "tr-TR",
    "uk", "ur", "vi", "vi-VN", "zh", "zh-CN", "zh-HK", "zh-TW"
]

TimeRange = Literal["all", "day", "week", "month", "year"]
EngineName = Literal[
    "dictzone__general",
    "libretranslate__general",
    "lingva__general",
    "mozhi__general",
    "mymemory_translated__general",
    "bing__general",
    "brave__general",
    "duckduckgo__general",
    "google__general",
    "mojeek__general",
    "mullvadleta__general",
    "mullvadleta_brave__general",
    "presearch__general",
    "presearch_videos__general",
    "qwant__general",
    "startpage__general",
    "wiby__general",
    "yahoo__general",
    "seznam__general",
    "goo__general",
    "naver__general",
    "wikibooks__general",
    "wikiquote__general",
    "wikisource__general",
    "wikispecies__general",
    "wikiversity__general",
    "wikivoyage__general",
    "alexandria__general",
    "ask__general",
    "cloudflareai__general",
    "crowdview__general",
    "currency__general",
    "ddg_definitions__general",
    "encyclosearch__general",
    "mwmbl__general",
    "right_dao__general",
    "searchmysite__general",
    "stract__general",
    "tineye__general",
    "wikidata__general",
    "wikipedia__general",
    "wolframalpha__general",
    "yacy__general",
    "yep__general",
    "bpb__general",
    "tagesschau__general",
    "wikimini__general",
    "360search__general",
    "baidu__general",
    "quark__general",
    "sogou__general",
    "bing_images__images",
    "brave.images__images",
    "duckduckgo_images__images",
    "google_images__images",
    "mojeek_images__images",
    "presearch_images__images",
    "qwant_images__images",
    "startpage_images__images",
    "1x__images",
    "adobe_stock__images",
    "artic__images",
    "deviantart__images",
    "findthatmeme__images",
    "flickr__images",
    "frinkiac__images",
    "imgur__images",
    "ipernity__images",
    "library_of_congress__images",
    "material_icons__images",
    "openverse__images",
    "pinterest__images",
    "public_domain_image_archive__images",
    "sogou_images__images",
    "svgrepo__images",
    "unsplash__images",
    "wallhaven__images",
    "wikicommons.images__images",
    "yacy_images__images",
    "yep_images__images",
    "seekr_images__images",
    "baidu_images__images",
    "quark_images__images",
    "bing_videos__videos",
    "brave.videos__videos",
    "duckduckgo_videos__videos",
    "google_videos__videos",
    "qwant_videos__videos",
    "360search_videos__videos",
    "adobe_stock_video__videos",
    "bilibili__videos",
    "bitchute__videos",
    "dailymotion__videos",
    "google_play_movies__videos",
    "invidious__videos",
    "livespace__videos",
    "media.ccc.de__videos",
    "odysee__videos",
    "peertube__videos",
    "piped__videos",
    "rumble__videos",
    "sepiasearch__videos",
    "vimeo__videos",
    "wikicommons.videos__videos",
    "youtube__videos",
    "mediathekviewweb__videos",
    "seekr_videos__videos",
    "ina__videos",
    "niconico__videos",
    "acfun__videos",
    "iqiyi__videos",
    "sogou_videos__videos",
    "duckduckgo_news__news",
    "mojeek_news__news",
    "presearch_news__news",
    "startpage_news__news",
    "wikinews__news",
    "bing_news__news",
    "brave.news__news",
    "google_news__news",
    "qwant_news__news",
    "reuters__news",
    "yahoo_news__news",
    "yep_news__news",
    "tagesschau__news",
    "seekr_news__news",
    "ansa__news",
    "il_post__news",
    "sogou_wechat__news",
    "apple_maps__map",
    "openstreetmap__map",
    "photon__map",
    "genius__music",
    "radio_browser__music",
    "adobe_stock_audio__music",
    "bandcamp__music",
    "deezer__music",
    "invidious__music",
    "mixcloud__music",
    "piped.music__music",
    "soundcloud__music",
    "wikicommons.audio__music",
    "youtube__music",
    "alpine_linux_packages__it",
    "crates.io__it",
    "docker_hub__it",
    "hex__it",
    "hoogle__it",
    "lib.rs__it",
    "metacpan__it",
    "npm__it",
    "packagist__it",
    "pkg.go.dev__it",
    "pub.dev__it",
    "pypi__it",
    "rubygems__it",
    "voidlinux__it",
    "askubuntu__it",
    "caddy.community__it",
    "discuss.python__it",
    "pi-hole.community__it",
    "stackoverflow__it",
    "superuser__it",
    "bitbucket__it",
    "codeberg__it",
    "gitea.com__it",
    "github__it",
    "gitlab__it",
    "huggingface__it",
    "huggingface_datasets__it",
    "huggingface_spaces__it",
    "ollama__it",
    "sourcehut__it",
    "arch_linux_wiki__it",
    "free_software_directory__it",
    "gentoo__it",
    "nixos_wiki__it",
    "anaconda__it",
    "cppreference__it",
    "habrahabr__it",
    "hackernews__it",
    "lobste.rs__it",
    "mankier__it",
    "mdn__it",
    "microsoft_learn__it",
    "searchcode_code__it",
    "baidu_kaifa__it",
    "arxiv__science",
    "crossref__science",
    "google_scholar__science",
    "pubmed__science",
    "semantic_scholar__science",
    "wikispecies__science",
    "openairedatasets__science",
    "openairepublications__science",
    "pdbe__science",
    "apk_mirror__files",
    "apple_app_store__files",
    "fdroid__files",
    "google_play_apps__files",
    "1337x__files",
    "annas_archive__files",
    "bt4g__files",
    "btdigg__files",
    "kickass__files",
    "library_genesis__files",
    "nyaa__files",
    "openrepos__files",
    "piratebay__files",
    "solidtorrents__files",
    "tokyotoshokan__files",
    "wikicommons.files__files",
    "z-library__files",
    "9gag__social_media",
    "lemmy_comments__social_media",
    "lemmy_communities__social_media",
    "lemmy_posts__social_media",
    "lemmy_users__social_media",
    "mastodon_hashtags__social_media",
    "mastodon_users__social_media",
    "reddit__social_media",
    "tootfinder__social_media",
    "etymonline__other",
    "wiktionary__other",
    "wordnik__other",
    "duden__other",
    "woxikon.de_synonyme__other",
    "jisho__other",
    "imdb__other",
    "rottentomatoes__other",
    "tmdb__other",
    "moviepilot__other",
    "senscritique__other",
    "geizhals__other",
    "duckduckgo_weather__other",
    "openmeteo__other",
    "wttr.in__other",
    "emojipedia__other",
    "erowid__other",
    "fyyd__other",
    "goodreads__other",
    "openlibrary__other",
    "podcastindex__other",
    "steam__other",
    "yummly__other",
    "chefkoch__other",
    "destatis__other"
]


class SearchResult(BaseModel):
    title: str
    url: str
    content: Optional[str] = None
    publishdDate: Optional[str] = None
    thumbnail: Optional[str] = None
    engine: str
    template: str
    parsed_url: Optional[list] = None
    img_src: str
    priority: str
    engines: list
    positions: list
    score: float
    category: str


class SearchResponse(BaseModel):
    query: str
    number_of_results: int = 0
    results: list[SearchResult] = []
