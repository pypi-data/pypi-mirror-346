import{e as r}from"./DNJft9-J.js";const s=async(i,a,e,t)=>{let n=null;const o=await fetch(`${r}/knowledge/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`},body:JSON.stringify({name:a,description:e,access_control:t})}).then(async l=>{if(!l.ok)throw await l.json();return l.json()}).catch(l=>(n=l.detail,console.log(l),null));if(n)throw n;return o},h=async(i="")=>{let a=null;const e=await fetch(`${r}/knowledge/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.log(t),null));if(a)throw a;return e},d=async(i="")=>{let a=null;const e=await fetch(`${r}/knowledge/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.log(t),null));if(a)throw a;return e},u=async(i,a)=>{let e=null;const t=await fetch(`${r}/knowledge/${a}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return t},p=async(i,a,e)=>{let t=null;const n=await fetch(`${r}/knowledge/${a}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`},body:JSON.stringify({name:e!=null&&e.name?e.name:void 0,description:e!=null&&e.description?e.description:void 0,data:e!=null&&e.data?e.data:void 0,access_control:e.access_control})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(t=o.detail,console.log(o),null));if(t)throw t;return n},w=async(i,a,e)=>{let t=null;const n=await fetch(`${r}/knowledge/${a}/file/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`},body:JSON.stringify({file_id:e})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(t=o.detail,console.log(o),null));if(t)throw t;return n},y=async(i,a,e)=>{let t=null;const n=await fetch(`${r}/knowledge/${a}/file/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`},body:JSON.stringify({file_id:e})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(t=o.detail,console.log(o),null));if(t)throw t;return n},j=async(i,a,e)=>{let t=null;const n=await fetch(`${r}/knowledge/${a}/file/remove`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`},body:JSON.stringify({file_id:e})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(t=o.detail,console.log(o),null));if(t)throw t;return n},g=async(i,a)=>{let e=null;const t=await fetch(`${r}/knowledge/${a}/reset`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return t},$=async(i,a)=>{let e=null;const t=await fetch(`${r}/knowledge/${a}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return t},f=async i=>{let a=null;const e=await fetch(`${r}/knowledge/reindex`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${i}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(a=t.detail,console.log(t),null));if(a)throw a;return e};export{d as a,u as b,s as c,$ as d,w as e,j as f,h as g,p as h,f as i,g as r,y as u};
//# sourceMappingURL=DSOCIJFn.js.map
