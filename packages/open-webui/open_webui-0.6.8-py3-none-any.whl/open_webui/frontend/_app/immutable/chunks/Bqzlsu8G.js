import{g as l,h as r}from"./DNJft9-J.js";const p=async(c="")=>{let e=null;const o=await fetch(`${r}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...c&&{authorization:`Bearer ${c}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return o},u=async(c="",e)=>{let o=null;const n=await fetch(`${r}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...c&&{authorization:`Bearer ${c}`}},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return n},f=async(c,e)=>{let o=null;const n=await fetch(`${c}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var a;return o=`OpenAI: ${((a=t==null?void 0:t.error)==null?void 0:a.message)??"Network Problem"}`,[]});if(o)throw o;return n},w=async(c,e)=>{let o=null;const n=await fetch(`${r}/models${typeof e=="number"?`/${e}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...c&&{authorization:`Bearer ${c}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var a;return o=`OpenAI: ${((a=t==null?void 0:t.error)==null?void 0:a.message)??"Network Problem"}`,[]});if(o)throw o;return n},d=async(c="",e="https://api.openai.com/v1",o="",n=!1)=>{if(!e)throw"OpenAI: URL is required";let t=null,a=null;if(n){if(a=await fetch(`${e}/models`,{method:"GET",headers:{Accept:"application/json",Authorization:`Bearer ${o}`,"Content-Type":"application/json"}}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>{var s;return t=`OpenAI: ${((s=i==null?void 0:i.error)==null?void 0:s.message)??"Network Problem"}`,[]}),t)throw t}else if(a=await fetch(`${r}/verify`,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${c}`,"Content-Type":"application/json"},body:JSON.stringify({url:e,key:o})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>{var s;return t=`OpenAI: ${((s=i==null?void 0:i.error)==null?void 0:s.message)??"Network Problem"}`,[]}),t)throw t;return a},y=async(c="",e,o=`${l}/api`)=>{const n=new AbortController;let t=null;const a=await fetch(`${o}/chat/completions`,{signal:n.signal,method:"POST",headers:{Authorization:`Bearer ${c}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).catch(i=>(console.log(i),t=i,null));if(t)throw t;return[a,n]},j=async(c="",e,o=`${l}/api`)=>{let n=null;const t=await fetch(`${o}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${c}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(n=`${(a==null?void 0:a.detail)??a}`,null));if(n)throw n;return t};export{w as a,f as b,y as c,j as d,p as g,u,d as v};
//# sourceMappingURL=Bqzlsu8G.js.map
