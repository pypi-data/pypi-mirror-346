# Generated by ariadne-codegen
# Source: ./_concatened.gql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .fragments import Catalog, MappingsList, ServicesList, TopologiesDetails


class WorkspaceMin(BaseModel):
    workspace: "WorkspaceMinWorkspace"


class WorkspaceMinWorkspace(BaseModel):
    attributes_available: List["WorkspaceMinWorkspaceAttributesAvailable"] = Field(
        alias="attributesAvailable"
    )
    catalog: "WorkspaceMinWorkspaceCatalog"
    cid: str
    mappings: "WorkspaceMinWorkspaceMappings"
    metas: Optional["WorkspaceMinWorkspaceMetas"]
    services: "WorkspaceMinWorkspaceServices"
    topologies: "WorkspaceMinWorkspaceTopologies"


class WorkspaceMinWorkspaceAttributesAvailable(BaseModel):
    type: str
    value: List[str]


class WorkspaceMinWorkspaceCatalog(Catalog):
    pass


class WorkspaceMinWorkspaceMappings(MappingsList):
    pass


class WorkspaceMinWorkspaceMetas(BaseModel):
    allow_ext_auth: bool = Field(alias="allowExtAuth")
    allow_int_auth: bool = Field(alias="allowIntAuth")
    auth_dn: Optional[str] = Field(alias="authDn")
    auth_local: bool = Field(alias="authLocal")
    dn: str
    dn_uuid: str = Field(alias="dnUuid")
    domain_name: str = Field(alias="domainName")
    fqdn: str
    provider_dn: str = Field(alias="providerDn")
    provider_name: Optional[str] = Field(alias="providerName")
    sub_domain: str = Field(alias="subDomain")


class WorkspaceMinWorkspaceServices(ServicesList):
    pass


class WorkspaceMinWorkspaceTopologies(TopologiesDetails):
    pass


WorkspaceMin.model_rebuild()
WorkspaceMinWorkspace.model_rebuild()
