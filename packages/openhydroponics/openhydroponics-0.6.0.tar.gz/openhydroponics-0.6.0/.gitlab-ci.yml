image: python:3.12-alpine

before_script:
  - apk add --no-cache gcc git linux-headers musl-dev python3-dev
  - apk add --no-cache uv
  - uv sync

pypi:
  stage: deploy
  id_tokens:
    PYPI_ID_TOKEN:
      aud: pypi
  script:
    - apk add --no-cache curl jq
    - uv add id
    # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
    - oidc_token=$(uv run -m id PYPI)
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(echo "${resp}" | jq --raw-output '.token')
    - uv build
    - uv publish --token $api_token
  environment:
    name: release
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'

pages:
  stage: deploy
  script:
    - apk add --no-cache graphviz
    - uv venv
    - source .venv/bin/activate
    - uv sync --group docs
    - sphinx-build -b html docs public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
