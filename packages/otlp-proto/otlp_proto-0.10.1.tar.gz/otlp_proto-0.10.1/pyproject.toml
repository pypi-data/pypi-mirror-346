[project]
name = "otlp-proto"
version = "0.10.1"
description = "🐍Lightweight OTEL span to binary converter, written in Rust🦀"
readme = "readme.md"
requires-python = ">=3.8"
license = "MIT"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Libraries",
    "Framework :: OpenTelemetry",
    "Framework :: OpenTelemetry :: Exporters",
]
dependencies = []

[project.urls]
"Repository" = "https://github.com/dimaqq/otlp-proto"
"Issues" = "https://github.com/dimaqq/otlp-proto/issues"

[dependency-groups]
dev = [
    "maturin ~= 1.8",
    "opentelemetry-api ~= 1.30",  # 1.30 fixed type hints for Python 3.8
    "opentelemetry-sdk ~= 1.30",  # Only needed for types in otlp_proto.pyi
    "pyright >= 1.1.383",
    "ruff ~= 0.9",
]
testing = [
    "pytest ~= 8.3.4",
    "typing_extensions >= 4.1.0",
]
equivalence-testing = [
    # FIXME needs an update, which needs fixes in the Rust implementation
    "otlp-test-data == 0.9.4",
]

[build-system]
requires = ["maturin ~= 1.8", "typing-extensions ~= 4.12"]
build-backend = "maturin"

[tool.uv]
cache-keys = [
    {file = "pyproject.toml"},
    {file = "rust/Cargo.toml"},
    {file = "src/*.rs"},
    {file = "opentelemetry/**/*.proto"},
]

[tool.maturin]
module-name = "otlp_proto"
