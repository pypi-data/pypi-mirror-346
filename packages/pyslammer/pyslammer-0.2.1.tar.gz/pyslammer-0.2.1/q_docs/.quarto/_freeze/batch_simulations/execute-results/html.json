{
  "hash": "396882e242c72b6ddae3ac3698a519c2",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Batch Simulations\n---\n\n\n\nThis notebook shows an example use case of pyslammer for running batch simulations.\n\n## Setup\n\nAssumes pyslammer is installed in the current python environment. *Documentation on installation pending*, but for now, you can install it using pip:\n\n``` bash\npip install pyslammer\n```\n\nImport pyslammer using:\n\n\n::: {#092a3878 .cell execution_count=1}\n``` {.python .cell-code}\nimport pyslammer as slam\n```\n:::\n\n\nAdditional Python libraries, such as `matplotlib` may also be useful.\n\n::: {#1ed76e88 .cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nplt.style.use(slam.psfigstyle)\n```\n:::\n\n\n::: {#49b1d22e .cell execution_count=3}\n``` {.python .cell-code}\nkys = np.linspace(0.01,0.3,20)\nhistories = slam.sample_ground_motions()\noutput = {}\n```\n:::\n\n\n# Batch Simulations\n\nThe code below evaluates all combinations of $k_y$ contained in `kys` and every motion in `histories`. Some key features (motion, ky, max displacement, and displacement time histories) are stored in a dictionary, which is then converted to a pandas dataframe.\n\n::: {#5e8e700b .cell execution_count=4}\n``` {.python .cell-code}\nrun = 0\nfor ky in kys:\n    for motion, hist in histories.items():\n        result = slam.RigidAnalysis(ky,histories[motion].accel, histories[motion].dt,target_pga=0.3)\n        output[run] = {\"motion\":motion, \"ky\":ky, \"k_max\":np.max(result.a_in), \"d_max\": result.max_sliding_disp, \"dt\":result.dt, \"disp\": result\n        .sliding_disp}\n        run += 1\n```\n:::\n\n\n::: {#e911600f .cell execution_count=5}\n``` {.python .cell-code}\n# convert the output to a pandas dataframe\ndf = pd.DataFrame.from_dict(output,orient='index')\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>motion</th>\n      <th>ky</th>\n      <th>k_max</th>\n      <th>d_max</th>\n      <th>dt</th>\n      <th>disp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Morgan_Hill_1984_CYC-285</td>\n      <td>0.01</td>\n      <td>0.112099</td>\n      <td>1.539165e-01</td>\n      <td>0.005</td>\n      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Nisqually_2001_UNR-058</td>\n      <td>0.01</td>\n      <td>0.300000</td>\n      <td>2.076698e+00</td>\n      <td>0.010</td>\n      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0842021724855...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Imperial_Valley_1979_BCR-230</td>\n      <td>0.01</td>\n      <td>0.300000</td>\n      <td>7.304110e-01</td>\n      <td>0.005</td>\n      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Northridge_1994_PAC-175</td>\n      <td>0.01</td>\n      <td>0.255128</td>\n      <td>2.405517e-01</td>\n      <td>0.020</td>\n      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Chi-Chi_1999_TCU068-090</td>\n      <td>0.01</td>\n      <td>0.300000</td>\n      <td>7.088829e+00</td>\n      <td>0.005</td>\n      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 1.6940658945086008e-...</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>355</th>\n      <td>Landers_1992_LCN-345</td>\n      <td>0.30</td>\n      <td>0.239638</td>\n      <td>7.871830e-17</td>\n      <td>0.005</td>\n      <td>[0.0, 0.0, 0.0, 3.3881317890172015e-25, 1.3552...</td>\n    </tr>\n    <tr>\n      <th>356</th>\n      <td>N_Palm_Springs_1986_WWT-180</td>\n      <td>0.30</td>\n      <td>0.300000</td>\n      <td>5.754483e-17</td>\n      <td>0.005</td>\n      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n    </tr>\n    <tr>\n      <th>357</th>\n      <td>Kobe_1995_TAK-090</td>\n      <td>0.30</td>\n      <td>0.300000</td>\n      <td>4.918324e-16</td>\n      <td>0.010</td>\n      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.7105054312137...</td>\n    </tr>\n    <tr>\n      <th>358</th>\n      <td>Coyote_Lake_1979_G02-050</td>\n      <td>0.30</td>\n      <td>0.231868</td>\n      <td>2.496658e-16</td>\n      <td>0.005</td>\n      <td>[2.7105054312137612e-24, 1.0842021724855043e-2...</td>\n    </tr>\n    <tr>\n      <th>359</th>\n      <td>Northridge_1994_VSP-360</td>\n      <td>0.30</td>\n      <td>0.219967</td>\n      <td>2.458833e-16</td>\n      <td>0.005</td>\n      <td>[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, ...</td>\n    </tr>\n  </tbody>\n</table>\n<p>360 rows Ã— 6 columns</p>\n</div>\n```\n:::\n:::\n\n\n## Comparing multiple motions\n\nThe results of the analyses can be plotted to show trends in total accumulated displacement with $k_y$ for each ground motion in the sample ground motion suite.\n\n::: {#cell-fig_multi_motion .cell execution_count=6}\n``` {.python .cell-code}\nplt.close('all')\nfig, ax = plt.subplots()\n# fig.set_size_inches(10,6)   \nfor key, grp in df.groupby(['motion']):\n    ax.scatter(grp[\"ky\"]/grp[\"k_max\"], grp[\"d_max\"], label=key[0], alpha=0.5)\nax.legend(loc='upper left', bbox_to_anchor=(1, 1))\nax.set_xlim(0,1)\nax.set_yscale('log')\nax.set_ylim(1e-3,1e1)\nax.set_xlabel('$k_y / k_{max}$')\nax.set_ylabel('Maximum Displacement (m)')\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Variation in final displacement with $k_y$ for the sample ground motion suite.](batch_simulations_files/figure-html/fig_multi_motion-output-1.png){#fig_multi_motion width=660 height=467}\n:::\n:::\n\n\n## Variation in a single motion's time history\n\nAlternatively, for any given motion, the displacement time histories for different values of $k_y$ could be of interest. In Figure @fig_variation_single, the results from all the simulations with the `Imperial_Valley_1979_BCR-230` motion are shown. Although a different dimension of the data are being shown, the figure is simply pulling from the the results dataframe used in @fig_multi_motion.\n\n::: {#cell-fig_variation_single .cell execution_count=7}\n``` {.python .cell-code code-fold=\"true\"}\nimport matplotlib.cm as cm\nfrom matplotlib.colors import LogNorm\n\nmotion = \"Imperial_Valley_1979_BCR-230\"\n\nplt.close('all')\n\n# Create a figure and axes\nfig, ax = plt.subplots(figsize=(6, 4))\n\n# Create a color map\ncmap = plt.colormaps['Spectral']#cm.get_cmap('viridis')\nnorm = LogNorm(df['ky'].min(), df['ky'].max())\n\ndt = df[df[\"motion\"]==motion].iloc[0]['dt']\nnpts = df[df[\"motion\"]==motion].iloc[0]['disp'].shape[0]\ntime = np.linspace(0, dt*npts, npts)\n\nfor index, row in df[df[\"motion\"]==motion].iterrows():\n    color = cmap(norm(row['ky']))\n    ax.plot(time, row['disp'], color=color)\n\n# Add a color bar\nsm = cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\ncbar = fig.colorbar(sm, ax=ax, label='ky')\n\n# Set the colorbar ticks and labels\nticks = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7]\ncbar.set_ticks(ticks)\ncbar.set_ticklabels([f'{tick:.2f}' for tick in ticks]) \n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Time')\nax.set_ylabel('Displacement')\nax.set_title(motion)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Variation in cumulative displacement with $k_y$ for the Imperial Valley motion.](batch_simulations_files/figure-html/fig_variation_single-output-1.png){#fig_variation_single width=512 height=373}\n:::\n:::\n\n\n",
    "supporting": [
      "batch_simulations_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}