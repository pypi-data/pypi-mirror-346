{
  "hash": "53cf7799462f5b57cdfbb751308630cc",
  "result": {
    "engine": "jupyter",
    "markdown": "---\npage-navigation: true\nbibliography: references.bib\ntitle: Comparison with SLAMMER (results)\n---\n\n\n\n\n\n\n\nPySLAMMER's rigid, decoupled, and coupled analysis methods are intended to produce sliding block analysis results that match the legacy SLAMMER results. This is an important feature for sliding block displacements, which are used as a performance index (as opposed to providing a direct prediction of actual slope displacement) in practice. Equivalence with legacy results allows new results to be interpreted with reference to historical analyses and experience.\n\n## Approach\n\nTo demonstrate pySLAMMER's equivalence to SLAMMER, we performed several sliding block analyses across a broad parametric space. The three main categories of parameters studied were ground motion, analysis method, and analysis options.\n\n### Ground motion\n\nWe used the motions from pySLAMMER's built-in sample ground motion suite at several scales to capture a reasonable breadth of the familiar key engineering ground motion characteristics (frequency, amplitude, and duration). The acceleration response spectra for the input motion suite are shown in @fig-resp. Additional details on the ground motions are provided on the [ground motion suite page](ground_motion_suite.qmd).\n\n\n::: {#cell-fig-resp .cell execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\n# Navigate to ground motion suite response spectra files\ncurrent_dir = os.getcwd()\nfolder_path = Path(current_dir).resolve().parents[0] / \"tests\" / \"pySLAMMER_suite_resp\"\ncsv_files = list(folder_path.glob(\"*.csv\"))\n\n# Read each CSV file into a DataFrame and store them in a list\nfreq_index = 0\nresp_index = 1\nspectra = {}\nfor csv_file in csv_files:\n    data = np.loadtxt(csv_file, delimiter=\",\", skiprows=2)\n    # convert response from cm/s^2 to g's\n    data[:, resp_index] = data[:, resp_index] / 981\n    spectra[csv_file.name.strip(\".csv\")] = data\n\n# Initialize the plot\nfig, ax = plt.subplots()\nax.set_prop_cycle(cycler(color=plt.cm.tab20.colors))\nfor motion in spectra:\n    ax.plot(\n        1/spectra[motion][:, freq_index],\n        spectra[motion][:, resp_index],\n        label=motion,\n        linewidth=0.5,\n    )\n\nax.text(0.012, 2.75, \"5% damping\")\n# Add labels, legend, and grid\nax.set_xlabel(\"Period (s)\")\nax.set_ylabel(\"Spectral Acceleration (g)\")\nax.set_title(\"Response Spectra\")\nax.set_xscale(\"log\")\nax.set_ylim(0,3)\nax.set_xlim(0.01,100)\n\nax.legend(\n    loc=\"center left\", \n    bbox_to_anchor=(0.6, 0.6), \n    fontsize=\"x-small\", \n    title=\"Ground Motion\", \n    title_fontsize=\"medium\",\n    frameon=False\n)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Acceleration response spectra for input ground motions](results_comp_SLAMMER_files/figure-html/fig-resp-output-1.png){#fig-resp width=596 height=454 fig-align='center'}\n:::\n:::\n\n\n### Analysis methods\n\nThe three rigorous analysis methods that SLAMMER performs are the Rigid, Decoupled, and Coupled methods. Each of these methods, which are briefly described below, are implemented in pySLAMMER and included in this comparison.\n\nRigid Block Analysis\n\n:   Conceptualized by Whitman in 1963 and further developed by Newmark in 1965 (@marcuson1994, @newmark1965), rigid block analysis models a potential landslide mass as a rigid mass on an inclined plane base with a perfectly plastic frictional interface. The rigid block motion matches the base motion exactly until the acceleration of the base exceeds some critical value (the yield acceleration, $k_y$). Once this critical $k_y$ value is reached, the block's acceleration remains constant $k_y$, resulting in relative velocity and displacement between block and base. The relative velocity is calculated by integrating the difference between the block and base accelerations. The displacement accumulated by the block moving down the ramp is calculated by integrating the relative velocity. Sliding stops (i.e., block motion again matches base motion exactly) when the relative velocity reaches zero.\n\nDecoupled Analysis\n\n:   Landslide materials are, of course, not rigid. Except for very shallow, stiff slide masses, the rigid block model does a poor job of approximating the dynamics of a co-seismic landslide system. The decoupled method was developed to provide some way of accounting for the deformation of the slope mass due to shaking (@seed1966, @makdisi1978) . It consists of two distinct (or decoupled, if you will) calculations: *dynamic response* and *rigid sliding*. During the dynamic response phase, the possibility of sliding is ignored while the slope response to strong ground motion is calculated. The average internal acceleration of the slope mass during this first phase is then used as the base input acceleration for the second phase (rigid sliding) which is simply a rigid block analysis.\n\nCoupled Analysis\n\n:   As indicated by the name, coupled analysis takes the two separate calculations from the decoupled analysis and performs them simultaneously. Like the decoupled analysis, the slope mass deforms in response to strong ground motion even before any sliding occurs. Unlike the decoupled method, once the internal average internal acceleration within the slope mass exceeds the yield acceleration, sliding is initiated. During sliding, the acceleration (and therefore the relative velocity and displacement) of the sliding mass above the sliding interface continues to be influenced by the dynamic response of the sliding mass. Sliding stops when the relative velocity of the sliding mass reaches zero. The stop of sliding can introduce an abrupt change in acceleration applied to the sliding mass. Because the dynamic response is being calculated continually through the analysis, the approach to identifying the timing of these abrupt changes will affect the (potential) subsequent sliding events.\n\nDynamic Response\n\n:   The Decoupled and Coupled methods both require the calculation of the slope's dynamic response. The two methods for dynamic response in SLAMMER, which have been carried over to pySLAMMER are *linear elastic* and *equivalent linear*.\n\n### Analysis options\n\nSLAMMER allows users to include a constant $k_y$ value or a variable $k_y$ that changes with accumulated sliding displacement. The $k_y$ -- displacement relationship is stepwise with a table of paired values. \\[purpose\\]. pySLAMMER includes additional options for variable yield acceleration (as an aside).\n\nFor the Decoupled and Coupled analysis methods, the dynamic response of the system is calculated. The dynamic response calculation uses either *linear elastic* or *equivalent linear* assumptions. The minimum input parameters needed for the linear elastic analyses are \\[asdf\\]. For equivalent linear analysis, a reference strain parameter is also needed. Although not explicitly documented, SLAMMER uses XXX modulus reduction and damping.\n\nSeparate entries for the shear wave velocity of the material above and below the slip surface are used to introduce an equivalent foundation radiation damping into the viscous material damping. This happens behind the scenes in SLAMMER by default and cannot be turned off. However, SLAMMER allows for negative values of damping ratio, which can effectively separate the overall damping behavior from the Vs/Vb. Therefore, we include only soil model, Ts/Tm, damping, and reference strain to characterize the variations in dynamic analysis options\n\n## Results\n\nI'd like some static plots and commentary and also a dynamic plot where different dimensions can be explored. Of course, the better the comparison, the more boring this will be.\n\nI think a good way of showing the comparison would be a table of RMS error by magnitude range. Alternatively, setting an absolute thresheold of \"similarity\" would work. Or maybe in addition.\n\n::: {#cell-fig-linear .cell execution_count=3}\n``` {.python .cell-code code-fold=\"true\"}\n# Navigate to ground motion suite response spectra files\ncurrent_dir = os.getcwd()\ndata_path = Path(current_dir).resolve().parents[0] / \"tests\" / \"SLAMMER_results.xlsx\"\n\ndf = import_verification_data(data_path)\ndf[\"kykmax\"] = df[\"ky (g)\"] / df[\"kmax (g)\"]\n\ndfp = df[df[\"kykmax\"] < 1.0]\n\n############\n# pySLAMMER v. SLAMMER\n############\nfig, ax = plt.subplots()\ncmap = plt.cm.viridis  \n\n# Match color values to kykmax values\ncolor_values = dfp[\"kykmax\"] \n\n# Scatter plot with color mapping\nscatter = ax.scatter(\n    dfp[\"SLAMMER\"],  # x-axis values\n    dfp[\"pySLAMMER\"],  # y-axis values\n    c=color_values,  # Numeric values for coloring\n    cmap=cmap,  # Colormap\n    alpha=0.5,  # Transparency\n    marker=\".\",\n)\n\n# Add colorbar\ncbar = plt.colorbar(scatter, ax=ax, alpha=1)\ncbar.set_label(\"Yield Ratio ($k_y/k_{max}$)\")  # Label for the colorbar\n\n\nax.set_xlim(0, 1000)\nax.set_ylim(0, 1000)\n\nplt.grid()\n\nax.set_xlabel(\"SLAMMER displacement (cm)\")\nax.set_ylabel(\"pySLAMMER displacement (cm)\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Linear scale comparison of pySLAMMER and SLAMMER analysis results. At this scale, the differences are too small to be distinguished visually.](results_comp_SLAMMER_files/figure-html/fig-linear-output-1.png){#fig-linear width=587 height=432 fig-align='center'}\n:::\n:::\n\n\n::: {#cell-fig-loglog .cell execution_count=4}\n``` {.python .cell-code code-fold=\"true\"}\nax.set_xscale(\"log\")\nax.set_yscale(\"log\")\nax.set_xlim(1e-3, 1e3)\nax.set_ylim(1e-3, 1e3)\n\nfig\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n![Log-log scale comparison of pySLAMMER and SLAMMER analysis results. At this scale, the small differences become visible. Nevertheless, the match between the two is excellent in the range of engineering interest.](results_comp_SLAMMER_files/figure-html/fig-loglog-output-1.png){#fig-loglog width=583 height=442 fig-align='center'}\n:::\n:::\n\n\n::: {#cell-tab-comparison .cell execution_count=5}\n``` {.python .cell-code code-fold=\"true\"}\nscales = [0.001, 0.01, 0.1, 1, 10, 100 ,1000]\ninterest = [\"no\", \"no\", \"yes\", \"yes\", \"yes\", \"yes\"]\nmatch_quality = [\"moderate\", \"very good\", \"excellent\", \"excellent\", \"excellent\", \"excellent\"]\ncomp = {\n    \"Range\": [],\n    \"Engineering\\nInterest\": [],\n    \"Computation\\nMatch\": [],\n    \"error_95\": [],\n    \"Slope\": [],\n    \"Intercept\": [],\n    \"R_sq\": []\n}\n\nfor i in range(len(scales)-1):\n    segment = dfp[\n        (dfp[\"SLAMMER\"] > scales[i])\n        & (dfp[\"SLAMMER\"] < scales[i+1])\n    ]\n    slope, intercept, r, p, se = ssmstat.linregress(\n        segment[\"SLAMMER\"],\n        segment[\"pySLAMMER\"],\n    )\n    comp[\"Range\"].append(f\"{scales[i]} to {scales[i+1]}\")\n    comp[\"Engineering\\nInterest\"].append(interest[i])\n    comp[\"error_95\"].append(f\"{np.percentile(\n        abs(segment[\"pySLAMMER\"] - segment[\"SLAMMER\"]),\n        95):.2f}\")\n    comp[\"Slope\"].append(f\"{slope:.2f}\")\n    comp[\"Intercept\"].append(f\"{intercept:.2f}\")\n    comp[\"R_sq\"].append(f\"{r**2:.2f}\")\n    comp[\"Computation\\nMatch\"].append(match_quality[i])\n    \n\ntbl = (\n    GT(pd.DataFrame(comp))\n    .tab_header(\n    title = \"pySLAMMER-SLAMMER Results Comparison\",\n    subtitle = \"Computational match by order of displacment magnitude\"\n    )\n    .tab_spanner(\n    label=\"Linear Regression Parameters\",\n    columns=[\"Slope\",\"Intercept\",\"R_sq\"]\n    )\n    .cols_label(\n    Range=html(\"Displacement Range<br>(cm)\"),\n    Intercept=html(\"Intercept<br>(cm)\"),\n    R_sq=html(\"R<sup>2</sup>\"),\n    error_95=html(\"95<sup>th</sup> percentile error<br>(cm)\")\n\n    )\n)\ntbl\n```\n\n::: {#tab-comparison .cell-output .cell-output-display execution_count=5}\n```{=html}\n<div id=\"xklefbqfme\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n#xklefbqfme table {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#xklefbqfme thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#xklefbqfme p { margin: 0; padding: 0; }\n #xklefbqfme .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; }\n #xklefbqfme .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #xklefbqfme .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #xklefbqfme .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #xklefbqfme .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #xklefbqfme .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #xklefbqfme .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #xklefbqfme .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #xklefbqfme .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #xklefbqfme .gt_column_spanner_outer:first-child { padding-left: 0; }\n #xklefbqfme .gt_column_spanner_outer:last-child { padding-right: 0; }\n #xklefbqfme .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n #xklefbqfme .gt_spanner_row { border-bottom-style: hidden; }\n #xklefbqfme .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }\n #xklefbqfme .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n #xklefbqfme .gt_from_md> :first-child { margin-top: 0; }\n #xklefbqfme .gt_from_md> :last-child { margin-bottom: 0; }\n #xklefbqfme .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n #xklefbqfme .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #xklefbqfme .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #xklefbqfme .gt_row_group_first td { border-top-width: 2px; }\n #xklefbqfme .gt_row_group_first th { border-top-width: 2px; }\n #xklefbqfme .gt_striped { background-color: rgba(128,128,128,0.05); }\n #xklefbqfme .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #xklefbqfme .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #xklefbqfme .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #xklefbqfme .gt_left { text-align: left; }\n #xklefbqfme .gt_center { text-align: center; }\n #xklefbqfme .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #xklefbqfme .gt_font_normal { font-weight: normal; }\n #xklefbqfme .gt_font_bold { font-weight: bold; }\n #xklefbqfme .gt_font_italic { font-style: italic; }\n #xklefbqfme .gt_super { font-size: 65%; }\n #xklefbqfme .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #xklefbqfme .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n  <tr class=\"gt_heading\">\n    <td colspan=\"7\" class=\"gt_heading gt_title gt_font_normal\">pySLAMMER-SLAMMER Results Comparison</td>\n  </tr>\n  <tr class=\"gt_heading\">\n    <td colspan=\"7\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\">Computational match by order of displacment magnitude</td>\n  </tr>\n<tr class=\"gt_col_headings gt_spanner_row\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"Range\">Displacement Range<br>(cm)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"Engineering&#10;Interest\">Engineering\nInterest</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"Computation&#10;Match\">Computation\nMatch</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"error_95\">95<sup>th</sup> percentile error<br>(cm)</th>\n  <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"Linear-Regression-Parameters\">\n    <span class=\"gt_column_spanner\">Linear Regression Parameters</span>\n  </th>\n</tr>\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Slope\">Slope</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Intercept\">Intercept<br>(cm)</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"R_sq\">R<sup>2</sup></th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <td class=\"gt_row gt_left\">0.001 to 0.01</td>\n    <td class=\"gt_row gt_left\">no</td>\n    <td class=\"gt_row gt_left\">moderate</td>\n    <td class=\"gt_row gt_right\">0.01</td>\n    <td class=\"gt_row gt_right\">1.06</td>\n    <td class=\"gt_row gt_right\">0.00</td>\n    <td class=\"gt_row gt_right\">0.54</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">0.01 to 0.1</td>\n    <td class=\"gt_row gt_left\">no</td>\n    <td class=\"gt_row gt_left\">very good</td>\n    <td class=\"gt_row gt_right\">0.01</td>\n    <td class=\"gt_row gt_right\">1.00</td>\n    <td class=\"gt_row gt_right\">0.00</td>\n    <td class=\"gt_row gt_right\">0.99</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">0.1 to 1</td>\n    <td class=\"gt_row gt_left\">yes</td>\n    <td class=\"gt_row gt_left\">excellent</td>\n    <td class=\"gt_row gt_right\">0.02</td>\n    <td class=\"gt_row gt_right\">1.00</td>\n    <td class=\"gt_row gt_right\">0.00</td>\n    <td class=\"gt_row gt_right\">1.00</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">1 to 10</td>\n    <td class=\"gt_row gt_left\">yes</td>\n    <td class=\"gt_row gt_left\">excellent</td>\n    <td class=\"gt_row gt_right\">0.07</td>\n    <td class=\"gt_row gt_right\">1.00</td>\n    <td class=\"gt_row gt_right\">0.00</td>\n    <td class=\"gt_row gt_right\">1.00</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">10 to 100</td>\n    <td class=\"gt_row gt_left\">yes</td>\n    <td class=\"gt_row gt_left\">excellent</td>\n    <td class=\"gt_row gt_right\">0.27</td>\n    <td class=\"gt_row gt_right\">1.00</td>\n    <td class=\"gt_row gt_right\">0.00</td>\n    <td class=\"gt_row gt_right\">1.00</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left\">100 to 1000</td>\n    <td class=\"gt_row gt_left\">yes</td>\n    <td class=\"gt_row gt_left\">excellent</td>\n    <td class=\"gt_row gt_right\">0.67</td>\n    <td class=\"gt_row gt_right\">1.00</td>\n    <td class=\"gt_row gt_right\">0.18</td>\n    <td class=\"gt_row gt_right\">1.00</td>\n  </tr>\n</tbody>\n\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\n## Discussion\n\nSome differences should be expected.\n\nTo the extent the pySLAMMER code is doing the same calculations, the differences should be very small.\n\nThe differences should not accumulate with displacement magnitude.\n\n## Conclusions\n\n1.  PySLAMMER is performing the same analysis as SLAMMER.\n2.  Numerical differences are insignificant for engineering purposes, both in research and practice.\n3.  To the extent historical SLAMMER results are well documented, comparison with pySLAMMER results is appropriate.\n\n",
    "supporting": [
      "results_comp_SLAMMER_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}